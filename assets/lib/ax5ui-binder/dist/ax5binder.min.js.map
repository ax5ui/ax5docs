{"version":3,"sources":["ax5binder.js"],"names":["UI","ax5","ui","U","util","addClass","className","cfg","this","instanceId","getGuid","config","model","tmpl","view_target","change_trigger","click_trigger","update_trigger","onerror","_toString","Object","prototype","toString","get_type","O","typeName","window","nodeType","call","get_mix_path","dataPath","index","item_path","get_real_path","_dataPath","path","_path","concat","split","forEach","n","push","replace","join","setModel","_binding","set","value","obj_type","i","this_type","_this","Function","k","find","each","type","toLowerCase","set_els_value","tagName","length","get","onChange","callback","onClick","add","item","list","__ADDED__","t","fragdom","$","mustache","render","content","attr","bind_event_tmpl","container","append","change","that","repeat_path","remove","remove_item","splice","__DELETED__","empty","print_tmpl","update","childAdd","child_path","child_item","_list","childRemove","child_index","childUpdate","childSet","onUpdate","isupdate","val","dom","e","repeat_idx","html","show","off","on","checked","hasItem","new_value","target","origin_value","value_type","setAllow","el","jquery","tagname","data","Date","getTime","tk","ix","callChange","options","console","log","vi","option_matched","selected","AXSelect","bindSelectSetValue","innerText","innerHTML","click","sync_model","isInit","l","jQuery","isPlainObject","@i","@value","findParentNode","getAttribute","item_index","mix_path","trigger","focus","validate","errors","is_validate","pattern","_val","is_error","trim","RegExp","test","number","error","main","arguments","isObject","setConfig","apply"],"mappings":"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","file":"ax5binder.min.js","sourcesContent":["// ax5.ui.binder\n(function () {\n\n    const UI = ax5.ui;\n    const U = ax5.util;\n\n    UI.addClass({\n        className: \"binder\"\n    }, (function () {\n\n        /**\n         * @class ax5binder\n         * @classdesc\n         * @author tom@axisj.com\n         * @example\n         * ```js\n         * var obj = {\n         *     name: \"Thomas Jang\",\n         *     alias: \"tom\",\n         *     tel: \"010-8881-9137\",\n         *     email: \"tom@axisj.com\",\n         *     sex: \"M\",\n         *     hobby: [\"sport\"],\n         *     useYn: \"N\",\n         *     description: \"http://www.axisj.com\",\n         *     list: [\n         *         {\n         *             name: \"thomas\",\n         *             tel: \"010-8881-9000\",\n         *             email: \"tom@axisj.com\",\n         *             sex: \"M\",\n         *             description: \"\",\n         *             child: [{name:\"값1\"},{name:\"값2\"}],\n         *             qty: 10,\n         *             cost: 100\n         *         },\n         *         {\n         *             name: \"thomas\",\n         *             tel: \"010-8881-9000\",\n         *             email: \"tom@axisj.com\",\n         *             sex: \"M\",\n         *             description: \"\",\n         *             child: [{name:\"값1\"},{name:\"값2\"}],\n         *             qty: 20,\n         *             cost: 100\n         *         }\n         * ]\n         * };\n         *\n         * var myBinder = new ax5.ui.binder();\n         * myBinder.setModel(obj, $('#form-target'));\n         * ```\n         */\n        return function() {\n\n            var self = this,\n                cfg;\n\n            this.instanceId = ax5.getGuid();\n            this.config = {};\n            cfg = this.config;\n\n            this.model = {};\n            this.tmpl = {};\n            this.view_target = null;\n            this.change_trigger = {};\n            this.click_trigger = {};\n            this.update_trigger = {};\n            this.onerror = null;\n\n            var\n                _toString = Object.prototype.toString,\n                get_type = function (O) {\n                    var typeName;\n                    if (O != null && O == O.window) {\n                        typeName = \"window\";\n                    }\n                    else if (!!(O && O.nodeType == 1)) {\n                        typeName = \"element\";\n                    }\n                    else if (!!(O && O.nodeType == 11)) {\n                        typeName = \"fragment\";\n                    }\n                    else if (typeof O === \"undefined\") {\n                        typeName = \"undefined\";\n                    }\n                    else if (_toString.call(O) == \"[object Object]\") {\n                        typeName = \"object\";\n                    }\n                    else if (_toString.call(O) == \"[object Array]\") {\n                        typeName = \"array\";\n                    }\n                    else if (_toString.call(O) == \"[object String]\") {\n                        typeName = \"string\";\n                    }\n                    else if (_toString.call(O) == \"[object Number]\") {\n                        typeName = \"number\";\n                    }\n                    else if (_toString.call(O) == \"[object NodeList]\") {\n                        typeName = \"nodelist\";\n                    }\n                    else if (typeof O === \"function\") {\n                        typeName = \"function\";\n                    }\n                    return typeName;\n                },\n                get_mix_path = function (dataPath, index, item_path) {\n                    return dataPath + \"[\" + index + \"]\" + ((item_path == \".\") ? \"\" : \".\" + item_path);\n                },\n                get_real_path = function (_dataPath) {\n                    var path = [];\n                    var _path = [].concat(_dataPath.split(/[\\.\\[\\]]/g));\n                    _path.forEach(function (n) {\n                        if (n !== \"\") path.push(\"[\\\"\" + n.replace(/['\\\"]/g, \"\") + \"\\\"]\");\n                    });\n                    _path = null;\n                    return path.join(\"\");\n                    /*\n                    var path = [];\n                    var _path = [].concat(dataPath.split(/[\\.\\[\\]]/g));\n\n                    _path.forEach(function (n) {\n                        if (n !== \"\") path.push(n);\n                    });\n                    _path = null;\n                    return \"'\" + path.join(\"']['\") + \"'\";\n                    */\n                };\n\n            /**\n             * 바인딩할 자바스크립트 오브젝트로 제이쿼리로 검색된 HTML dom 엘리먼트 에 바인딩합니다. 바인딩된 모델을 반환합니다.\n             * @method ax5binder.setModel\n             * @param {Object} model\n             * @param {jQueryObject} [view_target]\n             * @returns {ax5binder}\n             * @example\n             * ```js\n             * var myModel = new ax5.ui.binder();\n             * myModel.setModel({}, $(\"#...\"));\n             * ```\n             */\n            this.setModel = function (model, view_target) {\n                this.model = model;\n                if (!this.view_target && view_target) {\n                    this.view_target = view_target;\n                    this._binding();\n                }\n                else {\n                    this._binding(\"update\");\n                }\n                return this;\n            };\n\n            /**\n             * data_path에 값을 변경한다. value의 타입은 (String, Number, Array, Object)를 지원.\n             * @method ax5binder.set\n             * @param {String} dataPath\n             * @param {Object} value\n             * @returns {ax5binder}\n             * @example\n             * ```js\n             * myModel.set(\"name\", \"Seowoo\");\n             * myModel.set(\"obj.path\", {a:1});\n             * ```\n             */\n            this.set = function (dataPath, value) {\n                var _this = this, obj_type, i, this_type;\n\n                (Function(\"val\", \"this\" + get_real_path(dataPath) + \" = val;\")).call(this.model, value);\n                obj_type = get_type(value);\n\n                if (obj_type == \"object\") {\n                    for (var k in value) {\n                        this.set(dataPath + \".\" + k, value[k]);\n                    }\n                }\n                else if (obj_type == \"array\") {\n                    this.view_target.find('[data-ax-path=\"' + (dataPath) + '\"]').each(function () {\n                        this_type = (this.type || \"\").toLowerCase();\n                        if (this_type == \"checkbox\" || this_type == \"radio\")\n                            _this.set_els_value(this, this.tagName.toLowerCase(), this_type, value, dataPath, \"change\");\n                    });\n                    i = value.length;\n                    while (i--) {\n                        this.set(dataPath + \"[\" + i + \"]\", value[i]);\n                    }\n                }\n                else {\n                    // apply data value to els\n                    this.view_target.find('[data-ax-path=\"' + (dataPath) + '\"]').each(function () {\n                        _this.set_els_value(this, this.tagName.toLowerCase(), (this.type || \"\").toLowerCase(), value, dataPath, \"change\");\n                    });\n                }\n                return this;\n            };\n\n            /**\n             * data_path에 값을 반환한다. data_path 가 없으면 전체 Object를 반환한다.\n             * @method ax5binder.get\n             * @param dataPath\n             * @returns {*}\n             */\n            this.get = function (dataPath) {\n                if (typeof dataPath == \"undefined\") {\n                    return this.model;\n                }\n                else {\n                    return (Function(\"\", \"return this\" + get_real_path(dataPath) + \";\")).call(this.model);\n                }\n            };\n\n\n            /**\n             * data_path에 값이 변경되는 이벤트 발생하면 callback을 실행합니다.\n             * @method ax5binder.onChange\n             * @param dataPath\n             * @param callback\n             * @returns {ax5binder}\n             * @example\n             * ```js\n             * myModel.onChange(\"name\", function () {\n             *       console.log(this);\n             *       // el: domElement - 변경이 발생한 엘리먼트, 엘리먼트로 부터 다양한 속성을 추출할 수 있다.\n             *       // jquery : jQueryObject\n             *       // tagname: \"input\"\n             *       // value: \"changed value\"\n             *       console.log(this.el.id);\n             *   });\n             *   myModel.onChange(\"*\", function (n) {\n             *       console.log(n);\n             *       // console.log(this); 와 동일\n             *   });\n             * ```\n             */\n            this.onChange = function (dataPath, callback) {\n                this.change_trigger[dataPath || \"*\"] = callback;\n                return this;\n            };\n\n            /**\n             * data-ax-repeat=\"list\" 속성이 부여된 엘리먼트 하위에 태그중에 data-ax-repeat-click 속성을 가진 아이템에 대해 클릭 이벤트 발생하면 callback을 실행합니다.\n             * @method ax5binder.onClick\n             * @param dataPath\n             * @param callback\n             * @returns {ax5binder}\n             * @example\n             * ```js\n             * myModel.onclick(\"list\", function () {\n             *       console.log(this);\n             *       // el: domElement\n             *       // jquery: jQueryObject\n             *       // item: Object - repeat item\n             *       // item_index: \"0\" - index of item\n             *       // item_path: \"list[0]\" - repeat data_path\n             *       // repeat_path: \"list\"\n             *       // tagname: \"button\"\n             *       // value: \"add\"\n             *   });\n             * ```\n             */\n            this.onClick = function (dataPath, callback) {\n                this.click_trigger[dataPath] = callback;\n                return this;\n            };\n\n            /**\n             * data-ax-repeat=\"list\" 하위아이템을 추가합니다.\n             * @method ax5binder.add\n             * @param dataPath\n             * @param item\n             * @returns {ax5binder}\n             * @example\n             * ```js\n             * myModel.add(\"list\", {a:1});\n             * ```\n             */\n            this.add = function (dataPath, item) {\n                var list = (Function(\"\", \"return this\" + get_real_path(dataPath) + \";\")).call(this.model);\n                var tmpl = this.tmpl[dataPath];\n                item['@i'] = list.length;\n                item['@r'] = list.length;\n                item.__ADDED__ = true;\n                (Function(\"val\", \"this\" + get_real_path(dataPath) + \".push(val);\")).call(this.model, item);\n\n                // 다중 템플릿 처리\n                for (var t in tmpl) {\n                    var fragdom = $(ax5.mustache.render(tmpl[t].content, item));\n                    fragdom.attr(\"data-ax-repeat-path\", dataPath);\n                    fragdom.attr(\"data-ax-repeat-i\", item['@i']);\n                    this.bind_event_tmpl(fragdom, dataPath);\n                    tmpl[t].container.append(fragdom);\n                }\n\n                this.change(\"*\");\n\n                var callback = this.update_trigger[dataPath];\n                if (callback) {\n                    var that = {\n                        repeat_path: dataPath,\n                        tmpl       : tmpl,\n                        list       : list\n                    };\n                    callback.call(that, that);\n                }\n\n                return this;\n            };\n\n            /**\n             * data-ax-repeat=\"list\" 하위 아이템을 제거합니다. 단! 이 때 ADDED 값을 가진 아이템은 제거하고 그렇지 않은 아이템은 DELETED 값을 아이템에 추가합니다.\n             * @method ax5binder.remove\n             * @param dataPath\n             * @param index\n             * @returns {ax5binder}\n             * @example\n             * ```js\n             * myModel.remove(\"list\", 0);\n             * ```\n             */\n            this.remove = function (dataPath, index) {\n                var list = (Function(\"\", \"return this\" + get_real_path(dataPath) + \";\")).call(this.model);\n                var tmpl = this.tmpl[dataPath];\n                if (typeof index == \"undefined\") index = list.length - 1;\n                var remove_item = list[index];\n                if (remove_item.__ADDED__) {\n                    list.splice(index, 1);\n                }\n                else {\n                    list[index].__DELETED__ = true;\n                }\n\n                for (var t in tmpl) {\n                    tmpl[t].container.empty();\n                    this.print_tmpl(dataPath, tmpl[t]);\n                }\n\n                this.change(\"*\");\n\n                var callback = this.update_trigger[dataPath];\n                if (callback) {\n                    var that = {\n                        repeat_path: dataPath,\n                        tmpl       : tmpl,\n                        list       : list\n                    };\n                    callback.call(that, that);\n                }\n\n                return this;\n            };\n\n            /**\n             * data-ax-repeat=\"list\" 하위 아이템을 교체합니다.\n             * @method ax5binder.update\n             * @param dataPath\n             * @param index\n             * @param item\n             * @returns {ax5binder}\n             * @example\n             * ```js\n             * myModel.update(\"list\", 0, {a:1});\n             * ```\n             */\n            this.update = function (dataPath, index, item) {\n                var list = (Function(\"\", \"return this\" + get_real_path(dataPath) + \";\")).call(this.model);\n                var tmpl = this.tmpl[dataPath];\n                if (typeof index != \"undefined\" && item) list.splice(index, 1, item);\n\n                for (var t in tmpl) {\n                    tmpl[t].container.empty();\n                    this.print_tmpl(dataPath, tmpl[t]);\n                }\n\n                this.change(\"*\");\n\n                var callback = this.update_trigger[dataPath];\n                if (callback) {\n                    var that = {\n                        repeat_path: dataPath,\n                        tmpl       : tmpl,\n                        list       : list\n                    };\n                    callback.call(that, that);\n                }\n\n                return this;\n            };\n\n            /**\n             * @method ax5binder.childAdd\n             * @param dataPath\n             * @param index\n             * @param child_path\n             * @param child_item\n             */\n            this.childAdd = function (dataPath, index, child_path, child_item) {\n                var _list = (Function(\"\", \"return this\" + get_real_path(dataPath) + \";\")).call(this.model);\n                var list = (Function(\"\", \"return this\" + get_real_path(dataPath) + \"[\" + index + \"].\" + child_path + \";\")).call(this.model);\n                child_item.__ADDED__ = true;\n                list.push(child_item);\n                this.update(dataPath, index, _list[index]);\n            };\n\n            /**\n             * ax5binder.childRemove\n             * @param dataPath\n             * @param index\n             * @param child_path\n             * @param child_index\n             */\n            this.childRemove = function (dataPath, index, child_path, child_index) {\n                var _list = (Function(\"\", \"return this\" + get_real_path(dataPath) + \";\")).call(this.model);\n                var list = (Function(\"\", \"return this\" + get_real_path(dataPath) + \"[\" + index + \"].\" + child_path + \";\")).call(this.model);\n                var remove_item = list[child_index];\n                if (remove_item.__ADDED__) {\n                    list.splice(child_index, 1);\n                }\n                else {\n                    list[child_index].__DELETED__ = true;\n                }\n                this.update(dataPath, index, _list[index]);\n            };\n\n            /**\n             * @method ax5binder.childUpdate\n             * @param dataPath\n             * @param index\n             * @param child_path\n             * @param child_index\n             * @param child_item\n             */\n            this.childUpdate = function (dataPath, index, child_path, child_index, child_item) {\n                var _list = (Function(\"\", \"return this\" + get_real_path(dataPath) + \";\")).call(this.model);\n                var list = (Function(\"\", \"return this\" + get_real_path(dataPath) + \"[\" + index + \"].\" + child_path + \";\")).call(this.model);\n                list[child_index] = child_item;\n                this.update(dataPath, index, _list[index]);\n            };\n\n            /**\n             * @method ax5binder.childSet\n             * @param dataPath\n             * @param index\n             * @param child_path\n             * @param value\n             * @returns {ax5binder}\n             */\n            this.childSet = function (dataPath, index, child_path, value) {\n                var _this = this, i;\n                (Function(\"val\", \"this\" + get_real_path(dataPath) + \"[\" + index + \"].\" + child_path + \" = val;\")).call(this.model, value);\n\n                // apply data value to els\n                this.view_target.find('[data-ax-repeat=\"' + (dataPath) + '\"]').find('[data-ax-repeat-i=\"' + index + '\"]').find('[data-ax-item-path=\"' + child_path + '\"]').each(function () {\n                    _this.set_els_value(this, this.tagName.toLowerCase(), (this.type || \"\").toLowerCase(), value, dataPath + \"[\" + index + \"].\" + child_path);\n                });\n                return this;\n            };\n\n            /**\n             * @method ax5binder.onUpdate\n             * @param dataPath\n             * @param callback\n             * @returns {ax5binder}\n             * @example\n             * ```js\n             *  this.model.onupdate(\"moderator\", function () {\n             *      $('#moderator-add').val('');\n             *      $moderator.find('[data-role-user-btn]')\n             *          .unbind(\"click\")\n             *          .bind(\"click\", role_user_btn_onclick);\n             *  });\n             * ```\n             */\n            this.onUpdate = function (dataPath, callback) {\n                this.update_trigger[dataPath] = callback;\n                return this;\n            };\n\n\n            this._binding = function (isupdate) {\n                var _this = this;\n\n                // apply data value to els\n                this.view_target.find('[data-ax-path]').each(function () {\n                    var dom = $(this), dataPath = dom.attr(\"data-ax-path\"), this_type = (this.type || \"\").toLowerCase();\n\n                    var val;\n                    try {\n                        val = (Function(\"\", \"return this\" + get_real_path(dataPath) + \";\")).call(_this.model);\n                    } catch (e) {\n                        /**\n                         * onerror를 선언 한 경우에만 에러 출력\n                         * */\n                        if (_this.onerror) _this.onerror(\"not found target [model.\" + get_real_path(dataPath) + \"]\");\n                    }\n\n                    _this.set_els_value(this, this.tagName.toLowerCase(), this_type, val || \"\", dataPath);\n                });\n\n                if (typeof isupdate == \"undefined\") {\n                    // collect tmpl\n                    this.view_target.find('[data-ax-repeat]').each(function () {\n                        var dom = $(this), dataPath = dom.attr(\"data-ax-repeat\"), repeat_idx = dom.attr(\"data-ax-repeat-idx\");\n\n                        if (typeof _this.tmpl[dataPath] == \"undefined\") _this.tmpl[dataPath] = {};\n                        if (typeof repeat_idx != \"undefined\") {\n                            _this.tmpl[dataPath][repeat_idx] = {\n                                container: dom, content: dom.find(\"script\").html()\n                            };\n                        }\n                        else {\n                            _this.tmpl[dataPath][\"0\"] = {\n                                container: dom, content: dom.find(\"script\").html()\n                            };\n                        }\n                        //dom.empty().show();\n                        dom.empty();\n                    });\n                }\n                else {\n                    this.view_target.find('[data-ax-repeat]').each(function () {\n                        var dom = $(this);\n                        dom.empty().show();\n                    });\n                }\n\n                // binding event to els\n                this.view_target.find('[data-ax-path]').off(\"change.axbinder\").on(\"change.axbinder\", function (e) {\n\n                    var\n                        i,\n                        hasItem = false,\n                        checked,\n                        new_value = [],\n                        dom = $(e.target),\n                        dataPath = dom.attr(\"data-ax-path\"),\n                        origin_value = (Function(\"\", \"return this\" + get_real_path(dataPath) + \";\")).call(_this.model),\n                        this_type = (this.type || \"\").toLowerCase(),\n                        value_type = get_type(origin_value),\n                        setAllow = true\n                        ;\n\n\n                    if (value_type == \"object\" || value_type == \"array\") {\n                        setAllow = false;\n                    }\n\n                    if (this_type == \"checkbox\") {\n                        // 동일한 체크박스가 여러개 인지 판단합니다.\n                        if (_this.view_target.find('[data-ax-path=\"' + (dataPath) + '\"]').length > 1) {\n\n                            if (get_type(origin_value) != \"array\") {\n                                if (typeof origin_value === \"undefined\" || origin_value == \"\") origin_value = [];\n                                else origin_value = [].concat(origin_value);\n                            }\n                            i = origin_value.length, hasItem = false, checked = this.checked;\n                            while (i--) {\n                                if (origin_value[i] == this.value) {\n                                    hasItem = true;\n                                }\n                            }\n\n                            if (checked) {\n                                if (!hasItem) origin_value.push(this.value);\n                            }\n                            else {\n                                i = origin_value.length;\n                                while (i--) {\n                                    if (origin_value[i] == this.value) {\n                                        //hasItemIndex = i;\n                                    }\n                                    else {\n                                        new_value.push(origin_value[i]);\n                                    }\n                                }\n                                origin_value = new_value;\n                            }\n                        }\n                        else {\n                            origin_value = (this.checked) ? this.value : \"\";\n                        }\n\n                        (Function(\"val\", \"this\" + get_real_path(dataPath) + \" = val;\")).call(_this.model, origin_value);\n                        _this.change(dataPath, {\n                            el: this, jquery: dom, tagname: this.tagName.toLowerCase(), value: origin_value\n                        });\n                    }\n                    else {\n                        if (setAllow) {\n                            (Function(\"val\", \"this\" + get_real_path(dataPath) + \" = val;\")).call(_this.model, this.value);\n                            _this.change(dataPath, {\n                                el: this, jquery: dom, tagname: this.tagName.toLowerCase(), value: this.value\n                            });\n                        }\n                    }\n\n                    dom.data(\"changedTime\", (new Date()).getTime());\n                });\n                /*\n                 this.view_target.find('[data-ax-path]').unbind(\"blur.axbinder\").bind(\"blur.axbinder\", function (e) {\n                 var dom = $(e.target);\n                 if (typeof dom.data(\"changedTime\") == \"undefined\" || dom.data(\"changedTime\") < (new Date()).getTime() - 10) dom.trigger(\"change\");\n                 });\n                 */\n\n                //_this.tmpl\n                var callback;\n                for (var tk in _this.tmpl) {\n                    for (var ix in _this.tmpl[tk]) {\n                        // console.log(_this.tmpl[tk][ix].content);\n                        this.print_tmpl(tk, _this.tmpl[tk][ix], \"isInit\");\n                    }\n\n                    if (callback = this.update_trigger[tk]) {\n                        var that = {\n                            repeat_path: tk,\n                            tmpl       : _this.tmpl[tk],\n                            list       : (Function(\"\", \"return this.\" + tk + \";\")).call(this.model)\n                        };\n                        callback.call(that, that);\n                    }\n                }\n            };\n\n            this.set_els_value = function (el, tagname, type, value, dataPath, callChange) {\n                if (typeof value === \"undefined\") value = [];\n                else value = [].concat(value);\n                var options, i;\n\n                if (tagname == \"input\") {\n                    if (type == \"checkbox\" || type == \"radio\") {\n                        i = value.length;\n                        var checked = false;\n                        try {\n                            if (i > 0) {\n                                while (i--) {\n                                    if (typeof value[i] !== \"undefined\" && el.value === value[i].toString()) {\n                                        checked = true;\n                                    }\n                                }\n                            }\n                        } catch (e) {\n                            console.log(e);\n                        }\n\n                        el.checked = checked;\n                    }\n                    else {\n                        el.value = value.join('');\n                    }\n                }\n                else if (tagname == \"select\") {\n                    options = el.options, i = options.length;\n                    var vi, option_matched = false;\n\n                    while (i--) {\n                        vi = value.length;\n                        while (vi--) {\n                            if (typeof value[vi] !== \"undefined\" && options[i].value === value[vi].toString()) {\n                                options[i].selected = true;\n                                option_matched = true;\n                                break;\n                            }\n                        }\n                        if (option_matched) break;\n                    }\n                    if (!option_matched) {\n                        if (options[0]) {\n                            options[0].selected = true;\n                            (Function(\"val\", \"this\" + get_real_path(dataPath) + \" = val;\")).call(this.model, options[0].value);\n                        }\n                        else {\n                            (Function(\"val\", \"this\" + get_real_path(dataPath) + \" = val;\")).call(this.model, \"\");\n                        }\n                    }\n\n                    if (window.AXSelect) { // AXISJ 사용가능\n                        $(typeof value !== \"undefined\" && el).bindSelectSetValue(value[value.length - 1]);\n                    }\n                }\n                else if (tagname == \"textarea\") {\n                    el.value = value.join('') || \"\";\n                }\n                else {\n                    if (el.innerText) {\n                        el.innerText = value.join(\"\");\n                    }\n                    else {\n                        el.innerHTML = value.join(\"\");\n                    }\n                }\n\n                if (callChange) {\n                    this.change(dataPath, {el: el, tagname: tagname, value: value});\n                }\n                return this;\n            };\n\n            this.change = function (dataPath, that) {\n                var callback = this.change_trigger[dataPath];\n                if (callback) {\n                    callback.call(that, that);\n                }\n                if (dataPath != \"*\" && this.change_trigger[\"*\"]) {\n                    this.change_trigger[\"*\"].call(that, that);\n                }\n            };\n\n            this.click = function (dataPath, that) {\n                var callback = this.click_trigger[dataPath];\n                if (callback) {\n                    callback.call(that, that);\n                }\n            };\n\n            this.sync_model = function () {\n\n            };\n\n            this.print_tmpl = function (dataPath, tmpl, isInit) {\n                var list = (Function(\"\", \"return this\" + get_real_path(dataPath) + \";\")).call(this.model);\n                if (list && get_type(list) == \"array\") {\n                    for (var i = 0, l = list.length; i < l; i++) {\n                        var item = list[i];\n                        if (jQuery.isPlainObject(item)) {\n                            item['@i'] = i;\n                            item['@r'] = i;\n                            if (i === 0) item['@first'] = true;\n                        }\n                        else {\n                            item = {\n                                \"@i\"    : i,\n                                \"@value\": item\n                            };\n                            if (i === 0) item['@first'] = true;\n                            console.log(item);\n                        }\n\n                        if (!item.__DELETED__) {\n                            var fragdom = $(ax5.mustache.render(tmpl.content, item));\n                            fragdom.attr(\"data-ax-repeat-path\", dataPath);\n                            fragdom.attr(\"data-ax-repeat-i\", item['@i']);\n                            this.bind_event_tmpl(fragdom, dataPath);\n                            tmpl.container.append(fragdom);\n                        }\n                    }\n                }\n            };\n\n            this.bind_event_tmpl = function (target, dataPath) {\n                var _this = this, index = target.attr(\"data-ax-repeat-i\");\n                var list = (Function(\"\", \"return this\" + get_real_path(dataPath) + \";\")).call(this.model);\n\n                target.find('[data-ax-repeat-click]')\n                    .off(\"click.axbinder\")\n                    .on(\"click.axbinder\", function (e) {\n                        var target = ax5.util.findParentNode(e.target, function (el) {\n                            return el.getAttribute(\"data-ax-repeat-click\");\n                        });\n                        if (target) {\n                            var dom = $(target), value = dom.attr(\"data-ax-repeat-click\"), repeat_path = dom.attr(\"data-ax-repeat-path\");\n                            var that = {\n                                el         : target,\n                                jquery     : dom,\n                                tagname    : target.tagName.toLowerCase(),\n                                value      : value,\n                                repeat_path: dataPath,\n                                item       : list[index],\n                                item_index : index,\n                                item_path  : dataPath + \"[\" + index + \"]\"\n                            };\n                            _this.click(dataPath, that);\n                        }\n                    });\n\n                // apply data value to els\n                target.find('[data-ax-item-path]').each(function () {\n                    var dom = $(this),\n                        item_path = dom.attr(\"data-ax-item-path\"),\n                        mix_path = get_mix_path(dataPath, index, item_path),\n                        val,\n                        this_type = (this.type || \"\").toLowerCase();\n\n                    try {\n                        val = (Function(\"\", \"return this.\" + mix_path + \";\")).call(_this.model);\n                    } catch (e) {\n                        /**\n                         * onerror를 선언 한 경우에만 에러 출력\n                         * */\n                        if (_this.onerror) _this.onerror(\"not found target [model.\" + mix_path + \"]\");\n                    }\n                    //if (typeof val !== \"undefined\") _this.set_els_value(this, this.tagName.toLowerCase(), this_type, val, mix_path);\n                    _this.set_els_value(this, this.tagName.toLowerCase(), this_type, val || \"\", mix_path);\n                });\n\n                // binding event to els\n                target.find('[data-ax-item-path]')\n                    .off(\"change.axbinder\")\n                    .on(\"change.axbinder\", function (e) {\n                        var i,\n                            hasItem = false,\n                            checked,\n                            new_value = [],\n                            this_type = (this.type || \"\").toLowerCase(),\n                            dom = $(e.target),\n                            item_path = dom.attr(\"data-ax-item-path\"),\n                            mix_path = get_mix_path(dataPath, index, item_path),\n                            origin_value = (Function(\"\", \"return this.\" + mix_path + \";\")).call(_this.model),\n                            value_type = get_type(origin_value),\n                            setAllow = true\n                            ;\n\n                        if (value_type == \"object\" || value_type == \"array\") {\n                            setAllow = false;\n                        }\n\n                        if (this_type == \"checkbox\") {\n                            if (target.find('[data-ax-item-path=\"' + item_path + '\"]').length > 1) {\n                                if (get_type(origin_value) != \"array\") {\n                                    if (typeof origin_value === \"undefined\" || origin_value == \"\") origin_value = [];\n                                    else origin_value = [].concat(origin_value);\n                                }\n                                i = origin_value.length, hasItem = false, checked = this.checked;\n                                while (i--) {\n                                    if (origin_value[i] == this.value) {\n                                        hasItem = true;\n                                    }\n                                }\n\n                                if (checked) {\n                                    if (!hasItem) origin_value.push(this.value);\n                                }\n                                else {\n                                    i = origin_value.length;\n                                    while (i--) {\n                                        if (origin_value[i] == this.value) {\n                                            //hasItemIndex = i;\n                                        }\n                                        else {\n                                            new_value.push(origin_value[i]);\n                                        }\n                                    }\n                                    origin_value = new_value;\n                                }\n                            }\n                            else {\n                                origin_value = (this.checked) ? this.value : \"\";\n                            }\n\n                            (Function(\"val\", \"this.\" + mix_path + \" = val;\")).call(_this.model, origin_value);\n                            _this.change(mix_path, {\n                                el: this, jquery: dom, tagname: this.tagName.toLowerCase(), value: origin_value\n                            });\n                        }\n                        else {\n                            if (setAllow) {\n                                (Function(\"val\", \"this.\" + mix_path + \" = val;\")).call(_this.model, this.value);\n                                _this.change(mix_path, {\n                                    el: this, jquery: dom, tagname: this.tagName.toLowerCase(), value: this.value\n                                });\n                            }\n                        }\n\n                        dom.data(\"changedTime\", (new Date()).getTime());\n                    });\n\n                target.find('[data-ax-item-path]')\n                    .off(\"blur.axbinder\")\n                    .on(\"blur.axbinder\", function (e) {\n                        var dom = $(e.target);\n                        if (typeof dom.data(\"changedTime\") == \"undefined\" || dom.data(\"changedTime\") < (new Date()).getTime() - 10) dom.trigger(\"change\");\n                    });\n            };\n\n            /**\n             * @method ax5binder.focus\n             * @param dataPath\n             * @returns {ax5binder}\n             */\n            this.focus = function (dataPath) {\n                this.view_target.find('[data-ax-path=\"' + (dataPath) + '\"]').focus();\n                //this.view_target.find('[data-ax-item-path=\"' + get_real_path(dataPath) + '\"]').focus();\n                return this;\n            };\n\n            /**\n             * @method ax5binder.validate\n             * @returns {*}\n             * @example\n             * ```html\n             * <input type=\"text\" data-ax-path=\"q\" data-ax-validate=\"required\" title=\"이름\" maxlength=\"8\" value=\"\"/>\n             * ```\n             * ```js\n             * var rs = myModel.validate(), _s;\n             * console.log(rs); // 결과를 체크 해보세요\n             * if(rs.error) {\n             *      _s = rs.error[0].jquery.attr(\"title\");\n             *      alert(\"\" + _s + \"(은)는 필수 입력사항입니다.\" + _s + \"(을)를 입력하세요\");\n             *      rs.error[0].el.focus();\n             *      return;\n             *  }\n             * ```\n             */\n            this.validate = function () {\n                var _this = this;\n                var errors = [];\n                this.view_target.find('[data-ax-path]').each(function () {\n                    var dom = $(this), \n                        dataPath = dom.attr(\"data-ax-path\"), \n                        is_validate = dom.attr(\"data-ax-validate\"),\n                        pattern = dom.attr(\"pattern\");\n                    \n                    if (is_validate) {\n                        var val, _val, is_error;\n\n                        val = (Function(\"\", \"return this\" + get_real_path(dataPath) + \";\")).call(_this.model);\n                        if (typeof val === \"undefined\" || val === null) val = \"\";\n                        _val = val.toString();\n                        is_error = false;\n\n                        if (is_validate == \"required\" && _val.trim() == \"\") {\n                            is_error = true;\n                        }\n                        else if(is_validate == \"pattern\"){\n                            is_error = !(new RegExp(pattern)).test(_val);\n                        }\n                        else if(is_validate == \"email\"){\n                            is_error = !(/[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/).test(_val);\n                        }\n                        else if (!(/\\D.?/g).test(is_validate) && _val.trim().length < is_validate.number()) {\n                            is_error = true;\n                        }\n\n                        if (is_error) {\n                            errors.push({\n                                type    : is_validate,\n                                dataPath: dataPath,\n                                el      : this,\n                                jquery  : dom,\n                                value   : val\n                            });\n                        }\n                    }\n                });\n                this.view_target.find('[data-ax-repeat-path]').each(function () {\n\n                    var dom = $(this),\n                        dataPath = dom.attr(\"data-ax-repeat-path\"),\n                        repeat_idx = dom.attr(\"data-ax-repeat-i\");\n\n                    dom.find('[data-ax-validate]').each(function () {\n                        var dom = $(this), is_validate = dom.attr(\"data-ax-validate\"), item_path = dom.attr(\"data-ax-item-path\");\n                        var val = (Function(\"\", \"return this\" + get_real_path(dataPath) + \"[\" + repeat_idx + \"].\" + item_path + \";\")).call(_this.model);\n                        if (typeof val === \"undefined\") val = \"\";\n                        var _val = val.toString();\n\n                        if (is_validate) {\n                            var is_error = false;\n                            if (is_validate == \"required\" && _val.trim() == \"\") {\n                                is_error = true;\n                            }\n                            else if(is_validate == \"pattern\"){\n                                is_error = !(new RegExp(pattern)).test(_val);\n                            }\n                            else if(is_validate == \"email\"){\n                                is_error = !(/[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/).test(_val);\n                            }\n                            else if (!(/\\D.?/g).test(is_validate) && _val.trim().length < is_validate.number()) {\n                                is_error = true;\n                            }\n\n                            if (is_error) {\n                                errors.push({\n                                    type    : is_validate,\n                                    dataPath: dataPath,\n                                    el      : this,\n                                    jquery  : dom,\n                                    value   : val\n                                });\n                            }\n                        }\n                    });\n                });\n\n                if (errors.length > 0) {\n                    return {\n                        error: errors\n                    }\n                }\n                else {\n                    return {};\n                }\n\n            };\n\n\n            // 클래스 생성자\n            this.main = (function () {\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                }\n            }).apply(this, arguments);\n\n        };\n    })());\n\n})();"]}