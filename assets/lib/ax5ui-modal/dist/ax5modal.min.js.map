{"version":3,"sources":["ax5modal.js","ax5modal-tmpl.js"],"names":["UI","ax5","ui","U","util","MODAL","addClass","className","self","this","cfg","ENM","mousedown","info","supportTouch","mousemove","mouseup","getMousePosition","e","mouseObj","changedTouches","clientX","clientY","instanceId","getGuid","config","id","position","left","top","margin","minimizePosition","clickEventName","theme","width","height","closeToEsc","disableDrag","disableResize","animateTime","iframe","activeModal","watingModal","$","onStateChanged","opts","that","eventProcessor","resize","onResize","call","move","state","getContent","modalId","data","header","fullScreen","styles","iframeLoadingMsg","zIndex","absolute","param","tmpl","get","open","callback","jQuery","document","body","append","root","find","align","css","attr","method","target","action","url","on","hide","bind","show","submit","window","onkeyup","event","btnOnClick","off","isFullScreen","isButton","findParentNode","_target","getAttribute","mousePosition","moveModal","stopEvent","originalEvent","resizeModal","k","srcElement","key","value","btns","dialogId","btnTarget","onClick","keyCode","eventKeys","ESC","close","alignProcessor","top-left","top-right","bottom-left","bottom-right","center-middle","modalZIndex","modalOffset","modalBox","outerWidth","outerHeight","windowBox","scrollLeft","modalConfig","scrollTop","getResizerPosition","__dx","__dy","minX","maxX","minY","maxY","resizerBg","resizer","setModalPosition","box","offset","removeClass","remove","removeAttr","resizerType","resizerProcessor","minHeight","shiftKey","altKey","bottom","minWidth","right","cursorType","cursor","extend","headerHeight","unbind","init","tryCount","setTimeout","$iframe","iframeObject","idoc","contentDocument","contentWindow","children","each","innerHTML","CollectGarbage","minimized","minimize","originalHeight","restore","undefined","setModalConfig","_config","_fullScreen","isFunction","main","modal_instance","push","arguments","isObject","setConfig","apply","modal","content","tmplName","columnKeys","mustache","render"],"mappings":"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","file":"ax5modal.min.js","sourcesContent":["/*\n * Copyright (c) 2016. tom@axisj.com\n * - github.com/thomasjang\n * - www.axisj.com\n */\n\n// ax5.ui.modal\n(function () {\n\n    const UI = ax5.ui;\n    const U = ax5.util;\n    let MODAL;\n\n    UI.addClass({\n        className: \"modal\"\n    }, (function () {\n        /**\n         * @class ax5modal\n         * @alias ax5.ui.modal\n         * @author tom@axisj.com\n         */\n        return function () {\n            let self = this,\n                cfg,\n                ENM = {\n                    \"mousedown\": (ax5.info.supportTouch) ? \"touchstart\" : \"mousedown\",\n                    \"mousemove\": (ax5.info.supportTouch) ? \"touchmove\" : \"mousemove\",\n                    \"mouseup\": (ax5.info.supportTouch) ? \"touchend\" : \"mouseup\"\n                },\n                getMousePosition = function (e) {\n                    let mouseObj = e;\n                    if ('changedTouches' in e && e.changedTouches) {\n                        mouseObj = e.changedTouches[0];\n                    }\n                    return {\n                        clientX: mouseObj.clientX,\n                        clientY: mouseObj.clientY\n                    }\n                };\n\n            this.instanceId = ax5.getGuid();\n            this.config = {\n                id: 'ax5-modal-' + this.instanceId,\n                position: {\n                    left: \"center\",\n                    top: \"middle\",\n                    margin: 10\n                },\n                minimizePosition: \"bottom-right\",\n                clickEventName: \"click\", //(('ontouchstart' in document.documentElement) ? \"touchstart\" : \"click\"),\n                theme: 'default',\n                width: 300,\n                height: 400,\n                closeToEsc: true,\n                disableDrag: false,\n                disableResize: false,\n                animateTime: 250,\n                iframe: false\n            };\n            this.activeModal = null;\n            this.watingModal = false;\n            this.$ = {}; // UI inside of the jQuery object store\n\n            cfg = this.config; // extended config copy cfg\n\n            let onStateChanged = function (opts, that) {\n                    var eventProcessor = {\n                        \"resize\": function (that) {\n                            if (opts && opts.onResize) {\n                                opts.onResize.call(that, that);\n                            }\n                            else if (this.onResize) {\n                                this.onResize.call(that, that);\n                            }\n                        },\n                        \"move\": function () {\n\n                        }\n                    };\n                    if (that.state in eventProcessor) {\n                        eventProcessor[that.state].call(this, that);\n                    }\n\n                    if (opts && opts.onStateChanged) {\n                        opts.onStateChanged.call(that, that);\n                    }\n                    else if (this.onStateChanged) {\n                        this.onStateChanged.call(that, that);\n                    }\n                    return true;\n                },\n                getContent = function (modalId, opts) {\n                    let data = {\n                        modalId: modalId,\n                        theme: opts.theme,\n                        header: opts.header,\n                        fullScreen: (opts.fullScreen ? \"fullscreen\" : \"\"),\n                        styles: \"\",\n                        iframe: opts.iframe,\n                        iframeLoadingMsg: opts.iframeLoadingMsg,\n                        disableResize: opts.disableResize\n                    };\n\n                    if (opts.zIndex) {\n                        data.styles += \"z-index:\" + opts.zIndex + \";\";\n                    }\n                    if (opts.absolute) {\n                        data.styles += \"position:absolute;\";\n                    }\n\n                    if (data.iframe && typeof data.iframe.param === \"string\") {\n                        data.iframe.param = ax5.util.param(data.iframe.param);\n                    }\n\n                    return MODAL.tmpl.get.call(this, \"content\", data, {});\n                },\n                open = function (opts, callback) {\n                    let that;\n                    jQuery(document.body).append(getContent.call(this, opts.id, opts));\n\n                    this.activeModal = jQuery('#' + opts.id);\n                    // 파트수집\n                    this.$ = {\n                        \"root\": this.activeModal,\n                        \"header\": this.activeModal.find('[data-modal-els=\"header\"]'),\n                        \"body\": this.activeModal.find('[data-modal-els=\"body\"]')\n                    };\n\n                    if (opts.iframe) {\n                        this.$[\"iframe-wrap\"] = this.activeModal.find('[data-modal-els=\"iframe-wrap\"]');\n                        this.$[\"iframe\"] = this.activeModal.find('[data-modal-els=\"iframe\"]');\n                        this.$[\"iframe-form\"] = this.activeModal.find('[data-modal-els=\"iframe-form\"]');\n                        this.$[\"iframe-loading\"] = this.activeModal.find('[data-modal-els=\"iframe-loading\"]');\n                    }\n                    else {\n                        this.$[\"body-frame\"] = this.activeModal.find('[data-modal-els=\"body-frame\"]');\n                    }\n\n                    //- position 정렬\n                    this.align();\n\n                    that = {\n                        self: this,\n                        id: opts.id,\n                        theme: opts.theme,\n                        width: opts.width,\n                        height: opts.height,\n                        state: \"open\",\n                        $: this.$\n                    };\n\n                    if (opts.iframe) {\n                        this.$[\"iframe-wrap\"].css({height: opts.height});\n                        this.$[\"iframe\"].css({height: opts.height});\n\n                        // iframe content load\n                        this.$[\"iframe-form\"].attr({\"method\": opts.iframe.method});\n                        this.$[\"iframe-form\"].attr({\"target\": opts.id + \"-frame\"});\n                        this.$[\"iframe-form\"].attr({\"action\": opts.iframe.url});\n                        this.$[\"iframe\"].on(\"load\", (function () {\n                            that.state = \"load\";\n                            if (opts.iframeLoadingMsg) {\n                                this.$[\"iframe-loading\"].hide();\n                            }\n                            onStateChanged.call(this, opts, that);\n                        }).bind(this));\n                        if (!opts.iframeLoadingMsg) {\n                            this.$[\"iframe\"].show();\n                        }\n                        this.$[\"iframe-form\"].submit();\n                    }\n\n                    if (callback) callback.call(that, that);\n\n                    if (!this.watingModal) {\n                        onStateChanged.call(this, opts, that);\n                    }\n\n                    // bind key event\n                    if (opts.closeToEsc) {\n                        jQuery(window).bind(\"keydown.ax-modal\", (function (e) {\n                            onkeyup.call(this, e || window.event);\n                        }).bind(this));\n                    }\n\n                    jQuery(window).bind(\"resize.ax-modal\", (function (e) {\n                        this.align(null, e || window.event);\n                    }).bind(this));\n\n                    this.activeModal\n                        .on(cfg.clickEventName, \"[data-modal-header-btn]\", (function (e) {\n                            btnOnClick.call(this, e || window.event, opts);\n                        }).bind(this));\n\n                    this.$.header\n                        .off(ENM[\"mousedown\"])\n                        .off(\"dragstart\")\n                        .on(ENM[\"mousedown\"], function (e) {\n                            if (opts.isFullScreen) return false;\n\n                            /// 이벤트 필터링 추가 : 버튼엘리먼트로 부터 발생된 이벤트이면 moveModal 시작하지 않도록 필터링\n                            let isButton = U.findParentNode(e.target, function (_target) {\n                                if (_target.getAttribute(\"data-modal-header-btn\")) {\n                                    return true;\n                                }\n                            });\n\n                            if (!isButton && opts.disableDrag != true) {\n                                self.mousePosition = getMousePosition(e);\n                                moveModal.on.call(self);\n                            }\n                        })\n                        .on(\"dragstart\", function (e) {\n                            U.stopEvent(e.originalEvent);\n                            return false;\n                        });\n\n                    this.activeModal\n                        .off(ENM[\"mousedown\"])\n                        .off(\"dragstart\")\n                        .on(ENM[\"mousedown\"], \"[data-ax5modal-resizer]\", function (e) {\n                            if (opts.disableDrag || opts.isFullScreen) return false;\n                            self.mousePosition = getMousePosition(e);\n                            resizeModal.on.call(self, this.getAttribute(\"data-ax5modal-resizer\"));\n                        })\n                        .on(\"dragstart\", function (e) {\n                            U.stopEvent(e.originalEvent);\n                            return false;\n                        });\n                },\n                btnOnClick = function (e, opts, callback, target, k) {\n                    let that;\n                    if (e.srcElement) e.target = e.srcElement;\n\n                    target = U.findParentNode(e.target, function (target) {\n                        if (target.getAttribute(\"data-modal-header-btn\")) {\n                            return true;\n                        }\n                    });\n\n                    if (target) {\n                        k = target.getAttribute(\"data-modal-header-btn\");\n\n                        that = {\n                            self: this,\n                            key: k, value: opts.header.btns[k],\n                            dialogId: opts.id,\n                            btnTarget: target\n                        };\n\n                        if (opts.header.btns[k].onClick) {\n                            opts.header.btns[k].onClick.call(that, k);\n                        }\n                    }\n\n                    that = null;\n                    opts = null;\n                    callback = null;\n                    target = null;\n                    k = null;\n                },\n                onkeyup = function (e) {\n                    if (e.keyCode == ax5.info.eventKeys.ESC) {\n                        this.close();\n                    }\n                },\n                alignProcessor = {\n                    \"top-left\": function () {\n                        this.align({left: \"left\", top: \"top\"});\n                    },\n                    \"top-right\": function () {\n                        this.align({left: \"right\", top: \"top\"});\n                    },\n                    \"bottom-left\": function () {\n                        this.align({left: \"left\", top: \"bottom\"});\n                    },\n                    \"bottom-right\": function () {\n                        this.align({left: \"right\", top: \"bottom\"});\n                    },\n                    \"center-middle\": function () {\n                        this.align({left: \"center\", top: \"middle\"});\n                    }\n                },\n                moveModal = {\n                    \"on\": function () {\n                        let modalZIndex = this.activeModal.css(\"z-index\"),\n                            modalOffset = this.activeModal.position(),\n                            modalBox = {\n                                width: this.activeModal.outerWidth(), height: this.activeModal.outerHeight()\n                            },\n                            windowBox = {\n                                width: jQuery(window).width(),\n                                height: jQuery(window).height(),\n                                scrollLeft: (self.modalConfig.absolute) ? 0 : jQuery(document).scrollLeft(),\n                                scrollTop: (self.modalConfig.absolute) ? 0 : jQuery(document).scrollTop(),\n                            },\n                            getResizerPosition = function (e) {\n                                self.__dx = e.clientX - self.mousePosition.clientX;\n                                self.__dy = e.clientY - self.mousePosition.clientY;\n\n                                if (minX > modalOffset.left + self.__dx) {\n                                    self.__dx = -modalOffset.left;\n                                }\n                                else if (maxX < modalOffset.left + self.__dx) {\n                                    self.__dx = (maxX) - modalOffset.left;\n                                }\n\n                                if (minY > modalOffset.top + self.__dy) {\n                                    self.__dy = -modalOffset.top;\n                                }\n                                else if (maxY < modalOffset.top + self.__dy) {\n                                    self.__dy = (maxY) - modalOffset.top;\n                                }\n\n                                return {\n                                    left: modalOffset.left + self.__dx + windowBox.scrollLeft,\n                                    top: modalOffset.top + self.__dy + windowBox.scrollTop\n                                };\n                            };\n\n                        let minX = 0, maxX = windowBox.width - modalBox.width,\n                            minY = 0, maxY = windowBox.height - modalBox.height;\n\n                        self.__dx = 0; // 변화량 X\n                        self.__dy = 0; // 변화량 Y\n\n                        // self.resizerBg : body 가 window보다 작을 때 문제 해결을 위한 DIV\n                        self.resizerBg = jQuery('<div class=\"ax5modal-resizer-background\" ondragstart=\"return false;\"></div>');\n                        self.resizer = jQuery('<div class=\"ax5modal-resizer\" ondragstart=\"return false;\"></div>');\n                        self.resizerBg.css({zIndex: modalZIndex});\n                        self.resizer.css({\n                            left: modalOffset.left + windowBox.scrollLeft,\n                            top: modalOffset.top + windowBox.scrollTop,\n                            width: modalBox.width,\n                            height: modalBox.height,\n                            zIndex: modalZIndex + 1\n                        });\n\n                        jQuery(document.body)\n                            .append(self.resizerBg)\n                            .append(self.resizer);\n                        self.activeModal.addClass(\"draged\");\n\n                        jQuery(document.body)\n                            .on(ENM[\"mousemove\"] + \".ax5modal-move-\" + this.instanceId, function (e) {\n                                self.resizer.css(getResizerPosition(e));\n                            })\n                            .on(ENM[\"mouseup\"] + \".ax5modal-move-\" + this.instanceId, function (e) {\n                                moveModal.off.call(self);\n                            })\n                            .on(\"mouseleave.ax5modal-move-\" + this.instanceId, function (e) {\n                                moveModal.off.call(self);\n                            });\n\n                        jQuery(document.body)\n                            .attr('unselectable', 'on')\n                            .css('user-select', 'none')\n                            .on('selectstart', false);\n                    },\n                    \"off\": function () {\n                        let setModalPosition = function () {\n                            let box = this.resizer.offset();\n                            if (!this.modalConfig.absolute) {\n                                box.left -= jQuery(document).scrollLeft();\n                                box.top -= jQuery(document).scrollTop();\n                            }\n                            this.activeModal.css(box);\n                            this.modalConfig.left = box.left;\n                            this.modalConfig.top = box.top;\n\n                            box = null;\n                        };\n\n                        this.activeModal.removeClass(\"draged\");\n                        setModalPosition.call(this);\n\n                        this.resizer.remove();\n                        this.resizer = null;\n                        this.resizerBg.remove();\n                        this.resizerBg = null;\n                        //this.align();\n\n                        jQuery(document.body)\n                            .off(ENM[\"mousemove\"] + \".ax5modal-move-\" + this.instanceId)\n                            .off(ENM[\"mouseup\"] + \".ax5modal-move-\" + this.instanceId)\n                            .off(\"mouseleave.ax5modal-move-\" + this.instanceId);\n\n                        jQuery(document.body)\n                            .removeAttr('unselectable')\n                            .css('user-select', 'auto')\n                            .off('selectstart');\n\n                        onStateChanged.call(this, self.modalConfig, {\n                            self: this,\n                            state: \"move\"\n                        });\n\n                    }\n                },\n                resizeModal = {\n                    \"on\": function (resizerType) {\n                        let modalZIndex = this.activeModal.css(\"z-index\"),\n                            modalOffset = this.activeModal.position(),\n                            modalBox = {\n                                width: this.activeModal.outerWidth(), height: this.activeModal.outerHeight()\n                            },\n                            windowBox = {\n                                width: jQuery(window).width(),\n                                height: jQuery(window).height(),\n                                scrollLeft: (this.modalConfig.absolute) ? 0 : jQuery(document).scrollLeft(),\n                                scrollTop: (this.modalConfig.absolute) ? 0 : jQuery(document).scrollTop(),\n                            },\n                            resizerProcessor = {\n                                \"top\": function (e) {\n\n                                    if (minHeight > modalBox.height - self.__dy) {\n                                        self.__dy = modalBox.height - (minHeight);\n                                    }\n\n                                    if (e.shiftKey) {\n\n                                        if (minHeight > modalBox.height - (self.__dy * 2)) {\n                                            self.__dy = (modalBox.height - (minHeight)) / 2;\n                                        }\n\n                                        return {\n                                            left: modalOffset.left,\n                                            top: modalOffset.top + self.__dy,\n                                            width: modalBox.width,\n                                            height: modalBox.height - (self.__dy * 2)\n                                        };\n                                    }\n                                    else if (e.altKey) {\n\n                                        if (minHeight > modalBox.height - (self.__dy * 2)) {\n                                            self.__dy = (modalBox.height - (minHeight)) / 2;\n                                        }\n\n                                        return {\n                                            left: modalOffset.left + self.__dy,\n                                            top: modalOffset.top + self.__dy,\n                                            width: modalBox.width - (self.__dy * 2),\n                                            height: modalBox.height - (self.__dy * 2)\n                                        };\n                                    }\n                                    else {\n                                        return {\n                                            left: modalOffset.left,\n                                            top: modalOffset.top + self.__dy,\n                                            width: modalBox.width,\n                                            height: modalBox.height - self.__dy,\n                                        };\n                                    }\n                                },\n                                \"bottom\": function (e) {\n\n                                    if (minHeight > modalBox.height + self.__dy) {\n                                        self.__dy = -modalBox.height + (minHeight);\n                                    }\n\n                                    if (e.shiftKey) {\n\n                                        if (minHeight > modalBox.height + (self.__dy * 2)) {\n                                            self.__dy = (-modalBox.height + (minHeight)) / 2;\n                                        }\n\n                                        return {\n                                            left: modalOffset.left,\n                                            top: modalOffset.top - self.__dy,\n                                            width: modalBox.width,\n                                            height: modalBox.height + (self.__dy * 2)\n                                        };\n                                    }\n                                    else if (e.altKey) {\n\n                                        if (minHeight > modalBox.height + (self.__dy * 2)) {\n                                            self.__dy = (-modalBox.height + (minHeight)) / 2;\n                                        }\n\n                                        return {\n                                            left: modalOffset.left - self.__dy,\n                                            top: modalOffset.top - self.__dy,\n                                            width: modalBox.width + (self.__dy * 2),\n                                            height: modalBox.height + (self.__dy * 2),\n                                        };\n                                    }\n                                    else {\n                                        return {\n                                            left: modalOffset.left,\n                                            top: modalOffset.top,\n                                            width: modalBox.width,\n                                            height: modalBox.height + self.__dy,\n                                        };\n                                    }\n                                },\n                                \"left\": function (e) {\n\n                                    if (minWidth > modalBox.width - self.__dx) {\n                                        self.__dx = modalBox.width - (minWidth);\n                                    }\n\n                                    if (e.shiftKey) {\n\n                                        if (minWidth > modalBox.width - (self.__dx * 2)) {\n                                            self.__dx = (modalBox.width - (minWidth)) / 2;\n                                        }\n\n                                        return {\n                                            left: modalOffset.left + self.__dx,\n                                            top: modalOffset.top,\n                                            width: modalBox.width - (self.__dx * 2),\n                                            height: modalBox.height\n                                        };\n                                    }\n                                    else if (e.altKey) {\n\n                                        if (minWidth > modalBox.width - (self.__dx * 2)) {\n                                            self.__dx = (modalBox.width - (minWidth)) / 2;\n                                        }\n\n                                        return {\n                                            left: modalOffset.left + self.__dx,\n                                            top: modalOffset.top + self.__dx,\n                                            width: modalBox.width - (self.__dx * 2),\n                                            height: modalBox.height - (self.__dx * 2),\n                                        };\n                                    }\n                                    else {\n                                        return {\n                                            left: modalOffset.left + self.__dx,\n                                            top: modalOffset.top,\n                                            width: modalBox.width - self.__dx,\n                                            height: modalBox.height,\n                                        };\n                                    }\n                                },\n                                \"right\": function (e) {\n\n                                    if (minWidth > modalBox.width + self.__dx) {\n                                        self.__dx = -modalBox.width + (minWidth);\n                                    }\n\n                                    if (e.shiftKey) {\n\n                                        if (minWidth > modalBox.width + (self.__dx * 2)) {\n                                            self.__dx = (-modalBox.width + (minWidth)) / 2;\n                                        }\n\n                                        return {\n                                            left: modalOffset.left - self.__dx,\n                                            top: modalOffset.top,\n                                            width: modalBox.width + (self.__dx * 2),\n                                            height: modalBox.height,\n                                        };\n                                    }\n                                    else if (e.altKey) {\n\n                                        if (minWidth > modalBox.width + (self.__dx * 2)) {\n                                            self.__dx = (-modalBox.width + (minWidth)) / 2;\n                                        }\n\n                                        return {\n                                            left: modalOffset.left - self.__dx,\n                                            top: modalOffset.top - self.__dx,\n                                            width: modalBox.width + (self.__dx * 2),\n                                            height: modalBox.height + (self.__dx * 2),\n                                        };\n                                    }\n                                    else {\n                                        return {\n                                            left: modalOffset.left,\n                                            top: modalOffset.top,\n                                            width: modalBox.width + self.__dx,\n                                            height: modalBox.height,\n                                        };\n                                    }\n                                },\n                                \"top-left\": function (e) {\n\n                                    if (minWidth > modalBox.width - self.__dx) {\n                                        self.__dx = modalBox.width - (minWidth);\n                                    }\n\n                                    if (minHeight > modalBox.height - self.__dy) {\n                                        self.__dy = modalBox.height - (minHeight);\n                                    }\n\n                                    if (e.shiftKey || e.altKey) {\n\n                                        if (minHeight > modalBox.height - (self.__dy * 2)) {\n                                            self.__dy = (modalBox.height - (minHeight)) / 2;\n                                        }\n                                        if (minWidth > modalBox.width - (self.__dx * 2)) {\n                                            self.__dx = (modalBox.width - (minWidth)) / 2;\n                                        }\n\n                                        return {\n                                            left: modalOffset.left + self.__dx,\n                                            top: modalOffset.top + self.__dy,\n                                            width: modalBox.width - (self.__dx * 2),\n                                            height: modalBox.height - (self.__dy * 2),\n                                        };\n                                    }\n                                    else {\n\n                                        if (minHeight > modalBox.height - (self.__dy * 2)) {\n                                            self.__dy = (modalBox.height - (minHeight)) / 2;\n                                        }\n                                        if (minWidth > modalBox.width - (self.__dx * 2)) {\n                                            self.__dx = (modalBox.width - (minWidth)) / 2;\n                                        }\n\n                                        return {\n                                            left: modalOffset.left + self.__dx,\n                                            top: modalOffset.top + self.__dy,\n                                            width: modalBox.width - self.__dx,\n                                            height: modalBox.height - self.__dy,\n                                        };\n                                    }\n                                },\n                                \"top-right\": function (e) {\n\n                                    if (minWidth > modalBox.width + self.__dx) {\n                                        self.__dx = -modalBox.width + (minWidth);\n                                    }\n\n                                    if (minHeight > modalBox.height - self.__dy) {\n                                        self.__dy = modalBox.height - (minHeight);\n                                    }\n\n                                    if (e.shiftKey || e.altKey) {\n\n                                        if (minHeight > modalBox.height - (self.__dy * 2)) {\n                                            self.__dy = (modalBox.height - (minHeight)) / 2;\n                                        }\n                                        if (minWidth > modalBox.width + (self.__dx * 2)) {\n                                            self.__dx = (-modalBox.width + (minWidth)) / 2;\n                                        }\n\n                                        return {\n                                            left: modalOffset.left - self.__dx,\n                                            top: modalOffset.top + self.__dy,\n                                            width: modalBox.width + (self.__dx * 2),\n                                            height: modalBox.height - (self.__dy * 2),\n                                        };\n                                    }\n                                    else {\n                                        return {\n                                            left: modalOffset.left,\n                                            top: modalOffset.top + self.__dy,\n                                            width: modalBox.width + self.__dx,\n                                            height: modalBox.height - self.__dy,\n                                        };\n                                    }\n                                },\n                                \"bottom-left\": function (e) {\n\n                                    if (minWidth > modalBox.width - self.__dx) {\n                                        self.__dx = modalBox.width - (minWidth);\n                                    }\n\n                                    if (minHeight > modalBox.height + self.__dy) {\n                                        self.__dy = -modalBox.height + (minHeight);\n                                    }\n\n                                    if (e.shiftKey || e.altKey) {\n                                        if (minWidth > modalBox.width - (self.__dx * 2)) {\n                                            self.__dx = (modalBox.width - (minWidth)) / 2;\n                                        }\n                                        if (minHeight > modalBox.height + (self.__dy * 2)) {\n                                            self.__dy = (-modalBox.height + (minHeight)) / 2;\n                                        }\n                                        return {\n                                            left: modalOffset.left + self.__dx,\n                                            top: modalOffset.top - self.__dy,\n                                            width: modalBox.width - (self.__dx * 2),\n                                            height: modalBox.height + (self.__dy * 2),\n                                        };\n                                    }\n                                    else {\n                                        return {\n                                            left: modalOffset.left + self.__dx,\n                                            top: modalOffset.top,\n                                            width: modalBox.width - self.__dx,\n                                            height: modalBox.height + self.__dy,\n                                        };\n                                    }\n                                },\n                                \"bottom-right\": function (e) {\n\n                                    if (minWidth > modalBox.width + self.__dx) {\n                                        self.__dx = -modalBox.width + (minWidth);\n                                    }\n\n                                    if (minHeight > modalBox.height + self.__dy) {\n                                        self.__dy = -modalBox.height + (minHeight);\n                                    }\n\n                                    if (e.shiftKey || e.altKey) {\n                                        if (minWidth > modalBox.width + (self.__dx * 2)) {\n                                            self.__dx = (-modalBox.width + (minWidth)) / 2;\n                                        }\n                                        if (minHeight > modalBox.height + (self.__dy * 2)) {\n                                            self.__dy = (-modalBox.height + (minHeight)) / 2;\n                                        }\n                                        return {\n                                            left: modalOffset.left - self.__dx,\n                                            top: modalOffset.top - self.__dy,\n                                            width: modalBox.width + (self.__dx * 2),\n                                            height: modalBox.height + (self.__dy * 2),\n                                        };\n                                    }\n                                    else {\n                                        return {\n                                            left: modalOffset.left,\n                                            top: modalOffset.top,\n                                            width: modalBox.width + self.__dx,\n                                            height: modalBox.height + self.__dy,\n                                        };\n                                    }\n                                },\n                            },\n                            getResizerPosition = function (e) {\n                                self.__dx = e.clientX - self.mousePosition.clientX;\n                                self.__dy = e.clientY - self.mousePosition.clientY;\n\n                                return resizerProcessor[resizerType](e);\n                            };\n\n                        if (!this.modalConfig.absolute) {\n                            modalOffset.left += windowBox.scrollLeft;\n                            modalOffset.top += windowBox.scrollTop;\n                        }\n\n                        let minWidth = 100,\n                            minHeight = 100;\n\n                        let cursorType = {\n                            \"top\": \"row-resize\",\n                            \"bottom\": \"row-resize\",\n                            \"left\": \"col-resize\",\n                            \"right\": \"col-resize\",\n                            \"top-left\": \"nwse-resize\",\n                            \"top-right\": \"nesw-resize\",\n                            \"bottom-left\": \"nesw-resize\",\n                            \"bottom-right\": \"nwse-resize\",\n                        };\n\n                        self.__dx = 0; // 변화량 X\n                        self.__dy = 0; // 변화량 Y\n\n                        // self.resizerBg : body 가 window보다 작을 때 문제 해결을 위한 DIV\n                        self.resizerBg = jQuery('<div class=\"ax5modal-resizer-background\" ondragstart=\"return false;\"></div>');\n                        self.resizer = jQuery('<div class=\"ax5modal-resizer\" ondragstart=\"return false;\"></div>');\n                        self.resizerBg.css({\n                            zIndex: modalZIndex,\n                            cursor: cursorType[resizerType]\n                        });\n                        self.resizer.css({\n                            left: modalOffset.left,\n                            top: modalOffset.top,\n                            width: modalBox.width,\n                            height: modalBox.height,\n                            zIndex: modalZIndex + 1,\n                            cursor: cursorType[resizerType]\n                        });\n                        jQuery(document.body)\n                            .append(self.resizerBg)\n                            .append(self.resizer);\n                        self.activeModal.addClass(\"draged\");\n\n                        jQuery(document.body)\n                            .bind(ENM[\"mousemove\"] + \".ax5modal-resize-\" + this.instanceId, function (e) {\n                                self.resizer.css(getResizerPosition(e));\n                            })\n                            .bind(ENM[\"mouseup\"] + \".ax5modal-resize-\" + this.instanceId, function (e) {\n                                resizeModal.off.call(self);\n                            })\n                            .bind(\"mouseleave.ax5modal-resize-\" + this.instanceId, function (e) {\n                                resizeModal.off.call(self);\n                            });\n\n                        jQuery(document.body)\n                            .attr('unselectable', 'on')\n                            .css('user-select', 'none')\n                            .bind('selectstart', false);\n                    },\n                    \"off\": function () {\n                        let setModalPosition = function () {\n                            let box = this.resizer.offset();\n                            jQuery.extend(box, {\n                                width: this.resizer.width(),\n                                height: this.resizer.height(),\n                            });\n                            if (!this.modalConfig.absolute) {\n                                box.left -= jQuery(document).scrollLeft();\n                                box.top -= jQuery(document).scrollTop();\n                            }\n                            this.activeModal.css(box);\n\n                            this.modalConfig.left = box.left;\n                            this.modalConfig.top = box.top;\n                            this.modalConfig.width = box.width;\n                            this.modalConfig.height = box.height;\n                            this.$[\"body\"].css({height: box.height - this.modalConfig.headerHeight});\n                            if (this.modalConfig.iframe) {\n                                this.$[\"iframe-wrap\"].css({height: box.height - this.modalConfig.headerHeight});\n                                this.$[\"iframe\"].css({height: box.height - this.modalConfig.headerHeight});\n                            }\n\n                            box = null;\n                        };\n\n                        this.activeModal.removeClass(\"draged\");\n                        setModalPosition.call(this);\n\n                        this.resizer.remove();\n                        this.resizer = null;\n                        this.resizerBg.remove();\n                        this.resizerBg = null;\n\n                        onStateChanged.call(this, self.modalConfig, {\n                            self: this,\n                            state: \"resize\"\n                        });\n\n                        jQuery(document.body)\n                            .unbind(ENM[\"mousemove\"] + \".ax5modal-resize-\" + this.instanceId)\n                            .unbind(ENM[\"mouseup\"] + \".ax5modal-resize-\" + this.instanceId)\n                            .unbind(\"mouseleave.ax5modal-resize-\" + this.instanceId);\n\n                        jQuery(document.body)\n                            .removeAttr('unselectable')\n                            .css('user-select', 'auto')\n                            .unbind('selectstart');\n\n                    }\n                };\n\n            /// private end\n\n            /**\n             * Preferences of modal UI\n             * @method ax5modal.setConfig\n             * @param {Object} config - 클래스 속성값\n             * @param {Number} [config.zIndex]\n             * @param {Object} [config.position]\n             * @param {String} [config.position.left=\"center\"]\n             * @param {String} [config.position.top=\"middle\"]\n             * @param {Number} [config.position.margin=10]\n             * @param {String} [config.minimizePosition=\"bottom-right\"]\n             * @param {Number} [config.width=300]\n             * @param {Number} [config.height=400]\n             * @param {Boolean} [config.closeToEsc=true]\n             * @param {Boolean} [config.absolute=false]\n             * @param {Boolean} [config.disableDrag=false]\n             * @param {Boolean} [config.disableResize=false]\n             * @param {Number} [config.animateTime=250]\n             * @param {Function} [config.fullScreen]\n             * @param {Function} [config.onStateChanged] - `onStateChanged` function can be defined in setConfig method or new ax5.ui.modal initialization method. However, you can us to define an event function after initialization, if necessary\n             * @param {Function} [config.onResize]\n             * @returns {ax5modal}\n             * @example\n             * ```js\n             * var modal = new ax5.ui.modal({\n             *     iframeLoadingMsg: '<i class=\"fa fa-spinner fa-5x fa-spin\" aria-hidden=\"true\"></i>',\n             *     header: {\n             *         title: \"MODAL TITLE\",\n             *         btns: {\n             *             minimize: {\n             *                 label: '<i class=\"fa fa-minus-circle\" aria-hidden=\"true\"></i>', onClick: function () {\n             *                     modal.minimize();\n             *                 }\n             *             },\n             *             maximize: {\n             *                 label: '<i class=\"fa fa-plus-circle\" aria-hidden=\"true\"></i>', onClick: function () {\n             *                     modal.maximize();\n             *                 }\n             *             },\n             *             close: {\n             *                 label: '<i class=\"fa fa-times-circle\" aria-hidden=\"true\"></i>', onClick: function () {\n             *                     modal.close();\n             *                 }\n             *             }\n             *         }\n             *     }\n             * });\n             *\n             * modal.open({\n             *     width: 800,\n             *     height: 600,\n             *     fullScreen: function(){\n             *         return ($(window).width() < 600);\n             *     },\n             *     iframe: {\n             *         method: \"get\",\n             *         url: \"http://chequer-app:2017/html/login.html\",\n             *         param: \"callback=modalCallback\"\n             *     },\n             *     onStateChanged: function(){\n             *          console.log(this);\n             *     },\n             *     onResize: function(){\n             *          console.log(this);\n             *     }\n             * });\n             * ```\n             */\n            //== class body start\n            this.init = function () {\n                this.onStateChanged = cfg.onStateChanged;\n                this.onResize = cfg.onResize;\n            };\n\n            /**\n             * open the modal\n             * @method ax5modal.open\n             * @returns {ax5modal}\n             * @example\n             * ```\n             * modal.open();\n             * modal.open({\n             *  width: 500,\n             *  height: 500\n             * });\n             * moaal.open({}, function(){\n             *  console.log(this);\n             * });\n             * ```\n             */\n            this.open = function (opts, callback, tryCount) {\n                if (typeof tryCount === \"undefined\") tryCount = 0;\n                if (!this.activeModal) {\n                    opts = self.modalConfig = jQuery.extend(true, {}, cfg, opts);\n                    open.call(this, opts, callback);\n                    this.watingModal = false;\n                }\n                else if (tryCount < 3) {\n                    // 3번까지 재 시도\n                    this.watingModal = true;\n                    setTimeout((function () {\n                        this.open(opts, callback, tryCount + 1);\n                    }).bind(this), cfg.animateTime);\n                }\n                return this;\n            };\n\n            /**\n             * close the modal\n             * @method ax5modal.close\n             * @returns {ax5modal}\n             * @example\n             * ```\n             * my_modal.close();\n             * ```\n             */\n            this.close = function (opts) {\n                if (this.activeModal) {\n                    opts = self.modalConfig;\n                    this.activeModal.addClass(\"destroy\");\n                    jQuery(window).unbind(\"keydown.ax-modal\");\n                    jQuery(window).unbind(\"resize.ax-modal\");\n\n                    setTimeout((function () {\n                        if (this.activeModal) {\n\n                            // 프레임 제거\n                            if (opts.iframe) {\n                                var $iframe = this.$[\"iframe\"]; // iframe jQuery Object\n                                if ($iframe) {\n                                    var iframeObject = $iframe.get(0),\n                                        idoc = (iframeObject.contentDocument) ? iframeObject.contentDocument : iframeObject.contentWindow.document;\n\n                                    try {\n                                        $(idoc.body).children().each(function () {\n                                            $(this).remove();\n                                        });\n                                    } catch (e) {\n\n                                    }\n                                    idoc.innerHTML = \"\";\n                                    $iframe\n                                        .attr('src', 'about:blank')\n                                        .remove();\n\n                                    // force garbarge collection for IE only\n                                    window.CollectGarbage && window.CollectGarbage();\n                                }\n                            }\n\n                            this.activeModal.remove();\n                            this.activeModal = null;\n                        }\n                        // 모달 오픈 대기중이면 닫기 상태 전달 안함.\n                        if (!this.watingModal) {\n                            onStateChanged.call(this, opts, {\n                                self: this,\n                                state: \"close\"\n                            });\n                        }\n                    }).bind(this), cfg.animateTime);\n                }\n\n                this.minimized = false; // hoksi\n\n                return this;\n            };\n\n            /**\n             * @method ax5modal.minimize\n             * @returns {ax5modal}\n             */\n            this.minimize = (function () {\n\n                return function (minimizePosition) {\n\n                    if (this.minimized !== true) {\n\n                        var opts = self.modalConfig;\n                        if (typeof minimizePosition === \"undefined\") minimizePosition = cfg.minimizePosition;\n\n                        this.minimized = true;\n                        this.$.body.hide();\n                        self.modalConfig.originalHeight = opts.height;\n                        self.modalConfig.height = 0;\n                        alignProcessor[minimizePosition].call(this);\n\n                        onStateChanged.call(this, opts, {\n                            self: this,\n                            state: \"minimize\"\n                        });\n                    }\n\n                    return this;\n                };\n            })();\n\n            /**\n             * @method ax5modal.restore\n             * @returns {ax5modal}\n             */\n            this.restore = function () {\n                var opts = self.modalConfig;\n                if (this.minimized) {\n                    this.minimized = false;\n                    this.$.body.show();\n                    self.modalConfig.height = self.modalConfig.originalHeight;\n                    self.modalConfig.originalHeight = undefined;\n\n                    this.align({left: \"center\", top: \"middle\"});\n                    onStateChanged.call(this, opts, {\n                        self: this,\n                        state: \"restore\"\n                    });\n                }\n                return this;\n            };\n\n            /**\n             * setCSS\n             * @method ax5modal.css\n             * @param {Object} css -\n             * @returns {ax5modal}\n             */\n            this.css = function (css) {\n                if (this.activeModal && !self.fullScreen) {\n                    this.activeModal.css(css);\n                    if (typeof css.width !== \"undefined\") {\n                        self.modalConfig.width = css.width;\n                    }\n                    if (typeof css.height !== \"undefined\") {\n                        self.modalConfig.height = css.height;\n                    }\n\n                    this.align();\n                }\n                return this;\n            };\n\n            /**\n             * @method ax5modal.setModalConfig\n             * @param _config\n             * @returns {ax5.ui.ax5modal}\n             */\n            this.setModalConfig = function (_config) {\n                self.modalConfig = jQuery.extend({}, self.modalConfig, _config);\n                this.align();\n                return this;\n            };\n\n            /**\n             * @method ax5modal.align\n             * @param position\n             * @param e\n             * @returns {ax5modal}\n             * @example\n             * ```js\n             * modal.align({left:\"center\", top:\"middle\"});\n             * modal.align({left:\"left\", top:\"top\", margin: 20});\n             * ```\n             */\n            this.align = (function () {\n\n                return function (position, e) {\n                    if (!this.activeModal) return this;\n\n                    var opts = self.modalConfig,\n                        box = {\n                            width: opts.width,\n                            height: opts.height\n                        };\n\n                    var fullScreen = opts.isFullScreen = (function (_fullScreen) {\n                        if (typeof _fullScreen === \"undefined\") {\n                            return false;\n                        } else if (U.isFunction(_fullScreen)) {\n                            return _fullScreen();\n                        }\n                    })(opts.fullScreen);\n\n                    if (fullScreen) {\n                        if (opts.header) this.$.header.show();\n                        if (opts.header) {\n                            opts.headerHeight = this.$.header.outerHeight();\n                            box.height += opts.headerHeight;\n                        } else {\n                            opts.headerHeight = 0;\n                        }\n                        box.width = jQuery(window).width();\n                        box.height = opts.height;\n                        box.left = 0;\n                        box.top = 0;\n                    }\n                    else {\n                        if (opts.header) this.$.header.show();\n                        if (position) {\n                            jQuery.extend(true, opts.position, position);\n                        }\n\n                        if (opts.header) {\n                            opts.headerHeight = this.$.header.outerHeight();\n                            box.height += opts.headerHeight;\n                        } else {\n                            opts.headerHeight = 0;\n                        }\n\n                        //- position 정렬\n                        if (opts.position.left == \"left\") {\n                            box.left = (opts.position.margin || 0);\n                        }\n                        else if (opts.position.left == \"right\") {\n                            // window.innerWidth;\n                            box.left = jQuery(window).width() - box.width - (opts.position.margin || 0);\n                        }\n                        else if (opts.position.left == \"center\") {\n                            box.left = jQuery(window).width() / 2 - box.width / 2;\n                        }\n                        else {\n                            box.left = opts.position.left || 0;\n                        }\n\n                        if (opts.position.top == \"top\") {\n                            box.top = (opts.position.margin || 0);\n                        }\n                        else if (opts.position.top == \"bottom\") {\n                            box.top = jQuery(window).height() - box.height - (opts.position.margin || 0);\n                        }\n                        else if (opts.position.top == \"middle\") {\n                            box.top = jQuery(window).height() / 2 - box.height / 2;\n                        }\n                        else {\n                            box.top = opts.position.top || 0;\n                        }\n                        if (box.left < 0) box.left = 0;\n                        if (box.top < 0) box.top = 0;\n                    }\n\n                    this.activeModal.css(box);\n                    this.$[\"body\"].css({height: box.height - (opts.headerHeight || 0)});\n                    \n                    if (opts.iframe) {\n                        this.$[\"iframe-wrap\"].css({height: box.height - opts.headerHeight});\n                        this.$[\"iframe\"].css({height: box.height - opts.headerHeight});\n                    } else {\n\n                    }\n                    return this;\n                };\n            })();\n\n            // 클래스 생성자\n            this.main = (function () {\n\n                UI.modal_instance = UI.modal_instance || [];\n                UI.modal_instance.push(this);\n\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                }\n\n            }).apply(this, arguments);\n        };\n    })());\n\n    MODAL = ax5.ui.modal;\n})();\n","// ax5.ui.modal.tmpl\n(function () {\n    var MODAL = ax5.ui.modal;\n\n    var content = function () {\n        return ` \n        <div id=\"{{modalId}}\" data-modal-els=\"root\" class=\"ax5modal {{theme}} {{fullscreen}}\" style=\"{{styles}}\">\n            {{#header}}\n            <div class=\"ax-modal-header\" data-modal-els=\"header\">\n                {{{title}}}\n                {{#btns}}\n                    <div class=\"ax-modal-header-addon\">\n                    {{#@each}}\n                    <button tabindex=\"-1\" data-modal-header-btn=\"{{@key}}\" class=\"{{@value.theme}}\">{{{@value.label}}}</button>\n                    {{/@each}}\n                    </div>\n                {{/btns}}\n            </div>\n            {{/header}}\n            <div class=\"ax-modal-body\" data-modal-els=\"body\">\n            {{#iframe}}\n                <div data-modal-els=\"iframe-wrap\" style=\"-webkit-overflow-scrolling: touch; overflow: auto;position: relative;\">\n                    <table data-modal-els=\"iframe-loading\" style=\"width:100%;height:100%;\"><tr><td style=\"text-align: center;vertical-align: middle\">{{{iframeLoadingMsg}}}</td></tr></table>\n                    <iframe name=\"{{modalId}}-frame\" src=\"\" width=\"100%\" height=\"100%\" frameborder=\"0\" data-modal-els=\"iframe\" style=\"position: absolute;left:0;top:0;\"></iframe>\n                </div>\n                <form name=\"{{modalId}}-form\" data-modal-els=\"iframe-form\">\n                <input type=\"hidden\" name=\"modalId\" value=\"{{modalId}}\" />\n                {{#param}}\n                {{#@each}}\n                <input type=\"hidden\" name=\"{{@key}}\" value=\"{{@value}}\" />\n                {{/@each}}\n                {{/param}}\n                </form>\n            {{/iframe}}\n            {{^iframe}}\n                <div data-modal-els=\"body-frame\" style=\"position: absolute;left:0;top:0;width:100%;height:100%;\"></div>\n            {{/iframe}}\n            </div>\n            {{^disableResize}}\n            <div data-ax5modal-resizer=\"top\"></div>\n            <div data-ax5modal-resizer=\"right\"></div>\n            <div data-ax5modal-resizer=\"bottom\"></div>\n            <div data-ax5modal-resizer=\"left\"></div>\n            <div data-ax5modal-resizer=\"top-left\"></div>\n            <div data-ax5modal-resizer=\"top-right\"></div>\n            <div data-ax5modal-resizer=\"bottom-left\"></div>\n            <div data-ax5modal-resizer=\"bottom-right\"></div>\n            {{/disableResize}}\n        </div>\n        `;\n    };\n\n    MODAL.tmpl = {\n        \"content\": content,\n\n        get: function (tmplName, data, columnKeys) {\n            return ax5.mustache.render(MODAL.tmpl[tmplName].call(this, columnKeys), data);\n        }\n    };\n})();"]}