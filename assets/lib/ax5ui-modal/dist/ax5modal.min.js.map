{"version":3,"sources":["ax5modal.min.js","ax5modal.js","ax5modal-tmpl.js"],"names":["MODAL","UI","ax5","ui","U","util","addClass","className","version","ax5modal","self","this","cfg","ENM","mousedown","info","supportTouch","mousemove","mouseup","getMousePosition","e","mouseObj","changedTouches","clientX","clientY","instanceId","getGuid","config","id","position","left","top","margin","minimizePosition","clickEventName","theme","width","height","closeToEsc","disableDrag","animateTime","activeModal","watingModal","$","onStateChanged","opts","that","call","getContent","modalId","data","header","fullScreen","styles","iframe","iframeLoadingMsg","zIndex","absolute","param","tmpl","get","open","callback","jQuery","document","body","append","root","find","align","state","css","attr","method","target","action","url","on","hide","bind","show","submit","window","onkeyup","event","btnOnClick","isFullScreen","isButton","findParentNode","_target","getAttribute","mousePosition","moveModal","stopEvent","k","srcElement","key","value","btns","dialogId","btnTarget","onClick","keyCode","eventKeys","ESC","close","alignProcessor","top-left","top-right","bottom-left","bottom-right","center-middle","modalZIndex","modalOffset","modalBox","outerWidth","outerHeight","windowBox","getResizerPosition","__dx","__dy","minX","maxX","minY","maxY","scrollLeft","scrollTop","resizer","resizerBg","off","setModalPosition","box","offset","removeClass","remove","unbind","removeAttr","init","tryCount","setTimeout","modalConfig","extend","$iframe","iframeObject","idoc","contentDocument","contentWindow","children","each","innerHTML","CollectGarbage","minimized","minimize","originalHeight","maximize","undefined","setModalConfig","_config","_fullScreen","isFunction","headerHeight","main","modal_instance","push","arguments","isObject","setConfig","apply","modal","content","tmplName","columnKeys","mustache","render"],"mappings":"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","file":"ax5modal.min.js","sourcesContent":["\"use strict\";\n\n// ax5.ui.modal\n(function () {\n\n    var UI = ax5.ui;\n    var U = ax5.util;\n    var MODAL;\n\n    UI.addClass({\n        className: \"modal\",\n        version: \"${VERSION}\"\n    }, function () {\n        /**\n         * @class ax5modal\n         * @alias ax5.ui.modal\n         * @author tom@axisj.com\n         * @example\n         * ```js\n         * var modal = new ax5.ui.modal({\n         *     iframeLoadingMsg: '<i class=\"fa fa-spinner fa-5x fa-spin\" aria-hidden=\"true\"></i>',\n         *     header: {\n         *         title: \"MODAL TITLE\",\n         *         btns: {\n         *             minimize: {\n         *                 label: '<i class=\"fa fa-minus-circle\" aria-hidden=\"true\"></i>', onClick: function () {\n         *                     modal.minimize();\n         *                 }\n         *             },\n         *             maximize: {\n         *                 label: '<i class=\"fa fa-plus-circle\" aria-hidden=\"true\"></i>', onClick: function () {\n         *                     modal.maximize();\n         *                 }\n         *             },\n         *             close: {\n         *                 label: '<i class=\"fa fa-times-circle\" aria-hidden=\"true\"></i>', onClick: function () {\n         *                     modal.close();\n         *                 }\n         *             }\n         *         }\n         *     }\n         * });\n         *\n         * modal.open({\n         *     width: 800,\n         *     height: 600,\n         *     fullScreen: function(){\n         *         return ($(window).width() < 600);\n         *     },\n         *     iframe: {\n         *         method: \"get\",\n         *         url: \"http://chequer-app:2017/html/login.html\",\n         *         param: \"callback=modalCallback\"\n         *     }\n         * });\n         * ```\n         */\n        var ax5modal = function ax5modal() {\n            var self = this,\n                cfg = void 0,\n                ENM = {\n                \"mousedown\": ax5.info.supportTouch ? \"touchstart\" : \"mousedown\",\n                \"mousemove\": ax5.info.supportTouch ? \"touchmove\" : \"mousemove\",\n                \"mouseup\": ax5.info.supportTouch ? \"touchend\" : \"mouseup\"\n            },\n                getMousePosition = function getMousePosition(e) {\n                var mouseObj = e;\n                if ('changedTouches' in e) {\n                    mouseObj = e.changedTouches[0];\n                }\n                return {\n                    clientX: mouseObj.clientX,\n                    clientY: mouseObj.clientY\n                };\n            };\n\n            this.instanceId = ax5.getGuid();\n            this.config = {\n                id: 'ax5-modal-' + this.instanceId,\n                position: {\n                    left: \"center\",\n                    top: \"middle\",\n                    margin: 10\n                },\n                minimizePosition: \"bottom-right\",\n                clickEventName: \"click\", //(('ontouchstart' in document.documentElement) ? \"touchstart\" : \"click\"),\n                theme: 'default',\n                width: 300,\n                height: 400,\n                closeToEsc: true,\n                disableDrag: false,\n                animateTime: 250\n            };\n            this.activeModal = null;\n            this.watingModal = false;\n            this.$ = {}; // UI inside of the jQuery object store\n\n            cfg = this.config; // extended config copy cfg\n\n            var onStateChanged = function onStateChanged(opts, that) {\n                if (opts && opts.onStateChanged) {\n                    opts.onStateChanged.call(that, that);\n                } else if (this.onStateChanged) {\n                    this.onStateChanged.call(that, that);\n                }\n                return true;\n            },\n                getContent = function getContent(modalId, opts) {\n                var data = {\n                    modalId: modalId,\n                    theme: opts.theme,\n                    header: opts.header,\n                    fullScreen: opts.fullScreen ? \"fullscreen\" : \"\",\n                    styles: \"\",\n                    iframe: opts.iframe,\n                    iframeLoadingMsg: opts.iframeLoadingMsg\n                };\n\n                if (opts.zIndex) {\n                    data.styles += \"z-index:\" + opts.zIndex + \";\";\n                }\n                if (opts.absolute) {\n                    data.styles += \"position:absolute;\";\n                }\n\n                if (data.iframe && typeof data.iframe.param === \"string\") {\n                    data.iframe.param = ax5.util.param(data.iframe.param);\n                }\n\n                return MODAL.tmpl.get.call(this, \"content\", data, {});\n            },\n                open = function open(opts, callback) {\n                var that = void 0;\n                jQuery(document.body).append(getContent.call(this, opts.id, opts));\n\n                this.activeModal = jQuery('#' + opts.id);\n\n                // 파트수집\n                this.$ = {\n                    \"root\": this.activeModal,\n                    \"header\": this.activeModal.find('[data-modal-els=\"header\"]'),\n                    \"body\": this.activeModal.find('[data-modal-els=\"body\"]')\n                };\n\n                if (opts.iframe) {\n                    this.$[\"iframe-wrap\"] = this.activeModal.find('[data-modal-els=\"iframe-wrap\"]');\n                    this.$[\"iframe\"] = this.activeModal.find('[data-modal-els=\"iframe\"]');\n                    this.$[\"iframe-form\"] = this.activeModal.find('[data-modal-els=\"iframe-form\"]');\n                    this.$[\"iframe-loading\"] = this.activeModal.find('[data-modal-els=\"iframe-loading\"]');\n                } else {\n                    this.$[\"body-frame\"] = this.activeModal.find('[data-modal-els=\"body-frame\"]');\n                }\n\n                //- position 정렬\n                this.align();\n\n                that = {\n                    self: this,\n                    id: opts.id,\n                    theme: opts.theme,\n                    width: opts.width,\n                    height: opts.height,\n                    state: \"open\",\n                    $: this.$\n                };\n\n                if (opts.iframe) {\n                    this.$[\"iframe-wrap\"].css({ height: opts.height });\n                    this.$[\"iframe\"].css({ height: opts.height });\n\n                    // iframe content load\n                    this.$[\"iframe-form\"].attr({ \"method\": opts.iframe.method });\n                    this.$[\"iframe-form\"].attr({ \"target\": opts.id + \"-frame\" });\n                    this.$[\"iframe-form\"].attr({ \"action\": opts.iframe.url });\n                    this.$[\"iframe\"].on(\"load\", function () {\n                        that.state = \"load\";\n                        if (opts.iframeLoadingMsg) {\n                            this.$[\"iframe-loading\"].hide();\n                        }\n                        onStateChanged.call(this, opts, that);\n                    }.bind(this));\n                    if (!opts.iframeLoadingMsg) {\n                        this.$[\"iframe\"].show();\n                    }\n                    this.$[\"iframe-form\"].submit();\n                }\n\n                if (callback) callback.call(that, that);\n\n                if (!this.watingModal) {\n                    onStateChanged.call(this, opts, that);\n                }\n\n                // bind key event\n                if (opts.closeToEsc) {\n                    jQuery(window).bind(\"keydown.ax-modal\", function (e) {\n                        onkeyup.call(this, e || window.event);\n                    }.bind(this));\n                }\n                jQuery(window).bind(\"resize.ax-modal\", function (e) {\n                    this.align(null, e || window.event);\n                }.bind(this));\n\n                this.activeModal.find(\"[data-modal-header-btn]\").on(cfg.clickEventName, function (e) {\n                    btnOnClick.call(this, e || window.event, opts);\n                }.bind(this));\n\n                this.$.header.bind(ENM[\"mousedown\"], function (e) {\n                    if (opts.isFullScreen) return false;\n\n                    /// 이벤트 필터링 추가 : 버튼엘리먼트로 부터 발생된 이벤트이면 moveModal 시작하지 않도록 필터링\n                    var isButton = U.findParentNode(e.target, function (_target) {\n                        if (_target.getAttribute(\"data-modal-header-btn\")) {\n                            return true;\n                        }\n                    });\n\n                    if (!isButton && opts.disableDrag != true) {\n                        self.mousePosition = getMousePosition(e);\n                        moveModal.on.call(self);\n                    }\n                }).bind(\"dragstart\", function (e) {\n                    U.stopEvent(e);\n                    return false;\n                });\n            },\n                btnOnClick = function btnOnClick(e, opts, callback, target, k) {\n                var that = void 0;\n                if (e.srcElement) e.target = e.srcElement;\n\n                target = U.findParentNode(e.target, function (target) {\n                    if (target.getAttribute(\"data-modal-header-btn\")) {\n                        return true;\n                    }\n                });\n\n                if (target) {\n                    k = target.getAttribute(\"data-modal-header-btn\");\n\n                    that = {\n                        self: this,\n                        key: k, value: opts.header.btns[k],\n                        dialogId: opts.id,\n                        btnTarget: target\n                    };\n\n                    if (opts.header.btns[k].onClick) {\n                        opts.header.btns[k].onClick.call(that, k);\n                    }\n                }\n\n                that = null;\n                opts = null;\n                callback = null;\n                target = null;\n                k = null;\n            },\n                onkeyup = function onkeyup(e) {\n                if (e.keyCode == ax5.info.eventKeys.ESC) {\n                    this.close();\n                }\n            },\n                alignProcessor = {\n                \"top-left\": function topLeft() {\n                    this.align({ left: \"left\", top: \"top\" });\n                },\n                \"top-right\": function topRight() {\n                    this.align({ left: \"right\", top: \"top\" });\n                },\n                \"bottom-left\": function bottomLeft() {\n                    this.align({ left: \"left\", top: \"bottom\" });\n                },\n                \"bottom-right\": function bottomRight() {\n                    this.align({ left: \"right\", top: \"bottom\" });\n                },\n                \"center-middle\": function centerMiddle() {\n                    this.align({ left: \"center\", top: \"middle\" });\n                }\n            },\n                moveModal = {\n                \"on\": function on() {\n                    var modalZIndex = this.activeModal.css(\"z-index\"),\n                        modalOffset = this.activeModal.position(),\n                        modalBox = {\n                        width: this.activeModal.outerWidth(), height: this.activeModal.outerHeight()\n                    },\n                        windowBox = {\n                        width: jQuery(window).width(),\n                        height: jQuery(window).height()\n                    },\n                        getResizerPosition = function getResizerPosition(e) {\n                        self.__dx = e.clientX - self.mousePosition.clientX;\n                        self.__dy = e.clientY - self.mousePosition.clientY;\n\n                        var minX = 0;\n                        var maxX = windowBox.width - modalBox.width;\n                        var minY = 0;\n                        var maxY = windowBox.height - modalBox.height;\n\n                        if (minX > modalOffset.left + self.__dx) {\n                            self.__dx = -modalOffset.left;\n                        } else if (maxX < modalOffset.left + self.__dx) {\n                            self.__dx = maxX - modalOffset.left;\n                        }\n\n                        if (minY > modalOffset.top + self.__dy) {\n                            self.__dy = -modalOffset.top;\n                        } else if (maxY < modalOffset.top + self.__dy) {\n                            self.__dy = maxY - modalOffset.top;\n                        }\n\n                        return {\n                            left: modalOffset.left + self.__dx + $(document).scrollLeft(),\n                            top: modalOffset.top + self.__dy + $(document).scrollTop()\n                        };\n                    };\n\n                    self.__dx = 0; // 변화량 X\n                    self.__dy = 0; // 변화량 Y\n\n                    if (!self.resizer) {\n                        // self.resizerBg : body 가 window보다 작을 때 문제 해결을 위한 DIV\n                        self.resizerBg = jQuery('<div class=\"ax5modal-resizer-background\" ondragstart=\"return false;\"></div>');\n                        self.resizer = jQuery('<div class=\"ax5modal-resizer\" ondragstart=\"return false;\"></div>');\n                        self.resizerBg.css({ zIndex: modalZIndex });\n                        self.resizer.css({\n                            left: modalOffset.left,\n                            top: modalOffset.top,\n                            width: modalBox.width,\n                            height: modalBox.height,\n                            zIndex: modalZIndex + 1\n                        });\n                        jQuery(document.body).append(self.resizerBg).append(self.resizer);\n                        self.activeModal.addClass(\"draged\");\n                    }\n\n                    jQuery(document.body).bind(ENM[\"mousemove\"] + \".ax5modal-\" + cfg.id, function (e) {\n                        self.resizer.css(getResizerPosition(e));\n                    }).bind(ENM[\"mouseup\"] + \".ax5layout-\" + this.instanceId, function (e) {\n                        moveModal.off.call(self);\n                    }).bind(\"mouseleave.ax5layout-\" + this.instanceId, function (e) {\n                        moveModal.off.call(self);\n                    });\n\n                    jQuery(document.body).attr('unselectable', 'on').css('user-select', 'none').on('selectstart', false);\n                },\n                \"off\": function off() {\n                    var setModalPosition = function setModalPosition() {\n                        var box = this.activeModal.offset();\n                        box.left += this.__dx - $(document).scrollLeft();\n                        box.top += this.__dy - $(document).scrollTop();\n                        this.activeModal.css(box);\n                    };\n\n                    if (this.resizer) {\n                        this.activeModal.removeClass(\"draged\");\n                        this.resizer.remove();\n                        this.resizer = null;\n                        this.resizerBg.remove();\n                        this.resizerBg = null;\n                        setModalPosition.call(this);\n                        //this.align();\n                    }\n\n                    jQuery(document.body).unbind(ENM[\"mousemove\"] + \".ax5modal-\" + cfg.id).unbind(ENM[\"mouseup\"] + \".ax5modal-\" + cfg.id).unbind(\"mouseleave.ax5modal-\" + cfg.id);\n\n                    jQuery(document.body).removeAttr('unselectable').css('user-select', 'auto').off('selectstart');\n                }\n            };\n\n            /// private end\n\n            /**\n             * Preferences of modal UI\n             * @method ax5modal.setConfig\n             * @param {Object} config - 클래스 속성값\n             * @param {Number} [config.zIndex]\n             * @param {Boolean} [config.absolute=false]\n             * @returns {ax5modal}\n             * @example\n             * ```\n             * ```\n             */\n            //== class body start\n            this.init = function () {\n                this.onStateChanged = cfg.onStateChanged;\n            };\n\n            /**\n             * open the modal\n             * @method ax5modal.open\n             * @returns {ax5modal}\n             * @example\n             * ```\n             * my_modal.open();\n             * ```\n             */\n            this.open = function (opts, callback, tryCount) {\n                if (typeof tryCount === \"undefined\") tryCount = 0;\n                if (!this.activeModal) {\n                    opts = self.modalConfig = jQuery.extend(true, {}, cfg, opts);\n                    open.call(this, opts, callback);\n                    this.watingModal = false;\n                } else if (tryCount < 3) {\n                    // 3번까지 재 시도\n                    this.watingModal = true;\n                    setTimeout(function () {\n                        this.open(opts, callback, tryCount + 1);\n                    }.bind(this), cfg.animateTime);\n                }\n                return this;\n            };\n\n            /**\n             * close the modal\n             * @method ax5modal.close\n             * @returns {ax5modal}\n             * @example\n             * ```\n             * my_modal.close();\n             * ```\n             */\n            this.close = function (opts) {\n                if (this.activeModal) {\n                    opts = self.modalConfig;\n                    this.activeModal.addClass(\"destroy\");\n                    jQuery(window).unbind(\"keydown.ax-modal\");\n                    jQuery(window).unbind(\"resize.ax-modal\");\n\n                    setTimeout(function () {\n                        if (this.activeModal) {\n\n                            // 프레임 제거\n                            if (opts.iframe) {\n                                var $iframe = this.$[\"iframe\"]; // iframe jQuery Object\n                                if ($iframe) {\n                                    var iframeObject = $iframe.get(0),\n                                        idoc = iframeObject.contentDocument ? iframeObject.contentDocument : iframeObject.contentWindow.document;\n\n                                    try {\n                                        $(idoc.body).children().each(function () {\n                                            $(this).remove();\n                                        });\n                                    } catch (e) {}\n                                    idoc.innerHTML = \"\";\n                                    $iframe.attr('src', 'about:blank').remove();\n\n                                    // force garbarge collection for IE only\n                                    window.CollectGarbage && window.CollectGarbage();\n                                }\n                            }\n\n                            this.activeModal.remove();\n                            this.activeModal = null;\n                        }\n                        // 모달 오픈 대기중이면 닫기 상태 전달 안함.\n                        if (!this.watingModal) {\n                            onStateChanged.call(this, opts, {\n                                self: this,\n                                state: \"close\"\n                            });\n                        }\n                    }.bind(this), cfg.animateTime);\n                }\n\n                this.minimized = false; // hoksi\n\n                return this;\n            };\n\n            /**\n             * @method ax5modal.minimize\n             * @returns {ax5modal}\n             */\n            this.minimize = function () {\n\n                return function (minimizePosition) {\n\n                    if (this.minimized !== true) {\n\n                        var opts = self.modalConfig;\n                        if (typeof minimizePosition === \"undefined\") minimizePosition = cfg.minimizePosition;\n\n                        this.minimized = true;\n                        this.$.body.hide();\n                        self.modalConfig.originalHeight = opts.height;\n                        self.modalConfig.height = 0;\n                        alignProcessor[minimizePosition].call(this);\n\n                        onStateChanged.call(this, opts, {\n                            self: this,\n                            state: \"minimize\"\n                        });\n                    }\n\n                    return this;\n                };\n            }();\n\n            /**\n             * @method ax5modal.maximize\n             * @returns {ax5modal}\n             */\n            this.maximize = function () {\n                var opts = self.modalConfig;\n                if (this.minimized) {\n                    this.minimized = false;\n                    this.$.body.show();\n                    self.modalConfig.height = self.modalConfig.originalHeight;\n                    self.modalConfig.originalHeight = undefined;\n\n                    this.align({ left: \"center\", top: \"middle\" });\n                    onStateChanged.call(this, opts, {\n                        self: this,\n                        state: \"restore\"\n                    });\n                }\n                return this;\n            };\n\n            /**\n             * setCSS\n             * @method ax5modal.css\n             * @param {Object} css -\n             * @returns {ax5modal}\n             */\n            this.css = function (css) {\n                if (this.activeModal && !self.fullScreen) {\n                    this.activeModal.css(css);\n                    if (css.width) {\n                        self.modalConfig.width = this.activeModal.width();\n                    }\n                    if (css.height) {\n                        self.modalConfig.height = this.activeModal.height();\n                        if (this.$[\"iframe\"]) {\n                            this.$[\"iframe-wrap\"].css({ height: self.modalConfig.height });\n                            this.$[\"iframe\"].css({ height: self.modalConfig.height });\n                        }\n                    }\n                }\n                return this;\n            };\n\n            /**\n             * @method ax5modal.setModalConfig\n             * @param _config\n             * @returns {ax5.ui.ax5modal}\n             */\n            this.setModalConfig = function (_config) {\n                self.modalConfig = jQuery.extend({}, self.modalConfig, _config);\n                this.align();\n                return this;\n            };\n\n            /**\n             * @method ax5modal.align\n             * @param position\n             * @param e\n             * @returns {ax5modal}\n             */\n            this.align = function () {\n\n                return function (position, e) {\n                    if (!this.activeModal) return this;\n\n                    var opts = self.modalConfig,\n                        box = {\n                        width: opts.width,\n                        height: opts.height\n                    };\n\n                    var fullScreen = opts.isFullScreen = function (_fullScreen) {\n                        if (typeof _fullScreen === \"undefined\") {\n                            return false;\n                        } else if (U.isFunction(_fullScreen)) {\n                            return _fullScreen();\n                        }\n                    }(opts.fullScreen);\n\n                    if (fullScreen) {\n                        if (opts.header) this.$.header.show();\n                        box.width = jQuery(window).width();\n                        box.height = opts.height;\n                        box.left = 0;\n                        box.top = 0;\n                    } else {\n                        if (opts.header) this.$.header.show();\n                        if (position) {\n                            jQuery.extend(true, opts.position, position);\n                        }\n\n                        if (opts.header) {\n                            opts.headerHeight = this.$.header.outerHeight();\n                            box.height += opts.headerHeight;\n                        } else {\n                            opts.headerHeight = 0;\n                        }\n\n                        //- position 정렬\n                        if (opts.position.left == \"left\") {\n                            box.left = opts.position.margin || 0;\n                        } else if (opts.position.left == \"right\") {\n                            // window.innerWidth;\n                            box.left = jQuery(window).width() - box.width - (opts.position.margin || 0);\n                        } else if (opts.position.left == \"center\") {\n                            box.left = jQuery(window).width() / 2 - box.width / 2;\n                        } else {\n                            box.left = opts.position.left || 0;\n                        }\n\n                        if (opts.position.top == \"top\") {\n                            box.top = opts.position.margin || 0;\n                        } else if (opts.position.top == \"bottom\") {\n                            box.top = jQuery(window).height() - box.height - (opts.position.margin || 0);\n                        } else if (opts.position.top == \"middle\") {\n                            box.top = jQuery(window).height() / 2 - box.height / 2;\n                        } else {\n                            box.top = opts.position.top || 0;\n                        }\n                        if (box.left < 0) box.left = 0;\n                        if (box.top < 0) box.top = 0;\n                    }\n\n                    this.activeModal.css(box);\n\n                    if (opts.iframe) {\n                        this.$[\"iframe-wrap\"].css({ height: box.height - opts.headerHeight });\n                        this.$[\"iframe\"].css({ height: box.height - opts.headerHeight });\n                    }\n                    return this;\n                };\n            }();\n\n            // 클래스 생성자\n            this.main = function () {\n\n                UI.modal_instance = UI.modal_instance || [];\n                UI.modal_instance.push(this);\n\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                }\n            }.apply(this, arguments);\n        };\n        return ax5modal;\n    }());\n\n    MODAL = ax5.ui.modal;\n})();\n\n// ax5.ui.modal.tmpl\n(function () {\n    var MODAL = ax5.ui.modal;\n\n    var content = function content() {\n        return \" \\n        <div id=\\\"{{modalId}}\\\" data-modal-els=\\\"root\\\" class=\\\"ax5modal {{theme}} {{fullscreen}}\\\" style=\\\"{{styles}}\\\">\\n            {{#header}}\\n            <div class=\\\"ax-modal-header\\\" data-modal-els=\\\"header\\\">\\n                {{{title}}}\\n                {{#btns}}\\n                    <div class=\\\"ax-modal-header-addon\\\">\\n                    {{#@each}}\\n                    <button tabindex=\\\"-1\\\" data-modal-header-btn=\\\"{{@key}}\\\" class=\\\"{{@value.theme}}\\\">{{{@value.label}}}</button>\\n                    {{/@each}}\\n                    </div>\\n                {{/btns}}\\n            </div>\\n            {{/header}}\\n            <div class=\\\"ax-modal-body\\\" data-modal-els=\\\"body\\\">\\n            {{#iframe}}\\n                <div data-modal-els=\\\"iframe-wrap\\\" style=\\\"-webkit-overflow-scrolling: touch; overflow: auto;position: relative;\\\">\\n                    <table data-modal-els=\\\"iframe-loading\\\" style=\\\"width:100%;height:100%;\\\"><tr><td style=\\\"text-align: center;vertical-align: middle\\\">{{{iframeLoadingMsg}}}</td></tr></table>\\n                    <iframe name=\\\"{{modalId}}-frame\\\" src=\\\"\\\" width=\\\"100%\\\" height=\\\"100%\\\" frameborder=\\\"0\\\" data-modal-els=\\\"iframe\\\" style=\\\"position: absolute;left:0;top:0;\\\"></iframe>\\n                </div>\\n                <form name=\\\"{{modalId}}-form\\\" data-modal-els=\\\"iframe-form\\\">\\n                <input type=\\\"hidden\\\" name=\\\"modalId\\\" value=\\\"{{modalId}}\\\" />\\n                {{#param}}\\n                {{#@each}}\\n                <input type=\\\"hidden\\\" name=\\\"{{@key}}\\\" value=\\\"{{@value}}\\\" />\\n                {{/@each}}\\n                {{/param}}\\n                </form>\\n            {{/iframe}}\\n            {{^iframe}}\\n                <div data-modal-els=\\\"body-frame\\\" style=\\\"position: absolute;left:0;top:0;width:100%;height:100%;\\\"></div>\\n            {{/iframe}}\\n            </div>\\n            <div class=\\\"ax-modal-body-mask\\\"></div>\\n        </div>\\n        \";\n    };\n\n    MODAL.tmpl = {\n        \"content\": content,\n\n        get: function get(tmplName, data, columnKeys) {\n            return ax5.mustache.render(MODAL.tmpl[tmplName].call(this, columnKeys), data);\n        }\n    };\n})();","// ax5.ui.modal\n(function () {\n\n    var UI = ax5.ui;\n    var U = ax5.util;\n    var MODAL;\n\n    UI.addClass({\n        className: \"modal\",\n        version: \"${VERSION}\"\n    }, (function () {\n        /**\n         * @class ax5modal\n         * @alias ax5.ui.modal\n         * @author tom@axisj.com\n         * @example\n         * ```js\n         * var modal = new ax5.ui.modal({\n         *     iframeLoadingMsg: '<i class=\"fa fa-spinner fa-5x fa-spin\" aria-hidden=\"true\"></i>',\n         *     header: {\n         *         title: \"MODAL TITLE\",\n         *         btns: {\n         *             minimize: {\n         *                 label: '<i class=\"fa fa-minus-circle\" aria-hidden=\"true\"></i>', onClick: function () {\n         *                     modal.minimize();\n         *                 }\n         *             },\n         *             maximize: {\n         *                 label: '<i class=\"fa fa-plus-circle\" aria-hidden=\"true\"></i>', onClick: function () {\n         *                     modal.maximize();\n         *                 }\n         *             },\n         *             close: {\n         *                 label: '<i class=\"fa fa-times-circle\" aria-hidden=\"true\"></i>', onClick: function () {\n         *                     modal.close();\n         *                 }\n         *             }\n         *         }\n         *     }\n         * });\n         *\n         * modal.open({\n         *     width: 800,\n         *     height: 600,\n         *     fullScreen: function(){\n         *         return ($(window).width() < 600);\n         *     },\n         *     iframe: {\n         *         method: \"get\",\n         *         url: \"http://chequer-app:2017/html/login.html\",\n         *         param: \"callback=modalCallback\"\n         *     }\n         * });\n         * ```\n         */\n        var ax5modal = function () {\n            let self = this,\n                cfg,\n                ENM = {\n                    \"mousedown\": (ax5.info.supportTouch) ? \"touchstart\" : \"mousedown\",\n                    \"mousemove\": (ax5.info.supportTouch) ? \"touchmove\" : \"mousemove\",\n                    \"mouseup\": (ax5.info.supportTouch) ? \"touchend\" : \"mouseup\"\n                },\n                getMousePosition = function (e) {\n                    let mouseObj = e;\n                    if ('changedTouches' in e) {\n                        mouseObj = e.changedTouches[0];\n                    }\n                    return {\n                        clientX: mouseObj.clientX,\n                        clientY: mouseObj.clientY\n                    }\n                };\n\n            this.instanceId = ax5.getGuid();\n            this.config = {\n                id: 'ax5-modal-' + this.instanceId,\n                position: {\n                    left: \"center\",\n                    top: \"middle\",\n                    margin: 10\n                },\n                minimizePosition: \"bottom-right\",\n                clickEventName: \"click\", //(('ontouchstart' in document.documentElement) ? \"touchstart\" : \"click\"),\n                theme: 'default',\n                width: 300,\n                height: 400,\n                closeToEsc: true,\n                disableDrag: false,\n                animateTime: 250\n            };\n            this.activeModal = null;\n            this.watingModal = false;\n            this.$ = {}; // UI inside of the jQuery object store\n\n            cfg = this.config; // extended config copy cfg\n\n            let onStateChanged = function (opts, that) {\n                    if (opts && opts.onStateChanged) {\n                        opts.onStateChanged.call(that, that);\n                    }\n                    else if (this.onStateChanged) {\n                        this.onStateChanged.call(that, that);\n                    }\n                    return true;\n                },\n                getContent = function (modalId, opts) {\n                    let data = {\n                        modalId: modalId,\n                        theme: opts.theme,\n                        header: opts.header,\n                        fullScreen: (opts.fullScreen ? \"fullscreen\" : \"\"),\n                        styles: \"\",\n                        iframe: opts.iframe,\n                        iframeLoadingMsg: opts.iframeLoadingMsg\n                    };\n\n                    if (opts.zIndex) {\n                        data.styles += \"z-index:\" + opts.zIndex + \";\";\n                    }\n                    if (opts.absolute) {\n                        data.styles += \"position:absolute;\";\n                    }\n\n                    if (data.iframe && typeof data.iframe.param === \"string\") {\n                        data.iframe.param = ax5.util.param(data.iframe.param);\n                    }\n\n                    return MODAL.tmpl.get.call(this, \"content\", data, {});\n                },\n                open = function (opts, callback) {\n                    let that;\n                    jQuery(document.body).append(getContent.call(this, opts.id, opts));\n\n                    this.activeModal = jQuery('#' + opts.id);\n\n                    // 파트수집\n                    this.$ = {\n                        \"root\": this.activeModal,\n                        \"header\": this.activeModal.find('[data-modal-els=\"header\"]'),\n                        \"body\": this.activeModal.find('[data-modal-els=\"body\"]')\n                    };\n\n                    if (opts.iframe) {\n                        this.$[\"iframe-wrap\"] = this.activeModal.find('[data-modal-els=\"iframe-wrap\"]');\n                        this.$[\"iframe\"] = this.activeModal.find('[data-modal-els=\"iframe\"]');\n                        this.$[\"iframe-form\"] = this.activeModal.find('[data-modal-els=\"iframe-form\"]');\n                        this.$[\"iframe-loading\"] = this.activeModal.find('[data-modal-els=\"iframe-loading\"]');\n                    }\n                    else{\n                        this.$[\"body-frame\"] = this.activeModal.find('[data-modal-els=\"body-frame\"]');\n                    }\n\n                    //- position 정렬\n                    this.align();\n\n                    that = {\n                        self: this,\n                        id: opts.id,\n                        theme: opts.theme,\n                        width: opts.width,\n                        height: opts.height,\n                        state: \"open\",\n                        $: this.$\n                    };\n\n                    if (opts.iframe) {\n                        this.$[\"iframe-wrap\"].css({height: opts.height});\n                        this.$[\"iframe\"].css({height: opts.height});\n\n                        // iframe content load\n                        this.$[\"iframe-form\"].attr({\"method\": opts.iframe.method});\n                        this.$[\"iframe-form\"].attr({\"target\": opts.id + \"-frame\"});\n                        this.$[\"iframe-form\"].attr({\"action\": opts.iframe.url});\n                        this.$[\"iframe\"].on(\"load\", (function () {\n                            that.state = \"load\";\n                            if (opts.iframeLoadingMsg) {\n                                this.$[\"iframe-loading\"].hide();\n                            }\n                            onStateChanged.call(this, opts, that);\n                        }).bind(this));\n                        if (!opts.iframeLoadingMsg) {\n                            this.$[\"iframe\"].show();\n                        }\n                        this.$[\"iframe-form\"].submit();\n                    }\n\n                    if (callback) callback.call(that, that);\n\n                    if (!this.watingModal) {\n                        onStateChanged.call(this, opts, that);\n                    }\n\n                    // bind key event\n                    if (opts.closeToEsc) {\n                        jQuery(window).bind(\"keydown.ax-modal\", (function (e) {\n                            onkeyup.call(this, e || window.event);\n                        }).bind(this));\n                    }\n                    jQuery(window).bind(\"resize.ax-modal\", (function (e) {\n                        this.align(null, e || window.event);\n                    }).bind(this));\n\n                    this.activeModal.find(\"[data-modal-header-btn]\").on(cfg.clickEventName, (function (e) {\n                        btnOnClick.call(this, e || window.event, opts);\n                    }).bind(this));\n\n                    this.$.header\n                        .bind(ENM[\"mousedown\"], function (e) {\n                            if (opts.isFullScreen) return false;\n\n                            /// 이벤트 필터링 추가 : 버튼엘리먼트로 부터 발생된 이벤트이면 moveModal 시작하지 않도록 필터링\n                            let isButton = U.findParentNode(e.target, function (_target) {\n                                if (_target.getAttribute(\"data-modal-header-btn\")) {\n                                    return true;\n                                }\n                            });\n\n                            if (!isButton && opts.disableDrag != true) {\n                                self.mousePosition = getMousePosition(e);\n                                moveModal.on.call(self);\n                            }\n                        })\n                        .bind(\"dragstart\", function (e) {\n                            U.stopEvent(e);\n                            return false;\n                        });\n                },\n                btnOnClick = function (e, opts, callback, target, k) {\n                    let that;\n                    if (e.srcElement) e.target = e.srcElement;\n\n                    target = U.findParentNode(e.target, function (target) {\n                        if (target.getAttribute(\"data-modal-header-btn\")) {\n                            return true;\n                        }\n                    });\n\n                    if (target) {\n                        k = target.getAttribute(\"data-modal-header-btn\");\n\n                        that = {\n                            self: this,\n                            key: k, value: opts.header.btns[k],\n                            dialogId: opts.id,\n                            btnTarget: target\n                        };\n\n                        if (opts.header.btns[k].onClick) {\n                            opts.header.btns[k].onClick.call(that, k);\n                        }\n                    }\n\n                    that = null;\n                    opts = null;\n                    callback = null;\n                    target = null;\n                    k = null;\n                },\n                onkeyup = function (e) {\n                    if (e.keyCode == ax5.info.eventKeys.ESC) {\n                        this.close();\n                    }\n                },\n                alignProcessor = {\n                    \"top-left\": function () {\n                        this.align({left: \"left\", top: \"top\"});\n                    },\n                    \"top-right\": function () {\n                        this.align({left: \"right\", top: \"top\"});\n                    },\n                    \"bottom-left\": function () {\n                        this.align({left: \"left\", top: \"bottom\"});\n                    },\n                    \"bottom-right\": function () {\n                        this.align({left: \"right\", top: \"bottom\"});\n                    },\n                    \"center-middle\": function () {\n                        this.align({left: \"center\", top: \"middle\"});\n                    }\n                },\n                moveModal = {\n                    \"on\": function () {\n                        let modalZIndex = this.activeModal.css(\"z-index\"),\n                            modalOffset = this.activeModal.position(),\n                            modalBox = {\n                                width: this.activeModal.outerWidth(), height: this.activeModal.outerHeight()\n                            },\n                            windowBox = {\n                                width: jQuery(window).width(),\n                                height: jQuery(window).height()\n                            },\n                            getResizerPosition = function (e) {\n                                self.__dx = e.clientX - self.mousePosition.clientX;\n                                self.__dy = e.clientY - self.mousePosition.clientY;\n\n                                var minX = 0;\n                                var maxX = windowBox.width - modalBox.width;\n                                var minY = 0;\n                                var maxY = windowBox.height - modalBox.height;\n\n                                if (minX > modalOffset.left + self.__dx) {\n                                    self.__dx = -modalOffset.left;\n                                }\n                                else if (maxX < modalOffset.left + self.__dx) {\n                                    self.__dx = (maxX) - modalOffset.left;\n                                }\n\n                                if (minY > modalOffset.top + self.__dy) {\n                                    self.__dy = -modalOffset.top;\n                                }\n                                else if (maxY < modalOffset.top + self.__dy) {\n                                    self.__dy = (maxY) - modalOffset.top;\n                                }\n\n                                return {\n                                    left: modalOffset.left + self.__dx + $(document).scrollLeft(),\n                                    top: modalOffset.top + self.__dy + $(document).scrollTop()\n                                };\n                            };\n\n                        self.__dx = 0; // 변화량 X\n                        self.__dy = 0; // 변화량 Y\n\n                        if (!self.resizer) {\n                            // self.resizerBg : body 가 window보다 작을 때 문제 해결을 위한 DIV\n                            self.resizerBg = jQuery('<div class=\"ax5modal-resizer-background\" ondragstart=\"return false;\"></div>');\n                            self.resizer = jQuery('<div class=\"ax5modal-resizer\" ondragstart=\"return false;\"></div>');\n                            self.resizerBg.css({zIndex: modalZIndex});\n                            self.resizer.css({\n                                left: modalOffset.left,\n                                top: modalOffset.top,\n                                width: modalBox.width,\n                                height: modalBox.height,\n                                zIndex: modalZIndex + 1\n                            });\n                            jQuery(document.body)\n                                .append(self.resizerBg)\n                                .append(self.resizer);\n                            self.activeModal.addClass(\"draged\");\n                        }\n\n                        jQuery(document.body)\n                            .bind(ENM[\"mousemove\"] + \".ax5modal-\" + cfg.id, function (e) {\n                                self.resizer.css(getResizerPosition(e));\n                            })\n                            .bind(ENM[\"mouseup\"] + \".ax5layout-\" + this.instanceId, function (e) {\n                                moveModal.off.call(self);\n                            })\n                            .bind(\"mouseleave.ax5layout-\" + this.instanceId, function (e) {\n                                moveModal.off.call(self);\n                            });\n\n                        jQuery(document.body)\n                            .attr('unselectable', 'on')\n                            .css('user-select', 'none')\n                            .on('selectstart', false);\n                    },\n                    \"off\": function () {\n                        let setModalPosition = function () {\n                            let box = this.activeModal.offset();\n                            box.left += this.__dx - $(document).scrollLeft();\n                            box.top += this.__dy - $(document).scrollTop();\n                            this.activeModal.css(box);\n                        };\n\n                        if (this.resizer) {\n                            this.activeModal.removeClass(\"draged\");\n                            this.resizer.remove();\n                            this.resizer = null;\n                            this.resizerBg.remove();\n                            this.resizerBg = null;\n                            setModalPosition.call(this);\n                            //this.align();\n                        }\n\n                        jQuery(document.body)\n                            .unbind(ENM[\"mousemove\"] + \".ax5modal-\" + cfg.id)\n                            .unbind(ENM[\"mouseup\"] + \".ax5modal-\" + cfg.id)\n                            .unbind(\"mouseleave.ax5modal-\" + cfg.id);\n\n                        jQuery(document.body)\n                            .removeAttr('unselectable')\n                            .css('user-select', 'auto')\n                            .off('selectstart');\n\n                    }\n                };\n\n            /// private end\n\n            /**\n             * Preferences of modal UI\n             * @method ax5modal.setConfig\n             * @param {Object} config - 클래스 속성값\n             * @param {Number} [config.zIndex]\n             * @param {Boolean} [config.absolute=false]\n             * @returns {ax5modal}\n             * @example\n             * ```\n             * ```\n             */\n            //== class body start\n            this.init = function () {\n                this.onStateChanged = cfg.onStateChanged;\n            };\n\n            /**\n             * open the modal\n             * @method ax5modal.open\n             * @returns {ax5modal}\n             * @example\n             * ```\n             * my_modal.open();\n             * ```\n             */\n            this.open = function (opts, callback, tryCount) {\n                if (typeof tryCount === \"undefined\") tryCount = 0;\n                if (!this.activeModal) {\n                    opts = self.modalConfig = jQuery.extend(true, {}, cfg, opts);\n                    open.call(this, opts, callback);\n                    this.watingModal = false;\n                }\n                else if (tryCount < 3) {\n                    // 3번까지 재 시도\n                    this.watingModal = true;\n                    setTimeout((function () {\n                        this.open(opts, callback, tryCount + 1);\n                    }).bind(this), cfg.animateTime);\n                }\n                return this;\n            };\n\n            /**\n             * close the modal\n             * @method ax5modal.close\n             * @returns {ax5modal}\n             * @example\n             * ```\n             * my_modal.close();\n             * ```\n             */\n            this.close = function (opts) {\n                if (this.activeModal) {\n                    opts = self.modalConfig;\n                    this.activeModal.addClass(\"destroy\");\n                    jQuery(window).unbind(\"keydown.ax-modal\");\n                    jQuery(window).unbind(\"resize.ax-modal\");\n\n                    setTimeout((function () {\n                        if (this.activeModal) {\n\n                            // 프레임 제거\n                            if (opts.iframe) {\n                                var $iframe = this.$[\"iframe\"]; // iframe jQuery Object\n                                if ($iframe) {\n                                    var iframeObject = $iframe.get(0),\n                                        idoc = (iframeObject.contentDocument) ? iframeObject.contentDocument : iframeObject.contentWindow.document;\n\n                                    try {\n                                        $(idoc.body).children().each(function () {\n                                            $(this).remove();\n                                        });\n                                    } catch (e) {\n\n                                    }\n                                    idoc.innerHTML = \"\";\n                                    $iframe\n                                        .attr('src', 'about:blank')\n                                        .remove();\n\n                                    // force garbarge collection for IE only\n                                    window.CollectGarbage && window.CollectGarbage();\n                                }\n                            }\n\n                            this.activeModal.remove();\n                            this.activeModal = null;\n                        }\n                        // 모달 오픈 대기중이면 닫기 상태 전달 안함.\n                        if (!this.watingModal) {\n                            onStateChanged.call(this, opts, {\n                                self: this,\n                                state: \"close\"\n                            });\n                        }\n                    }).bind(this), cfg.animateTime);\n                }\n\n                this.minimized = false; // hoksi\n\n                return this;\n            };\n\n            /**\n             * @method ax5modal.minimize\n             * @returns {ax5modal}\n             */\n            this.minimize = (function () {\n\n                return function (minimizePosition) {\n\n                    if (this.minimized !== true) {\n\n                        var opts = self.modalConfig;\n                        if (typeof minimizePosition === \"undefined\") minimizePosition = cfg.minimizePosition;\n\n                        this.minimized = true;\n                        this.$.body.hide();\n                        self.modalConfig.originalHeight = opts.height;\n                        self.modalConfig.height = 0;\n                        alignProcessor[minimizePosition].call(this);\n\n                        onStateChanged.call(this, opts, {\n                            self: this,\n                            state: \"minimize\"\n                        });\n                    }\n\n                    return this;\n                };\n            })();\n\n            /**\n             * @method ax5modal.maximize\n             * @returns {ax5modal}\n             */\n            this.maximize = function () {\n                var opts = self.modalConfig;\n                if (this.minimized) {\n                    this.minimized = false;\n                    this.$.body.show();\n                    self.modalConfig.height = self.modalConfig.originalHeight;\n                    self.modalConfig.originalHeight = undefined;\n\n                    this.align({left: \"center\", top: \"middle\"});\n                    onStateChanged.call(this, opts, {\n                        self: this,\n                        state: \"restore\"\n                    });\n                }\n                return this;\n            };\n\n            /**\n             * setCSS\n             * @method ax5modal.css\n             * @param {Object} css -\n             * @returns {ax5modal}\n             */\n            this.css = function (css) {\n                if (this.activeModal && !self.fullScreen) {\n                    this.activeModal.css(css);\n                    if (css.width) {\n                        self.modalConfig.width = this.activeModal.width();\n                    }\n                    if (css.height) {\n                        self.modalConfig.height = this.activeModal.height();\n                        if (this.$[\"iframe\"]) {\n                            this.$[\"iframe-wrap\"].css({height: self.modalConfig.height});\n                            this.$[\"iframe\"].css({height: self.modalConfig.height});\n                        }\n                    }\n                }\n                return this;\n            };\n\n            /**\n             * @method ax5modal.setModalConfig\n             * @param _config\n             * @returns {ax5.ui.ax5modal}\n             */\n            this.setModalConfig = function (_config) {\n                self.modalConfig = jQuery.extend({}, self.modalConfig, _config);\n                this.align();\n                return this;\n            };\n\n            /**\n             * @method ax5modal.align\n             * @param position\n             * @param e\n             * @returns {ax5modal}\n             */\n            this.align = (function () {\n\n                return function (position, e) {\n                    if (!this.activeModal) return this;\n\n                    var opts = self.modalConfig,\n                        box = {\n                            width: opts.width,\n                            height: opts.height\n                        };\n\n                    var fullScreen = opts.isFullScreen = (function (_fullScreen) {\n                        if (typeof _fullScreen === \"undefined\") {\n                            return false;\n                        } else if (U.isFunction(_fullScreen)) {\n                            return _fullScreen();\n                        }\n                    })(opts.fullScreen);\n\n                    if (fullScreen) {\n                        if (opts.header) this.$.header.show();\n                        box.width = jQuery(window).width();\n                        box.height = opts.height;\n                        box.left = 0;\n                        box.top = 0;\n                    }\n                    else {\n                        if (opts.header) this.$.header.show();\n                        if (position) {\n                            jQuery.extend(true, opts.position, position);\n                        }\n\n                        if (opts.header) {\n                            opts.headerHeight = this.$.header.outerHeight();\n                            box.height += opts.headerHeight;\n                        } else {\n                            opts.headerHeight = 0;\n                        }\n\n                        //- position 정렬\n                        if (opts.position.left == \"left\") {\n                            box.left = (opts.position.margin || 0);\n                        }\n                        else if (opts.position.left == \"right\") {\n                            // window.innerWidth;\n                            box.left = jQuery(window).width() - box.width - (opts.position.margin || 0);\n                        }\n                        else if (opts.position.left == \"center\") {\n                            box.left = jQuery(window).width() / 2 - box.width / 2;\n                        }\n                        else {\n                            box.left = opts.position.left || 0;\n                        }\n\n                        if (opts.position.top == \"top\") {\n                            box.top = (opts.position.margin || 0);\n                        }\n                        else if (opts.position.top == \"bottom\") {\n                            box.top = jQuery(window).height() - box.height - (opts.position.margin || 0);\n                        }\n                        else if (opts.position.top == \"middle\") {\n                            box.top = jQuery(window).height() / 2 - box.height / 2;\n                        }\n                        else {\n                            box.top = opts.position.top || 0;\n                        }\n                        if (box.left < 0) box.left = 0;\n                        if (box.top < 0) box.top = 0;\n                    }\n\n                    this.activeModal.css(box);\n\n                    if (opts.iframe) {\n                        this.$[\"iframe-wrap\"].css({height: box.height - opts.headerHeight});\n                        this.$[\"iframe\"].css({height: box.height - opts.headerHeight});\n                    }\n                    return this;\n                };\n            })();\n\n            // 클래스 생성자\n            this.main = (function () {\n\n                UI.modal_instance = UI.modal_instance || [];\n                UI.modal_instance.push(this);\n\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                }\n\n            }).apply(this, arguments);\n        };\n        return ax5modal;\n    })());\n\n    MODAL = ax5.ui.modal;\n})();\n","// ax5.ui.modal.tmpl\n(function () {\n    var MODAL = ax5.ui.modal;\n    \n    var content = function () {\n        return ` \n        <div id=\"{{modalId}}\" data-modal-els=\"root\" class=\"ax5modal {{theme}} {{fullscreen}}\" style=\"{{styles}}\">\n            {{#header}}\n            <div class=\"ax-modal-header\" data-modal-els=\"header\">\n                {{{title}}}\n                {{#btns}}\n                    <div class=\"ax-modal-header-addon\">\n                    {{#@each}}\n                    <button tabindex=\"-1\" data-modal-header-btn=\"{{@key}}\" class=\"{{@value.theme}}\">{{{@value.label}}}</button>\n                    {{/@each}}\n                    </div>\n                {{/btns}}\n            </div>\n            {{/header}}\n            <div class=\"ax-modal-body\" data-modal-els=\"body\">\n            {{#iframe}}\n                <div data-modal-els=\"iframe-wrap\" style=\"-webkit-overflow-scrolling: touch; overflow: auto;position: relative;\">\n                    <table data-modal-els=\"iframe-loading\" style=\"width:100%;height:100%;\"><tr><td style=\"text-align: center;vertical-align: middle\">{{{iframeLoadingMsg}}}</td></tr></table>\n                    <iframe name=\"{{modalId}}-frame\" src=\"\" width=\"100%\" height=\"100%\" frameborder=\"0\" data-modal-els=\"iframe\" style=\"position: absolute;left:0;top:0;\"></iframe>\n                </div>\n                <form name=\"{{modalId}}-form\" data-modal-els=\"iframe-form\">\n                <input type=\"hidden\" name=\"modalId\" value=\"{{modalId}}\" />\n                {{#param}}\n                {{#@each}}\n                <input type=\"hidden\" name=\"{{@key}}\" value=\"{{@value}}\" />\n                {{/@each}}\n                {{/param}}\n                </form>\n            {{/iframe}}\n            {{^iframe}}\n                <div data-modal-els=\"body-frame\" style=\"position: absolute;left:0;top:0;width:100%;height:100%;\"></div>\n            {{/iframe}}\n            </div>\n            <div class=\"ax-modal-body-mask\"></div>\n        </div>\n        `;\n    };\n\n    MODAL.tmpl = {\n        \"content\" : content,\n\n        get: function (tmplName, data, columnKeys) {\n            return ax5.mustache.render(MODAL.tmpl[tmplName].call(this, columnKeys), data);\n        }\n    };\n})();"]}