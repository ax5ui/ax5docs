{"version":3,"sources":["ax5toast.js","ax5toast-tmpl.js"],"names":["TOAST","UI","ax5","ui","U","util","addClass","className","ax5toast","cfg","self","this","toastSeq","toastSeqClear","instanceId","getGuid","config","clickEventName","theme","width","icon","closeIcon","msg","lang","ok","cancel","displayTime","animateTime","containerPosition","toastContainer","queue","onStateChanged","opts","that","call","getContent","toastId","data","replace","btns","tmpl","get","open","callBack","clearTimeout","toastBox","box","id","containerId","jQuery","left","append","prepend","css","push","state","toastType","setTimeout","close","bind","find","on","e","btnOnClick","window","event","target","k","findParentNode","getAttribute","key","value","btn_target","onClick","init","styles","zIndex","document","body","join","isString","title","dialogConfig","extend","confirm","label","last","filter","remove","length","main","toast_instance","arguments","isObject","setConfig","apply","toast","toastDisplay","columnKeys","tmplName","mustache","render"],"mappings":"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","file":"ax5toast.min.js","sourcesContent":["// ax5.ui.toast\n(function () {\n\n    var UI = ax5.ui;\n    var U = ax5.util;\n    var TOAST;\n\n    UI.addClass({\n        className: \"toast\"\n    }, (function () {\n        /**\n         * @class ax5toast\n         * @classdesc\n         * @author tom@axisj.com\n         * @example\n         * ```\n         * ```js\n         * var toast = new ax5.ui.toast();\n         * toast.setConfig({\n         *     icon: '<i class=\"fa fa-bug\"></i>',\n         *     containerPosition: \"bottom-right\",\n         *     closeIcon: '<i class=\"fa fa-times\"></i>'\n         * });\n         *\n         * toast.onStateChanged = function(){\n         *     console.log(this);\n         * };\n         *\n         * toast.push({\n         *     icon: '<i class=\"fa fa-book\"></i>',\n         *     msg:\"999999\"\n         * });\n         *\n         * toast.push({\n         *     theme: theme,\n         *     msg: 'toast message'\n         * });\n         * ```\n         */\n        var ax5toast = function () {\n            var\n                self = this,\n                cfg,\n                toastSeq = 0, toastSeqClear = null;\n\n            this.instanceId = ax5.getGuid();\n            this.config = {\n                clickEventName: \"click\", //(('ontouchstart' in document.documentElement) ? \"touchstart\" : \"click\"),\n                theme: 'default',\n                width: 300,\n                icon: '',\n                closeIcon: '',\n                msg: '',\n                lang: {\n                    \"ok\": \"ok\", \"cancel\": \"cancel\"\n                },\n                displayTime: 3000,\n                animateTime: 250,\n                containerPosition: \"bottom-left\"\n            };\n            this.toastContainer = null;\n            this.queue = [];\n\n            cfg = this.config;\n\n            var\n                onStateChanged = function (opts, that) {\n                    if (opts && opts.onStateChanged) {\n                        opts.onStateChanged.call(that, that);\n                    }\n                    else if (this.onStateChanged) {\n                        this.onStateChanged.call(that, that);\n                    }\n\n                    opts = null;\n                    that = null;\n                    return true;\n                },\n                /**\n                 * @method ax5toast.getContent\n                 * @param {String} toastId\n                 * @param {Object} opts\n                 * @returns toastDisplay\n                 * @example\n                 * ```js\n                 * ax5toast.getContent('ax5-toast-3-1', opts);\n                 * ```\n                 */\n                getContent = function (toastId, opts) {\n\n                    var\n                        data = {\n                            toastId: toastId,\n                            theme: opts.theme,\n                            icon: opts.icon,\n                            msg: (opts.msg || \"\").replace(/\\n/g, \"<br/>\"),\n                            btns: opts.btns,\n                            closeIcon: opts.closeIcon\n                        };\n\n                    try {\n                        return TOAST.tmpl.get.call(this, \"toastDisplay\", data);\n                    }\n                    finally {\n                        toastId = null;\n                        data = null;\n                    }\n                },\n                /**\n                 * @method ax5toast.open\n                 * @param opts\n                 * @param callBack\n                 * @returns {ax5toast}\n                 */\n                open = function (opts, callBack) {\n                    if (toastSeqClear) clearTimeout(toastSeqClear);\n\n                    var\n                        toastBox,\n                        box = {\n                            width: opts.width\n                        };\n\n                    opts.id = 'ax5-toast-' + self.containerId + '-' + (++toastSeq);\n                    if (jQuery('#' + opts.id).get(0)) return this;\n\n                    if (U.left(cfg.containerPosition, '-') == 'bottom') {\n                        this.toastContainer.append(getContent(opts.id, opts));\n                    }\n                    else {\n                        this.toastContainer.prepend(getContent(opts.id, opts));\n                    }\n\n                    toastBox = jQuery('#' + opts.id);\n                    toastBox.css({width: box.width});\n                    opts.toastBox = toastBox;\n                    this.queue.push(opts);\n\n                    onStateChanged.call(this, opts, {\n                        self: this,\n                        state: \"open\",\n                        toastId: opts.id\n                    });\n\n                    if (opts.toastType === \"push\") {\n                        // 자동 제거 타이머 시작\n                        setTimeout((function () {\n                            this.close(opts, callBack);\n                        }).bind(this), cfg.displayTime);\n\n                        toastBox.find(\"[data-ax-toast-btn]\").on(cfg.clickEventName, (function (e) {\n                            btnOnClick.call(this, e || window.event, opts, toastBox, callBack);\n                        }).bind(this));\n                    }\n                    else if (opts.toastType === \"confirm\") {\n                        toastBox.find(\"[data-ax-toast-btn]\").on(cfg.clickEventName, (function (e) {\n                            btnOnClick.call(this, e || window.event, opts, toastBox, callBack);\n                        }).bind(this));\n                    }\n\n                    box = null;\n                },\n                btnOnClick = function (e, opts, toastBox, callBack, target, k) {\n                    target = U.findParentNode(e.target, function (target) {\n                        if (target.getAttribute(\"data-ax-toast-btn\")) {\n                            return true;\n                        }\n                    });\n\n                    if (target) {\n                        k = target.getAttribute(\"data-ax-toast-btn\");\n\n                        var that = {\n                            key: k, value: (opts.btns) ? opts.btns[k] : k,\n                            toastId: opts.id,\n                            btn_target: target\n                        };\n\n                        if (opts.btns && opts.btns[k].onClick) {\n                            opts.btns[k].onClick.call(that, k);\n                        }\n                        else if (opts.toastType === \"push\") {\n                            if (callBack) callBack.call(that, k);\n                            this.close(opts, callBack);\n                        }\n                        else if (opts.toastType === \"confirm\") {\n                            if (callBack) callBack.call(that, k);\n                            this.close(opts, callBack);\n                        }\n                    }\n\n                    e = null;\n                    opts = null;\n                    toastBox = null;\n                    callBack = null;\n                    target = null;\n                    k = null;\n                };\n\n            /**\n             * Preferences of toast UI\n             * @method ax5toast.set_config\n             * @param {Object} config - 클래스 속성값\n             * @returns {ax5toast}\n             * @example\n             * ```\n             * ```\n             */\n            //== class body start\n            this.init = function () {\n                this.onStateChanged = cfg.onStateChanged;\n                // after set_config();\n                self.containerId = ax5.getGuid();\n                var styles = [];\n                if (cfg.zIndex) {\n                    styles.push(\"z-index:\" + cfg.zIndex);\n                }\n                jQuery(document.body).append('<div class=\"ax5-ui-toast-container ' + cfg.containerPosition + '\" data-toast-container=\"' +\n                    '' + self.containerId + '\" style=\"' + styles.join(\";\") + '\"></div>');\n                this.toastContainer = jQuery('[data-toast-container=\"' + self.containerId + '\"]');\n            };\n\n            /**\n             * @method ax5toast.push\n             * @param opts\n             * @param callBack\n             * @returns {ax5toast}\n             */\n            this.push = function (opts, callBack) {\n                if (!self.containerId) {\n                    this.init();\n                }\n                if (U.isString(opts)) {\n                    opts = {\n                        title: cfg.title,\n                        msg: opts\n                    }\n                }\n                opts.toastType = \"push\";\n\n                self.dialogConfig = {};\n                jQuery.extend(true, self.dialogConfig, cfg, opts);\n                opts = self.dialogConfig;\n\n                open.call(this, opts, callBack);\n\n                opts = null;\n                callBack = null;\n                return this;\n            };\n\n            /**\n             * @method ax5toast.confirm\n             * @param opts\n             * @param callBack\n             * @returns {ax5toast}\n             */\n            this.confirm = function (opts, callBack) {\n                if (!self.containerId) {\n                    this.init();\n                }\n                if (U.isString(opts)) {\n                    opts = {\n                        title: cfg.title,\n                        msg: opts\n                    }\n                }\n                opts.toastType = \"confirm\";\n\n                self.dialogConfig = {};\n                jQuery.extend(true, self.dialogConfig, cfg, opts);\n                opts = self.dialogConfig;\n\n                if (typeof opts.btns === \"undefined\") {\n                    opts.btns = {\n                        ok: {label: cfg.lang[\"ok\"], theme: opts.theme}\n                    };\n                }\n                open.call(this, opts, callBack);\n\n                opts = null;\n                callBack = null;\n                return this;\n            };\n\n            /**\n             * close the toast\n             * @method ax5toast.close\n             * @returns {ax5toast}\n             * @example\n             * ```\n             * my_toast.close();\n             * ```\n             */\n            this.close = function (opts, callBack) {\n                if (typeof opts === \"undefined\") {\n                    opts = U.last(this.queue);\n                }\n\n                var toastBox = opts.toastBox;\n                toastBox.addClass((opts.toastType == \"push\") ? \"removed\" : \"destroy\");\n                this.queue = U.filter(this.queue, function () {\n                    return opts.id != this.id;\n                });\n                setTimeout((function () {\n                    var that = {\n                        toastId: opts.id\n                    };\n\n                    toastBox.remove();\n                    if (callBack) callBack.call(that);\n\n                    that = {\n                        self: this,\n                        state: \"close\",\n                        toastId: opts.id\n                    };\n                    onStateChanged.call(this, opts, that);\n\n                    // 3초후에도 아무 일이 없다면 완전히 제거\n                    if (this.queue.length === 0) {\n                        if (toastSeqClear) clearTimeout(toastSeqClear);\n                        toastSeqClear = setTimeout((function () {\n                            /// console.log(\"try clear seq\");\n                            if (this.queue.length === 0) toastSeq = 0;\n                        }).bind(this), 3000);\n                    }\n\n                    that = null;\n                    opts = null;\n                    callBack = null;\n                    toastBox = null;\n                }).bind(this), cfg.animateTime);\n\n                return this;\n            };\n\n            // 클래스 생성자\n            this.main = (function () {\n\n                UI.toast_instance = UI.toast_instance || [];\n                UI.toast_instance.push(this);\n\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                }\n            }).apply(this, arguments);\n        };\n        return ax5toast;\n    })());\n    TOAST = ax5.ui.toast;\n})();","// ax5.ui.toast.tmpl\n(function () {\n\n    var TOAST = ax5.ui.toast;\n\n    var toastDisplay = function(columnKeys) {\n        return `\n        <div id=\"{{toastId}}\" data-ax5-ui=\"toast\" class=\"ax5-ui-toast {{theme}}\">\n            {{#icon}}\n            <div class=\"ax-toast-icon\">{{{.}}}</div>\n            {{/icon}}\n            <div class=\"ax-toast-body\">{{{msg}}}</div>\n            {{#btns}}\n            <div class=\"ax-toast-buttons\">\n                <div class=\"ax-button-wrap\">\n                    {{#@each}}\n                    <button type=\"button\" data-ax-toast-btn=\"{{@key}}\" class=\"btn btn-{{@value.theme}}\">{{{@value.label}}}</button>\n                    {{/@each}}\n                </div>\n            </div>\n            {{/btns}}\n            {{^btns}}\n                <a class=\"ax-toast-close\" data-ax-toast-btn=\"ok\">{{{closeIcon}}}</a>\n            {{/btns}}\n            <div style=\"clear:both;\"></div>\n        </div>`;\n    };\n\n    TOAST.tmpl = {\n        \"toastDisplay\": toastDisplay,\n\n        get: function (tmplName, data, columnKeys) {\n            return ax5.mustache.render(TOAST.tmpl[tmplName].call(this, columnKeys), data);\n        }\n    };\n\n})();"]}