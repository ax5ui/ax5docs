{"version":3,"sources":["ax5combobox.js","ax5combobox-tmpl.js","ax5combobox-util.js"],"names":["COMBOBOX","UI","ax5","ui","U","util","addClass","className","version","ax5combobox","cfg","self","this","instanceId","getGuid","config","theme","animateTime","removeIcon","lang","noSelected","noOptions","loading","columnKeys","optionValue","optionText","optionSelected","queue","activecomboboxOptionGroup","activecomboboxQueueIndex","openTimer","closeTimer","waitOptionsCallback","keyUpTimer","$window","jQuery","window","onStateChanged","item","that","call","state","onChange","alignComboboxDisplay","w","i","length","$display","Math","max","$select","outerWidth","number","minWidth","css","min-width","reset","find","line-height","height","multiple","displayTableHeightAdjust","$target","displayTableHeight","$displayTable","outerHeight","abs","alignComboboxOptionGroup","append","pickerDirection","pos","positionMargin","dim","pickerDim","document","body","offset","width","winWidth","winHeight","direction","top","newTop","left","onBodyClick","e","target","clickEl","findParentNode","getAttribute","get","setOptionSelect","id","index","gindex","undefined","close","getLabel","queIdx","data","size","options","selected","hasSelected","tmpl","printLabel","$displayLabel","remove","$displayLabelInput","before","focusLabel","disabled","trigger","focus","clearLabel","val","blurLabel","onSearch","searchWord","waitOptions","html","O","optionsMap","forEach","_O","_OIndex","isArray","syncComboboxOptions","bind","focusWord","n","l","indexedOptions","regExp","replace","text","toLowerCase","@findex","optionsSort","sort","search","push","a","b","focusMove","focusClear","removeClass","removeAttr","optionFocusIndex","findex","_focusIndex","_prevFocusIndex","focusOptionEl","optionGroupScrollContainer","optionSelectedIndex","optionItemLength","hide","focusOptionElHeight","optionGroupScrollContainerHeight","innerHeight","optionGroupScrollContainerScrollTop","scrollTop","focusOptionElTop","position","setSelected","extend","po","elementOptions","newOptions","focusIndex","OIndex","optgroup","OO","OOIndex","@gindex","@index","value","join","toArray","option","prepend","getQueIdx","boundID","isString","console","log","info","getError","getSelected","_item","o","clearSelected","nn","processor","setValueType","attr","toString","arr","values","isNumber","key","addOptions","optionIndex","addedOption","clear","_option","noStateChange","init","bindComboboxTarget","debouncedFocusWord","debounce","comboboxEvent","click","selectedIndex","stopEvent","open","keyUp","which","eventKeys","ESC","disableCtrlKeys","40","38","BACKSPACE","keyDown","RETURN","DOWN","UP","blur","selectChange","name","tabIndex","label","formSize","unbind","comboboxConfig","JSON","parse","stringify","isObject","error","parseJson","onExpand","tryCount","focusTop","selectedOptionEl","clearTimeout","setTimeout","filter","stop","animate","event","update","setValue","_boundID","_value","_selected","_values","map","setText","_text","getSelectedOption","deepCopy","enable","disable","align","main","arguments","setConfig","apply","combobox","combobox_instance","fn","methodName","each","defaultConfig","optionGroup","comboboxDisplay","formSelect","formSelectOptions","tmplName","mustache","render","nodeTypeProcessor","1","node","editable","textNode","$","textContent","innerText","$option","3"],"mappings":"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","file":"ax5combobox.min.js","sourcesContent":["// ax5.ui.combobox\n(function () {\n\n    var UI = ax5.ui;\n    var U = ax5.util;\n    var COMBOBOX;\n\n    UI.addClass({\n        className: \"combobox\",\n        version: \"${VERSION}\"\n    }, (function () {\n        /**\n         * @class ax5combobox\n         * @classdesc\n         * @author tom@axisj.com\n         * @example\n         * ```js\n         * var options = [];\n         * options.push({value: \"1\", text: \"string\"});\n         * options.push({value: \"2\", text: \"number\"});\n         * options.push({value: \"3\", text: \"substr\"});\n         * options.push({value: \"4\", text: \"substring\"});\n         * options.push({value: \"search\", text: \"search\"});\n         * options.push({value: \"parseInt\", text: \"parseInt\"});\n         * options.push({value: \"toFixed\", text: \"toFixed\"});\n         * options.push({value: \"min\", text: \"min\"});\n         * options.push({value: \"max\", text: \"max\"});\n         *\n         * var myCombo = new ax5.ui.combobox({\n         *     theme: \"danger\",\n         *     removeIcon: '<i class=\"fa fa-times\" aria-hidden=\"true\"></i>'\n         * });\n         * ```\n         */\n\n        var ax5combobox = function () {\n            var\n                self = this,\n                cfg;\n\n            this.instanceId = ax5.getGuid();\n            this.config = {\n                theme: 'default',\n                animateTime: 250,\n                removeIcon: 'X',\n                lang: {\n                    noSelected: '',\n                    noOptions: 'no options',\n                    loading: 'now loading..'\n                },\n                columnKeys: {\n                    optionValue: 'value',\n                    optionText: 'text',\n                    optionSelected: 'selected'\n                }\n            };\n\n            this.queue = [];\n            this.activecomboboxOptionGroup = null;\n            this.activecomboboxQueueIndex = -1;\n            this.openTimer = null;\n            this.closeTimer = null;\n            this.waitOptionsCallback = null;\n            this.keyUpTimer = null;\n\n            cfg = this.config;\n\n            var $window = jQuery(window);\n            var\n                ctrlKeys = {\n                    \"18\": \"KEY_ALT\",\n                    \"8\": \"KEY_BACKSPACE\",\n                    \"17\": \"KEY_CONTROL\",\n                    \"46\": \"KEY_DELETE\",\n                    \"40\": \"KEY_DOWN\",\n                    \"35\": \"KEY_END\",\n                    \"187\": \"KEY_EQUAL\",\n                    \"27\": \"KEY_ESC\",\n                    \"36\": \"KEY_HOME\",\n                    \"45\": \"KEY_INSERT\",\n                    \"37\": \"KEY_LEFT\",\n                    \"189\": \"KEY_MINUS\",\n                    \"34\": \"KEY_PAGEDOWN\",\n                    \"33\": \"KEY_PAGEUP\",\n                    // \"190\": \"KEY_PERIOD\",\n                    \"13\": \"KEY_RETURN\",\n                    \"39\": \"KEY_RIGHT\",\n                    \"16\": \"KEY_SHIFT\",\n                    // \"32\": \"KEY_SPACE\",\n                    \"9\": \"KEY_TAB\",\n                    \"38\": \"KEY_UP\",\n                    \"91\": \"KEY_WINDOW\"\n                    //\"107\" : \"NUMPAD_ADD\",\n                    //\"194\" : \"NUMPAD_COMMA\",\n                    //\"110\" : \"NUMPAD_DECIMAL\",\n                    //\"111\" : \"NUMPAD_DIVIDE\",\n                    //\"12\" : \"NUMPAD_EQUAL\",\n                    //\"106\" : \"NUMPAD_MULTIPLY\",\n                    //\"109\" : \"NUMPAD_SUBTRACT\"\n                },\n                onStateChanged = function (item, that) {\n                    if (item && item.onStateChanged) {\n                        item.onStateChanged.call(that, that);\n                    }\n                    else if (this.onStateChanged) {\n                        this.onStateChanged.call(that, that);\n                    }\n\n                    if (that.state == \"changeValue\") {\n                        if (item && item.onChange) {\n                            item.onChange.call(that, that);\n                        }\n                        else if (this.onChange) {\n                            this.onChange.call(that, that);\n                        }\n                    }\n\n                    item = null;\n                    that = null;\n                    return true;\n                },\n                alignComboboxDisplay = function () {\n                    var i = this.queue.length, w;\n\n                    while (i--) {\n                        var item = this.queue[i];\n                        if (item.$display) {\n                            w = Math.max(item.$select.outerWidth(), U.number(item.minWidth));\n                            item.$display.css({\n                                \"min-width\": w\n                            });\n                            if (item.reset) {\n                                item.$display.find(\".addon-icon-reset\").css({\n                                    \"line-height\": this.queue[i].$display.height() + \"px\"\n                                });\n                            }\n\n                            // 높이조절 처리\n                            if (item.multiple) {\n                                var displayTableHeightAdjust = (function () {\n                                    return U.number(item.$display.css(\"border-top-width\")) + U.number(item.$display.css(\"border-bottom-width\"));\n                                }).call(this);\n                                item.$target.height('');\n                                item.$display.height('');\n\n                                var displayTableHeight = item.$displayTable.outerHeight();\n                                if (Math.abs(displayTableHeight - item.$target.height()) > displayTableHeightAdjust) {\n                                    item.$target.css({height: displayTableHeight + displayTableHeightAdjust + 4});\n                                    item.$display.css({height: displayTableHeight + displayTableHeightAdjust + 4});\n                                }\n                            }\n                        }\n                    }\n\n                    i = null;\n                    w = null;\n                    return this;\n                },\n                alignComboboxOptionGroup = function (append) {\n                    if (!this.activecomboboxOptionGroup) return this;\n\n                    var item = this.queue[this.activecomboboxQueueIndex],\n                        pos = {}, positionMargin = 0,\n                        dim = {}, pickerDim = {},\n                        pickerDirection;\n\n                    if (append) jQuery(document.body).append(this.activecomboboxOptionGroup);\n\n                    pos = item.$target.offset();\n                    dim = {\n                        width: item.$target.outerWidth(),\n                        height: item.$target.outerHeight()\n                    };\n                    pickerDim = {\n                        winWidth: Math.max($window.width(), jQuery(document.body).width()),\n                        winHeight: Math.max($window.height(), jQuery(document.body).height()),\n                        width: this.activecomboboxOptionGroup.outerWidth(),\n                        height: this.activecomboboxOptionGroup.outerHeight()\n                    };\n\n                    // picker css(width, left, top) & direction 결정\n                    if (!item.direction || item.direction === \"\" || item.direction === \"auto\") {\n                        // set direction\n                        pickerDirection = \"top\";\n\n                        if (pos.top - pickerDim.height - positionMargin < 0) {\n                            pickerDirection = \"top\";\n                        } else if (pos.top + dim.height + pickerDim.height + positionMargin > pickerDim.winHeight) {\n                            pickerDirection = \"bottom\";\n                        }\n                    } else {\n                        pickerDirection = item.direction;\n                    }\n\n                    if (append) {\n                        this.activecomboboxOptionGroup\n                            .addClass(\"direction-\" + pickerDirection);\n                    }\n                    this.activecomboboxOptionGroup\n                        .css((function () {\n                            if (pickerDirection == \"top\") {\n                                if (pos.top + dim.height + pickerDim.height + positionMargin > pickerDim.winHeight) {\n\n                                    var newTop = pos.top + dim.height / 2 - pickerDim.height / 2;\n                                    if (newTop + pickerDim.height + positionMargin > pickerDim.winHeight) {\n                                        newTop = 0;\n                                    }\n                                    if (newTop < 0) {\n                                        newTop = 0;\n                                    }\n\n                                    return {\n                                        left: pos.left,\n                                        top: newTop,\n                                        width: dim.width\n                                    }\n                                }\n                                return {\n                                    left: pos.left,\n                                    top: pos.top + dim.height + 1,\n                                    width: dim.width\n                                }\n                            }\n                            else if (pickerDirection == \"bottom\") {\n                                return {\n                                    left: pos.left,\n                                    top: pos.top - pickerDim.height - 1,\n                                    width: dim.width\n                                }\n                            }\n                        }).call(this));\n                },\n                onBodyClick = function (e, target) {\n                    if (!this.activecomboboxOptionGroup) return this;\n\n                    var\n                        item = this.queue[this.activecomboboxQueueIndex],\n                        clickEl = \"display\"\n                        ;\n\n                    target = U.findParentNode(e.target, function (target) {\n                        if (target.getAttribute(\"data-option-value\")) {\n                            clickEl = \"optionItem\";\n                            return true;\n                        }\n                        else if (item.$target.get(0) == target) {\n                            clickEl = \"display\";\n                            return true;\n                        }\n                    });\n\n                    if (!target) {\n                        this.close();\n                        return this;\n                    }\n                    else if (clickEl === \"optionItem\") {\n                        \n                        setOptionSelect.call(this, item.id, {\n                            index: {\n                                gindex: target.getAttribute(\"data-option-group-index\"),\n                                index: target.getAttribute(\"data-option-index\")\n                            }\n                        }, undefined, true);\n\n                        alignComboboxDisplay.call(this);\n                        alignComboboxOptionGroup.call(this);\n\n                        if (!item.multiple) {\n                            this.close();\n                        }\n                    }\n                    else {\n\n                    }\n\n                    return this;\n                },\n\n                getLabel = function (queIdx) {\n                    let item = this.queue[queIdx];\n\n                    // 템플릿에 전달 해야할 데이터 선언\n                    let data = {};\n                    data.id = item.id;\n                    data.theme = item.theme;\n                    data.size = \"ax5combobox-option-group-\" + item.size;\n                    data.multiple = item.multiple;\n                    data.lang = item.lang;\n                    data.options = item.options;\n                    data.selected = item.selected;\n                    data.hasSelected = (data.selected && data.selected.length > 0);\n                    data.removeIcon = item.removeIcon;\n\n                    return COMBOBOX.tmpl.get.call(this, \"label\", data, item.columnKeys);\n                },\n                printLabel = function (queIdx) {\n                    let item = this.queue[queIdx];\n\n                    item.$displayLabel.find('[data-ax5combobox-selected-label]').remove();\n                    item.$displayLabelInput.before(getLabel.call(this, queIdx));\n                },\n                focusLabel = function (queIdx) {\n                    if (this.queue[queIdx].disabled) return this;\n\n                    this.queue[queIdx].$displayLabel.trigger(\"focus\");\n                    this.queue[queIdx].$displayLabelInput.focus();\n                },\n                clearLabel = function (queIdx) {\n                    this.queue[queIdx].$displayLabelInput.val('');\n                },\n                blurLabel = function (queIdx) {\n                    this.queue[queIdx].$displayLabel.trigger(\"blur\");\n                    this.queue[queIdx].$displayLabelInput.trigger(\"blur\");\n                },\n                onSearch = function (queIdx, searchWord) {\n                    this.queue[queIdx].waitOptions = true;\n\n                    this.activecomboboxOptionGroup.find('[data-els=\"content\"]').html(jQuery(\n                        COMBOBOX.tmpl.get.call(this, \"option\", this.queue[queIdx], this.queue[queIdx].columnKeys)\n                    ));\n\n                    this.queue[queIdx].onSearch.call({\n                        self: this,\n                        item: this.queue[queIdx],\n                        searchWord: searchWord\n                    }, (function (O) {\n\n                        var data = {};\n                        var item = this.queue[this.activecomboboxQueueIndex];\n                        if (!item) return false;\n\n                        /// 현재 selected 검증후 처리\n                        (function (item, O) {\n                            var optionsMap = {};\n                            O.options.forEach(function (_O, _OIndex) {\n                                _O[\"@index\"] = _OIndex;\n                                optionsMap[_O[item.columnKeys.optionValue]] = _O;\n                            });\n                            if (U.isArray(item.selected)) {\n                                item.selected.forEach(function (_O) {\n                                    if (optionsMap[_O[item.columnKeys.optionValue]]) {\n                                        O.options[optionsMap[_O[item.columnKeys.optionValue]][\"@index\"]][item.columnKeys.optionSelected] = true;\n                                    }\n                                });\n                            }\n                        })(item, O);\n\n                        item.options = syncComboboxOptions.call(this, this.activecomboboxQueueIndex, O.options);\n\n                        alignComboboxDisplay.call(this);\n\n                        /// 템플릿에 전달할 오브젝트 선언\n                        data.id = item.id;\n                        data.theme = item.theme;\n                        data.size = \"ax5combobox-option-group-\" + item.size;\n                        data.multiple = item.multiple;\n                        data.lang = item.lang;\n                        data.options = item.options;\n\n                        this.activecomboboxOptionGroup.find('[data-els=\"content\"]').html(jQuery(\n                            COMBOBOX.tmpl.get.call(this, \"options\", data, item.columnKeys)\n                        ));\n\n                    }).bind(this));\n                },\n                focusWord = function (queIdx, searchWord) {\n                    //console.log(searchWord);\n\n                    if (this.activecomboboxQueueIndex == -1) return this; // 옵션박스가 닫힌상태이면 진행안함.\n                    var options = [], i = -1, l = this.queue[queIdx].indexedOptions.length - 1, n;\n\n                    if (searchWord != \"\") {\n                        var regExp = /[\\{\\}\\[\\]\\/?.,;:|\\)*~`!^\\-_+<>@\\#$%&\\\\\\=\\(\\'\\\"]/gi;\n                        searchWord = searchWord.replace(regExp, \"\");\n                        if (this.queue[queIdx].onSearch) {\n                            onSearch.call(this, queIdx, searchWord);\n\n                            try {\n                                return options;\n                            } finally {\n                                options = null;\n                                i = null;\n                                l = null;\n                                n = null;\n                            }\n                            // if there is a \"onSearch\", to end this process\n                        }\n\n                        while (l - i++) {\n                            n = this.queue[queIdx].indexedOptions[i];\n\n                            if (('' + n.text).toLowerCase() == searchWord.toLowerCase()) {\n                                options = [{'@findex': n['@findex'], optionsSort: 0}];\n                                break;\n                            } else {\n                                var sort = ('' + n.text).toLowerCase().search(searchWord.toLowerCase());\n                                if (sort > -1) {\n                                    options.push({'@findex': n['@findex'], optionsSort: sort});\n                                    if (options.length > 2) break;\n                                }\n                                sort = null;\n                            }\n                        }\n                        options.sort(function (a, b) {\n                            return a.optionsSort - b.optionsSort;\n                        });\n                    }\n\n                    if (options && options.length > 0) {\n                        focusMove.call(this, queIdx, undefined, options[0]['@findex']);\n                    } else {\n                        focusClear.call(this, queIdx);\n                    }\n\n                    try {\n                        return options;\n                    } finally {\n                        options = null;\n                        i = null;\n                        l = null;\n                        n = null;\n                    }\n                },\n                focusClear = function (queIdx) {\n                    if (this.activecomboboxOptionGroup) {\n                        this.activecomboboxOptionGroup\n                            .find('[data-option-focus-index]')\n                            .removeClass(\"hover\")\n                            .removeAttr(\"data-option-selected\");\n                    }\n\n                    this.queue[queIdx].optionFocusIndex = -1;\n                },\n                focusMove = function (queIdx, direction, findex) {\n                    var _focusIndex,\n                        _prevFocusIndex,\n                        focusOptionEl,\n                        optionGroupScrollContainer;\n                    var item = this.queue[queIdx];\n\n                    if (this.activecomboboxOptionGroup && item.options && item.options.length > 0) {\n\n                        if (typeof findex !== \"undefined\") {\n                            _focusIndex = findex\n                        }\n                        else {\n                            _prevFocusIndex = (item.optionFocusIndex == -1) ? item.optionSelectedIndex || -1 : item.optionFocusIndex;\n                            if (_prevFocusIndex == -1) {\n                                _focusIndex = 0;\n                                //_focusIndex = (direction > 0) ? 0 : item.optionItemLength - 1; // 맨 끝으로 보낼것인가 말 것인가.\n                            }\n                            else {\n                                _focusIndex = _prevFocusIndex + direction;\n                                if (_focusIndex < 0) _focusIndex = 0;\n                                else if (_focusIndex > item.optionItemLength - 1) _focusIndex = item.optionItemLength - 1;\n                            }\n                        }\n\n                        item.optionFocusIndex = _focusIndex;\n\n                        // 포커스 인덱스가 hide아이템을 만나면 hide 아이템이 안나올 때까지 루프를 순회 합니다.\n                        // todo : editable 로 추가된 options가 제거 되지 않으므로. 인덱스 검색을 좀 더 보강 해야함.\n                        if (item.options[_focusIndex] && item.options[_focusIndex].hide) { // 옵션이 없는 값이 선택된 경우\n                            if (typeof direction === \"undefined\") {\n                                return this;\n                            }\n                            else {\n                                var isStrop = false;\n                                while (item.options[_focusIndex].hide) {\n                                    _focusIndex = _focusIndex + direction;\n                                    if (_focusIndex < 0) {\n                                        _focusIndex = 0;\n                                        break;\n                                    }\n                                    else if (_focusIndex > item.optionItemLength - 1) {\n                                        _focusIndex = item.optionItemLength - 1;\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n\n                        if (typeof _focusIndex !== \"undefined\") {\n                            this.activecomboboxOptionGroup\n                                .find('[data-option-focus-index]')\n                                .removeClass(\"hover\");\n\n                            focusOptionEl = this.activecomboboxOptionGroup\n                                .find('[data-option-focus-index=\"' + _focusIndex + '\"]')\n                                .addClass(\"hover\");\n\n                            optionGroupScrollContainer = this.activecomboboxOptionGroup.find('[data-els=\"content\"]');\n\n                            if (focusOptionEl.get(0)) {\n                                let focusOptionElHeight = focusOptionEl.outerHeight(),\n                                    optionGroupScrollContainerHeight = optionGroupScrollContainer.innerHeight(),\n                                    optionGroupScrollContainerScrollTop = optionGroupScrollContainer.scrollTop(),\n                                    focusOptionElTop = focusOptionEl.position().top + optionGroupScrollContainer.scrollTop();\n\n                                if (optionGroupScrollContainerHeight + optionGroupScrollContainerScrollTop < focusOptionElTop + focusOptionElHeight) {\n                                    optionGroupScrollContainer.scrollTop(focusOptionElTop + focusOptionElHeight - optionGroupScrollContainerHeight);\n                                }\n                                else if (optionGroupScrollContainerScrollTop > focusOptionElTop) {\n                                    optionGroupScrollContainer.scrollTop(focusOptionElTop);\n                                }\n                                // optionGroup scroll check\n\n                                if (typeof direction !== \"undefined\") {\n                                    item.$displayLabelInput.val(item.options[_focusIndex].text);\n                                }\n                            }\n                        }\n                    }\n                },\n                syncComboboxOptions = (function () {\n                    var setSelected = function (queIdx, O) {\n                        if (!O) {\n                            this.queue[queIdx].selected = [];\n                        }\n                        else {\n                            this.queue[queIdx].selected.push(jQuery.extend({}, O));\n                            /*\n                             콤보박스는 selected가 없을 때 options의 첫번째 아이템이 selected가 되지 않는다.\n                             if (this.queue[queIdx].multiple) this.queue[queIdx].selected.push(jQuery.extend({}, O));\n                             else this.queue[queIdx].selected[0] = jQuery.extend({}, O);\n                             */\n                        }\n                    };\n\n                    return function (queIdx, options) {\n                        var item = this.queue[queIdx];\n                        var po, elementOptions, newOptions, focusIndex = 0;\n                        setSelected.call(this, queIdx, false); // item.selected 초기화\n\n                        if (options) {\n                            item.options = options;\n                            item.indexedOptions = [];\n\n                            // combobox options 태그 생성\n                            po = [];\n                            po.push('<option value=\"\"></option>');\n\n                            item.options.forEach(function (O, OIndex) {\n                                /// @gindex : index of optionGroup\n                                /// @index : index of options (if you use optionGroup then the index is not unique)\n                                if (O.optgroup) {\n                                    O['@gindex'] = OIndex;\n                                    O.options.forEach(function (OO, OOIndex) {\n                                        OO['@index'] = OOIndex;\n                                        OO['@findex'] = focusIndex;\n                                        po.push('<option value=\"' + OO[item.columnKeys.optionValue] + '\" '\n                                            + (OO[item.columnKeys.optionSelected] ? ' selected=\"selected\"' : '') + '>'\n                                            + OO[item.columnKeys.optionText] + '</option>');\n                                        if (OO[item.columnKeys.optionSelected]) {\n                                            setSelected.call(self, queIdx, OO);\n                                        }\n\n                                        item.indexedOptions.push({\n                                            '@gindex': OIndex,\n                                            '@index': OOIndex,\n                                            '@findex': focusIndex,\n                                            value: OO[item.columnKeys.optionValue],\n                                            text: OO[item.columnKeys.optionText]\n                                        });\n                                        focusIndex++;\n                                    });\n                                }\n                                else {\n                                    O['@index'] = OIndex;\n                                    O['@findex'] = focusIndex;\n                                    po.push('<option value=\"' + O[item.columnKeys.optionValue] + '\" '\n                                        + (O[item.columnKeys.optionSelected] ? ' selected=\"selected\"' : '') + '>'\n                                        + O[item.columnKeys.optionText] + '</option>');\n                                    if (O[item.columnKeys.optionSelected]) {\n                                        setSelected.call(self, queIdx, O);\n                                    }\n\n                                    item.indexedOptions.push({\n                                        '@index': OIndex,\n                                        '@findex': focusIndex,\n                                        value: O[item.columnKeys.optionValue],\n                                        text: O[item.columnKeys.optionText]\n                                    });\n                                    focusIndex++;\n                                }\n                            });\n                            item.optionItemLength = focusIndex;\n                            item.$select.html(po.join(''));\n                        }\n                        else {\n                            /// select > options 태그로 스크립트 options를 만들어주는 역할\n                            if (item.$select.get(0).options && item.$select.get(0).options.length) item.$select.get(0).options[0].selected = false;\n                            elementOptions = U.toArray(item.$select.get(0).options);\n\n                            // select option 스크립트 생성\n                            newOptions = [];\n                            elementOptions.forEach(function (O, OIndex) {\n                                var option = {};\n                                option[item.columnKeys.optionValue] = O.value;\n                                option[item.columnKeys.optionText] = O.text;\n                                option[item.columnKeys.optionSelected] = O.selected;\n                                option['@index'] = OIndex;\n                                option['@findex'] = focusIndex;\n                                if (O.selected) setSelected.call(self, queIdx, option);\n                                newOptions.push(option);\n                                focusIndex++;\n\n                                option = null;\n                            });\n                            item.options = newOptions;\n                            item.indexedOptions = newOptions;\n\n                            item.$select.prepend('<option value=\"\"></option>');\n                            item.$select.get(0).options[0].selected = true;\n                        }\n\n                        po = null;\n                        elementOptions = null;\n                        newOptions = null;\n                        return item.options;\n                    }\n                })(),\n                getQueIdx = function (boundID) {\n                    if (boundID instanceof jQuery) {\n                        boundID = boundID.data(\"data-ax5combobox-id\");\n                    } else if (!U.isString(boundID)) {\n                        boundID = jQuery(boundID).data(\"data-ax5combobox-id\");\n                    }\n                    if (!U.isString(boundID)) {\n                        console.log(ax5.info.getError(\"ax5combobox\", \"402\", \"getQueIdx\"));\n                        return;\n                    }\n                    return U.search(this.queue, function () {\n                        return this.id == boundID;\n                    });\n                },\n                getSelected = function (_item, o, selected) {\n                    if (typeof selected === \"undefined\") {\n                        return (_item.multiple) ? !o : true;\n                    } else {\n                        return selected;\n                    }\n                },\n                clearSelected = function (queIdx) {\n                    this.queue[queIdx].options.forEach(function (n) {\n                        if (n.optgroup) {\n                            n.options.forEach(function (nn) {\n                                nn.selected = false;\n                            });\n                        }\n                        else {\n                            n.selected = false;\n                        }\n                    });\n                },\n                setOptionSelect = (function () {\n                    var processor = {\n                        'index': function (queIdx, value, selected, setValueType) {\n                            // 클래스 내부에서 호출된 형태, 그런 이유로 옵션그룹에 대한 상태를 변경 하고 있다.\n                            var item = this.queue[queIdx];\n\n                            if (U.isString(value.index.gindex)) {\n                                if (typeof item.options[value.index.gindex] !== \"undefined\") {\n\n                                    item.options[value.index.gindex].options[value.index.index][item.columnKeys.optionSelected] = getSelected(item, item.options[value.index.gindex].options[value.index.index][item.columnKeys.optionSelected], selected);\n\n                                    if (self.activecomboboxOptionGroup) {\n                                        self.activecomboboxOptionGroup\n                                            .find('[data-option-group-index=\"' + value.index.gindex + '\"][data-option-index=\"' + value.index.index + '\"]')\n                                            .attr(\"data-option-Selected\", item.options[value.index.gindex].options[value.index.index][item.columnKeys.optionSelected].toString());\n                                    }\n                                }\n                            }\n                            else {\n                                if (typeof item.options[value.index.index] !== \"undefined\") {\n\n                                    item.options[value.index.index][item.columnKeys.optionSelected] =\n                                        getSelected(item, item.options[value.index.index][item.columnKeys.optionSelected], selected);\n\n                                    if (self.activecomboboxOptionGroup) {\n                                        self.activecomboboxOptionGroup\n                                            .find('[data-option-index=\"' + value.index.index + '\"]')\n                                            .attr(\"data-option-Selected\", item.options[value.index.index][item.columnKeys.optionSelected].toString());\n                                    }\n                                }\n                            }\n\n                            if (typeof setValueType === \"undefined\" || setValueType !== \"justSetValue\") {\n                                syncComboboxOptions.call(this, queIdx, item.options);\n                                alignComboboxOptionGroup.call(this);\n                            }\n                        },\n                        'arr': function (queIdx, values, selected, setValueType) {\n                            values.forEach(function (value) {\n                                if (U.isString(value) || U.isNumber(value)) {\n                                    processor.text.call(self, queIdx, value, selected, \"justSetValue\");\n                                }\n                                else {\n                                    for (var key in processor) {\n                                        if (value[key]) {\n                                            processor[key].call(self, queIdx, value, selected, \"justSetValue\");\n                                            break;\n                                        }\n                                    }\n                                }\n                            });\n\n                            syncComboboxOptions.call(this, queIdx, this.queue[queIdx].options);\n                            alignComboboxOptionGroup.call(this);\n                        },\n                        'value': function (queIdx, value, selected, setValueType) {\n                            var item = this.queue[queIdx];\n                            var addOptions;\n                            var optionIndex = U.search(item.options, function () {\n                                return this[item.columnKeys.optionValue] == value[item.columnKeys.optionValue];\n                            });\n\n                            if (optionIndex > -1) {\n                                item.options[optionIndex][item.columnKeys.optionSelected]\n                                    = getSelected(item, item.options[optionIndex][item.columnKeys.optionSelected], selected);\n                            }\n                            else {\n                                // 새로운 값 추가\n                                optionIndex = item.options.length;\n                                addOptions = {\n                                    \"@index\": optionIndex,\n                                    hide: true,\n                                    addedOption: true\n                                };\n                                addOptions[item.columnKeys.optionValue] = value;\n                                addOptions[item.columnKeys.optionText] = value;\n                                item.options.push(addOptions);\n                                item.options[optionIndex][item.columnKeys.optionSelected]\n                                    = getSelected(item, item.options[optionIndex][item.columnKeys.optionSelected], selected);\n                            }\n                            if (typeof setValueType === \"undefined\" || setValueType !== \"justSetValue\") {\n                                syncComboboxOptions.call(this, queIdx, this.queue[queIdx].options);\n                                alignComboboxOptionGroup.call(this);\n                            }\n                        },\n                        'text': function (queIdx, value, selected, setValueType) {\n                            var item = this.queue[queIdx];\n                            var addOptions;\n                            var optionIndex = U.search(item.options, function () {\n                                return this[item.columnKeys.optionText] == value;\n                            });\n\n                            if (optionIndex > -1) {\n                                item.options[optionIndex][item.columnKeys.optionSelected]\n                                    = getSelected(item, item.options[optionIndex][item.columnKeys.optionSelected], selected);\n                            }\n                            else {\n                                // 새로운 값 추가\n                                optionIndex = item.options.length;\n                                addOptions = {\n                                    \"@index\": optionIndex,\n                                    hide: true,\n                                    addedOption: true\n                                };\n                                addOptions[item.columnKeys.optionValue] = value;\n                                addOptions[item.columnKeys.optionText] = value;\n                                item.options.push(addOptions);\n                                item.options[optionIndex][item.columnKeys.optionSelected]\n                                    = getSelected(item, item.options[optionIndex][item.columnKeys.optionSelected], selected);\n                            }\n                            if (typeof setValueType === \"undefined\" || setValueType !== \"justSetValue\") {\n                                syncComboboxOptions.call(this, queIdx, this.queue[queIdx].options);\n                                alignComboboxOptionGroup.call(this);\n                            }\n                        },\n                        'clear': function (queIdx) {\n                            clearSelected.call(this, queIdx);\n                            syncComboboxOptions.call(this, queIdx, this.queue[queIdx].options);\n                            //focusLabel.call(this, queIdx);\n                            focusClear.call(this, queIdx);\n\n                            if (this.activecomboboxOptionGroup) {\n                                this.activecomboboxOptionGroup\n                                    .find('[data-option-index]')\n                                    .attr(\"data-option-Selected\", \"false\");\n                            }\n                            this.queue[queIdx].optionSelectedIndex = -1;\n                        }\n                    };\n                    return function (boundID, value, selected, _option) {\n                        var queIdx = (U.isNumber(boundID)) ? boundID : getQueIdx.call(this, boundID);\n                        if (queIdx === -1) {\n                            console.log(ax5.info.getError(\"ax5combobox\", \"402\", \"val\"));\n                            return;\n                        }\n\n                        if (typeof value == \"undefined\") {\n                            throw \"error not found value\";\n                        }\n                        else if (U.isArray(value)) {\n                            processor.clear.call(this, queIdx);\n                            processor.arr.call(this, queIdx, (this.queue[queIdx].multiple || value.length == 0) ? value : [value[value.length - 1]], selected);\n                        }\n                        else if (U.isString(value) || U.isNumber(value)) {\n                            if (typeof value !== \"undefined\" && value !== null && !this.queue[queIdx].multiple) {\n                                clearSelected.call(this, queIdx);\n                            }\n                            processor.text.call(this, queIdx, value, selected, \"justSetValue\");\n                        }\n                        else {\n                            if (value === null) {\n                                processor.clear.call(this, queIdx);\n                            }\n                            else {\n                                if (!this.queue[queIdx].multiple) {\n                                    clearSelected.call(this, queIdx);\n                                }\n                                for (var key in processor) {\n                                    if (value[key]) {\n                                        processor[key].call(this, queIdx, value, selected, \"justSetValue\");\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n\n                        syncComboboxOptions.call(this, queIdx, this.queue[queIdx].options);\n                        printLabel.call(this, queIdx);\n                        focusLabel.call(this, queIdx);\n\n                        if (typeof value !== \"undefined\") {\n                            if (_option && (!_option.noStateChange)) {\n                                onStateChanged.call(this, this.queue[queIdx], {\n                                    self: this,\n                                    item: this.queue[queIdx],\n                                    state: \"changeValue\",\n                                    value: this.queue[queIdx].selected\n                                });\n                            }\n                        }\n\n                        boundID = null;\n                        return this;\n                    };\n                })();\n\n            /// private end\n\n            /**\n             * Preferences of combobox UI\n             * @method ax5combobox.setConfig\n             * @param {Object} config - 클래스 속성값\n             * @returns {ax5combobox}\n             * @example\n             * ```\n             * ```\n             */\n            this.init = function () {\n                this.onStateChanged = cfg.onStateChanged;\n                this.onChange = cfg.onChange;\n                jQuery(window).bind(\"resize.ax5combobox-display-\" + this.instanceId, (function () {\n                    alignComboboxDisplay.call(this);\n                }).bind(this));\n            };\n\n            /**\n             * bind combobox\n             * @method ax5combobox.bind\n             * @param {Object} item\n             * @param {String} [item.id]\n             * @param {String} [item.theme]\n             * @param {Boolean} [item.multiple]\n             * @param {Element} item.target\n             * @param {Object[]} item.options\n             * @returns {ax5combobox}\n             */\n            this.bind = function (item) {\n                var bindComboboxTarget = (function () {\n                    var debouncedFocusWord = U.debounce(function (queIdx) {\n                        if (this.activecomboboxQueueIndex == -1) return this; // 옵션박스가 닫힌상태이면 진행안함.\n                        focusWord.call(self, queIdx, this.queue[queIdx].$displayLabelInput.val());\n                    }, 150);\n\n                    var blurLabel = function (queIdx) {\n                        clearLabel.call(this, queIdx);\n                    };\n\n                    var comboboxEvent = {\n                        'click': function (queIdx, e) {\n                            var clickEl;\n                            var target = U.findParentNode(e.target, function (target) {\n                                if (target.getAttribute(\"data-ax5combobox-remove\")) {\n                                    clickEl = \"optionItemRemove\";\n                                    return true;\n                                }\n                                else if (target.getAttribute(\"data-selected-clear\")) {\n                                    clickEl = \"clear\";\n                                    return true;\n                                }\n                            });\n\n                            if (target) {\n                                if (clickEl === \"optionItemRemove\") {\n                                    var selectedIndex = target.getAttribute(\"data-ax5combobox-remove-index\");\n                                    var option = this.queue[queIdx].selected[selectedIndex];\n                                    setOptionSelect.call(this, queIdx, {\n                                        index: {\n                                            gindex: option['@gindex'],\n                                            index: option['@index']\n                                        }\n                                    }, false, true);\n                                    alignComboboxDisplay.call(this);\n                                    alignComboboxOptionGroup.call(this);\n                                    focusLabel.call(this, queIdx);\n                                    U.stopEvent(e);\n                                    return this;\n                                } else if (clickEl === \"clear\") {\n                                    setOptionSelect.call(this, queIdx, {clear: true});\n                                    alignComboboxDisplay.call(this);\n                                    alignComboboxOptionGroup.call(this);\n                                    focusLabel.call(this, queIdx);\n                                }\n                            }\n                            else {\n                                if (self.activecomboboxQueueIndex == queIdx) {\n                                    if (this.queue[queIdx].optionFocusIndex == -1) { // 아이템에 포커스가 활성화 된 후, 마우스 이벤트 이면 무시\n                                        self.close();\n                                    }\n                                }\n                                else {\n                                    self.open(queIdx);\n                                    focusLabel.call(this, queIdx);\n                                }\n                            }\n                        },\n                        'keyUp': function (queIdx, e) {\n                            /// 약속된 키 이벤트가 발생하면 stopEvent를 통해 keyUp 이벤트가 발생되지 않도록 막아주는 센스\n                            if (e.which == ax5.info.eventKeys.ESC && self.activecomboboxQueueIndex === -1) { // ESC키를 누르고 옵션그룹이 열려있지 않은 경우\n                                U.stopEvent(e);\n                                return this;\n                            }\n                            if (self.activecomboboxQueueIndex != queIdx) { // 닫힌 상태 인경우\n                                self.open(queIdx);\n                                U.stopEvent(e);\n                            }\n\n                            var disableCtrlKeys = {\n                                \"40\": \"KEY_DOWN\",\n                                \"38\": \"KEY_UP\"\n                            };\n                            if (!disableCtrlKeys[e.which]) {\n\n                                // backspace 감지 하여 input 값이 없으면 스탑이벤트 처리 할 것\n                                if (e.which == ax5.info.eventKeys.BACKSPACE && this.queue[queIdx].$displayLabelInput.val() == \"\") {\n                                    // 마지막 아이템을 제거.\n                                    if(this.queue[queIdx].selected.length > 0) {\n                                        var option = this.queue[queIdx].selected[this.queue[queIdx].selected.length - 1];\n                                        setOptionSelect.call(this, queIdx, {\n                                            index: {\n                                                gindex: option['@gindex'],\n                                                index: option['@index']\n                                            }\n                                        }, false, true);\n                                    }\n                                    alignComboboxDisplay.call(this);\n                                    alignComboboxOptionGroup.call(this);\n                                    U.stopEvent(e);\n                                } else {\n                                    debouncedFocusWord.call(this, queIdx);\n                                }\n                            }\n                        },\n                        'keyDown': function (queIdx, e) {\n                            if (e.which == ax5.info.eventKeys.ESC) {\n                                clearLabel.call(this, queIdx);\n                                this.close();\n                                U.stopEvent(e);\n                            }\n                            else if (e.which == ax5.info.eventKeys.RETURN) {\n\n                                setOptionSelect.call(this, item.id, {\n                                    index: {\n                                        gindex: item.indexedOptions[item.optionFocusIndex][\"@gindex\"],\n                                        index: item.indexedOptions[item.optionFocusIndex][\"@index\"]\n                                    }\n                                }, undefined, true);\n                                clearLabel.call(this, queIdx);\n                                alignComboboxDisplay.call(this);\n\n                                this.close();\n                                //alignComboboxOptionGroup.call(this);\n\n                                U.stopEvent(e);\n                            }\n                            else if (e.which == ax5.info.eventKeys.DOWN) {\n                                focusMove.call(this, queIdx, 1);\n                                U.stopEvent(e);\n                            }\n                            else if (e.which == ax5.info.eventKeys.UP) {\n                                focusMove.call(this, queIdx, -1);\n                                U.stopEvent(e);\n                            }\n                        },\n                        'focus': function (queIdx, e) {\n                            //console.log(e);\n                        },\n                        'blur': function (queIdx, e) {\n                            blurLabel.call(this, queIdx);\n                            U.stopEvent(e);\n                        },\n                        'selectChange': function (queIdx, e) {\n                            setOptionSelect.call(this, queIdx, {value: this.queue[queIdx].$select.val()}, true);\n                        }\n                    };\n\n                    return function (queIdx) {\n                        var item = this.queue[queIdx];\n                        var data = {};\n                        // 현재 선택된 값을 담아두는 저장소, syncComboboxOptions를 통해 options와 selected값을 동기화 처리 한다.\n                        item.selected = [];\n\n                        if (!item.$display) {\n                            /// 템플릿에 전달할 오브젝트 선언\n                            data.instanceId = this.instanceId;\n                            data.id = item.id;\n                            data.name = item.name;\n                            data.theme = item.theme;\n                            data.tabIndex = item.tabIndex;\n                            data.multiple = item.multiple;\n                            data.reset = item.reset;\n\n                            data.label = getLabel.call(this, queIdx);\n                            data.formSize = (function () {\n                                return (item.size) ? \"input-\" + item.size : \"\";\n                            })();\n\n                            //item.$display = jQuery(ax5.mustache.render(COMBOBOX.tmpl[\"comboboxDisplay\"].call(this, queIdx), data));\n                            item.$display = jQuery(COMBOBOX.tmpl.get.call(this, \"comboboxDisplay\", data, item.columnKeys));\n                            item.$displayTable = item.$display.find('[data-els=\"display-table\"]');\n                            item.$displayLabel = item.$display.find('[data-ax5combobox-display=\"label\"]');\n                            item.$displayLabelInput = item.$display.find('[data-ax5combobox-display=\"input\"]');\n\n\n                            if (item.$target.find(\"select\").get(0)) {\n                                item.$select = item.$target.find(\"select\");\n                                item.$select\n                                    .attr(\"tabindex\", \"-1\")\n                                    .attr(\"class\", \"form-control \" + data.formSize);\n                                if (data.name) {\n                                    item.$select.attr(\"name\", \"name\");\n                                }\n                                if (data.multiple) {\n                                    item.$select.attr(\"multiple\", \"multiple\");\n                                }\n                            }\n                            else {\n                                //item.$select = jQuery(ax5.mustache.render(COMBOBOX.tmpl[\"formSelect\"].call(this, queIdx), data));\n                                item.$select = jQuery(COMBOBOX.tmpl.get.call(this, \"formSelect\", data, item.columnKeys));\n                                item.$target.append(item.$select);\n                            }\n\n                            item.$target.append(item.$display);\n                            // 라벨에 사용자 입력 필드가 있으므로 displayInput은 필요 없음.\n                            // select.options로 item.options를 만들어내거나 item.options로 select.options를 만들어냄\n                            item.options = syncComboboxOptions.call(this, queIdx, item.options);\n                        }\n                        else {\n                            item.$displayLabel\n                                .html(getLabel.call(this, queIdx));\n                            item.options = syncComboboxOptions.call(this, queIdx, item.options);\n                        }\n\n\n                        alignComboboxDisplay.call(this);\n\n                        item.$display\n                            .unbind('click.ax5combobox')\n                            .bind('click.ax5combobox', comboboxEvent.click.bind(this, queIdx));\n\n                        // combobox 태그에 대한 이벤트 감시\n\n\n                        item.$displayLabelInput\n                            .unbind(\"focus.ax5combobox\")\n                            .bind(\"focus.ax5combobox\", comboboxEvent.focus.bind(this, queIdx))\n                            .unbind(\"blur.ax5combobox\")\n                            .bind(\"blur.ax5combobox\", comboboxEvent.blur.bind(this, queIdx))\n                            .unbind('keyup.ax5combobox')\n                            .bind('keyup.ax5combobox', comboboxEvent.keyUp.bind(this, queIdx))\n                            .unbind(\"keydown.ax5combobox\")\n                            .bind(\"keydown.ax5combobox\", comboboxEvent.keyDown.bind(this, queIdx));\n\n                        // select 태그에 대한 change 이벤트 감시\n\n                        item.$select\n                            .unbind('change.ax5combobox')\n                            .bind('change.ax5combobox', comboboxEvent.selectChange.bind(this, queIdx));\n\n                        data = null;\n                        item = null;\n                        queIdx = null;\n                        return this;\n                    };\n                })();\n\n                var\n                    comboboxConfig = {},\n                    queIdx;\n\n                item = jQuery.extend(true, comboboxConfig, cfg, item);\n                if (!item.target) {\n                    console.log(ax5.info.getError(\"ax5combobox\", \"401\", \"bind\"));\n                    return this;\n                }\n\n                item.$target = jQuery(item.target);\n\n                if (!item.id) item.id = item.$target.data(\"data-ax5combobox-id\");\n                if (!item.id) {\n                    item.id = 'ax5combobox-' + ax5.getGuid();\n                    item.$target.data(\"data-ax5combobox-id\", item.id);\n                }\n                item.name = item.$target.attr(\"data-ax5combobox\");\n                if (item.options) {\n                    item.options = JSON.parse(JSON.stringify(item.options));\n                }\n\n                // target attribute data\n                (function (data) {\n                    if (U.isObject(data) && !data.error) {\n                        item = jQuery.extend(true, item, data);\n                    }\n                })(U.parseJson(item.$target.attr(\"data-ax5combobox-config\"), true));\n\n                queIdx = U.search(this.queue, function () {\n                    return this.id == item.id;\n                });\n\n                if (queIdx === -1) {\n                    this.queue.push(item);\n                    bindComboboxTarget.call(this, this.queue.length - 1);\n                }\n                else {\n                    this.queue[queIdx] = jQuery.extend(true, {}, this.queue[queIdx], item);\n                    bindComboboxTarget.call(this, queIdx);\n                }\n\n                comboboxConfig = null;\n                queIdx = null;\n                return this;\n            };\n\n            /**\n             * open the optionBox of combobox\n             * @method ax5combobox.open\n             * @param {(String|Number|Element)} boundID\n             * @param {Number} [tryCount]\n             * @returns {ax5combobox}\n             */\n            this.open = (function () {\n                var onExpand = function (item) {\n                    item.onExpand.call({\n                        self: this,\n                        item: item\n                    }, (function (O) {\n                        if (this.waitOptionsCallback) {\n                            var data = {};\n                            var item = this.queue[this.activecomboboxQueueIndex];\n\n                            /// 현재 selected 검증후 처리\n                            (function (item, O) {\n                                var optionsMap = {};\n                                O.options.forEach(function (_O, _OIndex) {\n                                    _O[\"@index\"] = _OIndex;\n                                    optionsMap[_O[item.columnKeys.optionValue]] = _O;\n                                });\n                                if (U.isArray(item.selected)) {\n                                    item.selected.forEach(function (_O) {\n                                        if (optionsMap[_O[item.columnKeys.optionValue]]) {\n                                            O.options[optionsMap[_O[item.columnKeys.optionValue]][\"@index\"]][item.columnKeys.optionSelected] = true;\n                                        }\n                                    });\n                                }\n                            })(item, O);\n\n                            item.options = syncComboboxOptions.call(this, this.activecomboboxQueueIndex, O.options);\n                            printLabel.call(this, this.activecomboboxQueueIndex);\n                            alignComboboxDisplay.call(this);\n\n                            /// 템플릿에 전달할 오브젝트 선언\n                            data.id = item.id;\n                            data.theme = item.theme;\n                            data.size = \"ax5combobox-option-group-\" + item.size;\n                            data.multiple = item.multiple;\n                            data.lang = item.lang;\n                            data.options = item.options;\n                            /*\n                             this.activecomboboxOptionGroup.find('[data-els=\"content\"]').html(jQuery(\n                             ax5.mustache.render(COMBOBOX.tmpl[\"options\"].call(this, item.columnKeys), data)\n                             ));\n                             */\n                            this.activecomboboxOptionGroup.find('[data-els=\"content\"]').html(jQuery(\n                                COMBOBOX.tmpl.get.call(this, \"options\", data, item.columnKeys)\n                            ));\n                        }\n                    }).bind(this));\n                };\n                return function (boundID, tryCount) {\n                    this.waitOptionsCallback = null;\n\n                    /**\n                     * open combobox from the outside\n                     */\n                    var queIdx = (U.isNumber(boundID)) ? boundID : getQueIdx.call(this, boundID);\n                    var item = this.queue[queIdx];\n                    var data = {}, focusTop, selectedOptionEl;\n\n                    if (item.$display.attr(\"disabled\")) return this;\n\n                    if (this.openTimer) clearTimeout(this.openTimer);\n                    if (this.activecomboboxOptionGroup) {\n                        if (this.activecomboboxQueueIndex == queIdx) {\n                            return this;\n                        }\n\n                        if (tryCount > 2) return this;\n                        this.close();\n                        this.openTimer = setTimeout((function () {\n                            this.open(queIdx, (tryCount || 0) + 1);\n                        }).bind(this), cfg.animateTime);\n\n                        return this;\n                    }\n\n                    item.optionFocusIndex = -1; // optionGroup이 열리면 포커스 인덱스 초기화 -1로\n                    if (item.selected && item.selected.length > 0) {\n                        item.optionSelectedIndex = item.selected[0][\"@findex\"];\n                    }\n\n                    /// 템플릿에 전달할 오브젝트 선언\n                    data.id = item.id;\n                    data.theme = item.theme;\n                    data.size = \"ax5combobox-option-group-\" + item.size;\n                    data.multiple = item.multiple;\n\n                    data.lang = item.lang;\n                    item.$display.attr(\"data-combobox-option-group-opened\", \"true\");\n\n                    if (item.onExpand) {\n                        // onExpand 인 경우 UI 대기모드 추가\n                        data.waitOptions = true;\n                    }\n                    data.options = U.filter(item.options, function () {\n                        return !this.hide;\n                    });\n\n                    //this.activecomboboxOptionGroup = jQuery(ax5.mustache.render(COMBOBOX.tmpl[\"optionGroup\"].call(this, item.columnKeys), data));\n                    this.activecomboboxOptionGroup = jQuery(COMBOBOX.tmpl.get.call(this, \"optionGroup\", data, item.columnKeys));\n                    //this.activecomboboxOptionGroup.find('[data-els=\"content\"]').html(jQuery(ax5.mustache.render(COMBOBOX.tmpl[\"options\"].call(this, item.columnKeys), data)));\n                    this.activecomboboxOptionGroup.find('[data-els=\"content\"]').html(jQuery(\n                        COMBOBOX.tmpl.get.call(this, \"options\", data, item.columnKeys)\n                    ));\n                    this.activecomboboxQueueIndex = queIdx;\n\n                    alignComboboxOptionGroup.call(this, \"append\"); // alignComboboxOptionGroup 에서 body append\n                    jQuery(window).bind(\"resize.ax5combobox-\" + this.instanceId, (function () {\n                        alignComboboxOptionGroup.call(this);\n                    }).bind(this));\n\n                    if (item.selected && item.selected.length > 0) {\n                        selectedOptionEl = this.activecomboboxOptionGroup.find('[data-option-index=\"' + item.selected[0][\"@index\"] + '\"]');\n                        if (selectedOptionEl.get(0)) {\n                            focusTop = selectedOptionEl.position().top - this.activecomboboxOptionGroup.height() / 3;\n                            this.activecomboboxOptionGroup.find('[data-els=\"content\"]')\n                                .stop().animate({scrollTop: focusTop}, item.animateTime, 'swing', function () {\n                            });\n                        }\n                    }\n\n                    jQuery(window).bind(\"click.ax5combobox-\" + this.instanceId, (function (e) {\n                        e = e || window.event;\n                        onBodyClick.call(this, e);\n                        U.stopEvent(e);\n                    }).bind(this));\n\n                    onStateChanged.call(this, item, {\n                        self: this,\n                        state: \"open\",\n                        item: item\n                    });\n\n                    // waitOption timer\n                    if (item.onExpand) {\n                        this.waitOptionsCallback = true;\n                        onExpand.call(this, item);\n                    }\n\n                    data = null;\n                    focusTop = null;\n                    selectedOptionEl = null;\n                    return this;\n                }\n            })();\n\n            /**\n             * @method ax5combobox.update\n             * @param {(Object|String)} item\n             * @returns {ax5combobox}\n             */\n            this.update = function (_item) {\n                this.bind(_item);\n                return this;\n            };\n\n            /**\n             * @method ax5combobox.setValue\n             * @param {(jQueryObject|Element|Number)} _boundID\n             * @param {(String|Array)} _value\n             * @param {Boolean} [_selected]\n             * @return {ax5combobox}\n             * @example\n             * ```js\n             * myCombo.setValue($('[data-ax5combobox=\"combo1\"]'), \"1\");\n             * myCombo.setValue($('[data-ax5combobox=\"combo1\"]'), [\"1\", \"2\"]);\n             * ```\n             */\n            this.setValue = function (_boundID, _value, _selected) {\n                var queIdx = (U.isNumber(_boundID)) ? _boundID : getQueIdx.call(this, _boundID);\n                if (queIdx === -1) {\n                    console.log(ax5.info.getError(\"ax5combobox\", \"402\", \"val\"));\n                    return;\n                }\n\n                clearSelected.call(this, queIdx);\n\n                if (U.isArray(_value)) {\n                    var _values = U.map(_value, function () {\n                        return {value: this};\n                    });\n                    setOptionSelect.call(this, queIdx, _values, _selected || true, {noStateChange: true});\n                }\n                else if (U.isString(_value) || U.isNumber(_value)) {\n                    setOptionSelect.call(this, queIdx, {value: _value}, _selected || true, {noStateChange: true});\n                } else {\n                    printLabel.call(this, queIdx);\n                }\n\n                blurLabel.call(this, queIdx);\n                alignComboboxDisplay.call(this);\n\n                return this;\n            };\n\n            /**\n             * @method ax5combobox.setText\n             * @param {(jQueryObject|Element|Number)} _boundID\n             * @param {(String|Array)} _text\n             * @param {Boolean} [_selected]\n             * @returns {ax5combobox}\n             * @example\n             * ```js\n             * myCombo.setText($('[data-ax5combobox=\"combo1\"]'), \"string\");\n             * myCombo.setText($('[data-ax5combobox=\"combo1\"]'), [\"substring\", \"search\"]);\n             * ```\n             */\n            this.setText = function (_boundID, _text, _selected) {\n                var queIdx = (U.isNumber(_boundID)) ? _boundID : getQueIdx.call(this, _boundID);\n                if (queIdx === -1) {\n                    console.log(ax5.info.getError(\"ax5combobox\", \"402\", \"val\"));\n                    return;\n                }\n                clearSelected.call(this, queIdx);\n                setOptionSelect.call(this, queIdx, _text, true, {noStateChange: true});\n                blurLabel.call(this, queIdx);\n                alignComboboxDisplay.call(this);\n\n                return this;\n            };\n\n            /**\n             * @method ax5combobox.getSelectedOption\n             * @param {(jQueryObject|Element|Number)} _boundID\n             * @returns {Array}\n             */\n            this.getSelectedOption = function (_boundID) {\n                var queIdx = (U.isNumber(_boundID)) ? _boundID : getQueIdx.call(this, _boundID);\n                if (queIdx === -1) {\n                    console.log(ax5.info.getError(\"ax5combobox\", \"402\", \"val\"));\n                    return;\n                }\n                return U.deepCopy(this.queue[queIdx].selected);\n            };\n\n            /**\n             * @method ax5combobox.close\n             * @returns {ax5combobox}\n             */\n            this.close = function (item) {\n                if (this.closeTimer) clearTimeout(this.closeTimer);\n                if (!this.activecomboboxOptionGroup) return this;\n\n                item = this.queue[this.activecomboboxQueueIndex];\n                item.optionFocusIndex = -1;\n                item.$display.removeAttr(\"data-combobox-option-group-opened\").trigger(\"focus\");\n                item.$displayLabel.attr(\"contentEditable\", \"false\");\n\n                this.activecomboboxOptionGroup.addClass(\"destroy\");\n\n\n                jQuery(window)\n                    .unbind(\"resize.ax5combobox-\" + this.instanceId)\n                    .unbind(\"click.ax5combobox-\" + this.instanceId)\n                    .unbind(\"keyup.ax5combobox-\" + this.instanceId);\n\n                this.closeTimer = setTimeout((function () {\n                    if (this.activecomboboxOptionGroup) this.activecomboboxOptionGroup.remove();\n                    this.activecomboboxOptionGroup = null;\n                    this.activecomboboxQueueIndex = -1;\n\n                    onStateChanged.call(this, item, {\n                        self: this,\n                        state: \"close\"\n                    });\n\n                }).bind(this), cfg.animateTime);\n                this.waitOptionsCallback = null;\n                return this;\n            };\n\n            /**\n             * @method ax5combobox.blur\n             * @param {(jQueryObject|Element|Number)} _boundID\n             * @returns {ax5combobox}\n             */\n            this.blur = function (_boundID) {\n                var queIdx = (U.isNumber(_boundID)) ? _boundID : getQueIdx.call(this, _boundID);\n                if (queIdx === -1) {\n                    console.log(ax5.info.getError(\"ax5combobox\", \"402\", \"val\"));\n                    return;\n                }\n\n                blurLabel.call(this, queIdx);\n                return this;\n            };\n\n            /**\n             * @method ax5combobox.enable\n             * @param {(jQueryObject|Element|Number)} _boundID\n             * @returns {ax5combobox}\n             */\n            this.enable = function (_boundID) {\n                var queIdx = getQueIdx.call(this, _boundID);\n\n                if (typeof queIdx !== \"undefined\") {\n                    this.queue[queIdx].disabled = false;\n                    if (this.queue[queIdx].$display[0]) {\n                        this.queue[queIdx].$display.removeAttr(\"disabled\");\n                        this.queue[queIdx].$displayLabelInput.removeAttr(\"disabled\");\n                    }\n                    if (this.queue[queIdx].$select[0]) {\n                        this.queue[queIdx].$select.removeAttr(\"disabled\");\n                    }\n\n                    onStateChanged.call(this, this.queue[queIdx], {\n                        self: this,\n                        state: \"enable\"\n                    });\n                }\n\n                return this;\n            };\n\n            /**\n             * @method ax5combobox.disable\n             * @param {(jQueryObject|Element|Number)} _boundID\n             * @returns {ax5combobox}\n             */\n            this.disable = function (_boundID) {\n                var queIdx = getQueIdx.call(this, _boundID);\n\n                if (typeof queIdx !== \"undefined\") {\n                    this.queue[queIdx].disabled = true;\n                    if (this.queue[queIdx].$display[0]) {\n                        this.queue[queIdx].$display.attr(\"disabled\", \"disabled\");\n                        this.queue[queIdx].$displayLabelInput.attr(\"disabled\", \"disabled\");\n                    }\n                    if (this.queue[queIdx].$select[0]) {\n                        this.queue[queIdx].$select.attr(\"disabled\", \"disabled\");\n                    }\n\n                    onStateChanged.call(this, this.queue[queIdx], {\n                        self: this,\n                        state: \"disable\"\n                    });\n                }\n                return this;\n            };\n\n            /**\n             * @method ax5combobox.align\n             */\n            this.align = function () {\n                alignComboboxDisplay.call(this);\n                return this;\n            };\n\n            // 클래스 생성자\n            this.main = (function () {\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                }\n                else {\n                    this.init();\n                }\n            }).apply(this, arguments);\n        };\n        return ax5combobox;\n    })());\n\n    COMBOBOX = ax5.ui.combobox;\n})();\n\n/**\n * ax5combobox jquery extends\n * @namespace jQueryExtends\n */\n\n/**\n * @method jQueryExtends.ax5combobox\n * @param {String} methodName\n * @param [arguments]\n * @param [arguments]\n * @example\n * ```html\n * <div data-ax5combobox=\"ax1\" data-ax5combobox-config='{\n *  multiple: true,\n *  editable: true,\n *  size: \"\",\n *  theme:\"\"\n *  }'></div>\n * <script>\n * jQuery('[data-ax5combobox=\"ax1\"]').ax5combobox();\n * $('[data-ax5combobox=\"ax1\"]').ax5combobox(\"getSelectedOption\");\n * $('[data-ax5combobox=\"ax1\"]').ax5combobox(\"setValue\", [\"string\", \"number\"]);\n * $('[data-ax5combobox=\"ax1\"]').ax5combobox(\"enable\");\n * $('[data-ax5combobox=\"ax1\"]').ax5combobox(\"disable\");\n * </script>\n * ```\n */\n\nax5.ui.combobox_instance = new ax5.ui.combobox();\njQuery.fn.ax5combobox = (function () {\n    return function (config) {\n        if (ax5.util.isString(arguments[0])) {\n            var methodName = arguments[0];\n\n            switch (methodName) {\n                case \"open\":\n                    return ax5.ui.combobox_instance.open(this);\n                    break;\n                case \"close\":\n                    return ax5.ui.combobox_instance.close(this);\n                    break;\n                case \"setValue\":\n                    return ax5.ui.combobox_instance.setValue(this, arguments[1], arguments[2], arguments[3], arguments[4] || \"justSetValue\");\n                    break;\n                case \"setText\":\n                    return ax5.ui.combobox_instance.setText(this, arguments[1], arguments[2], arguments[3], arguments[4] || \"justSetValue\");\n                    break;\n                case \"getSelectedOption\":\n                    return ax5.ui.combobox_instance.getSelectedOption(this);\n                    break;\n                case \"enable\":\n                    return ax5.ui.combobox_instance.enable(this);\n                    break;\n                case \"disable\":\n                    return ax5.ui.combobox_instance.disable(this);\n                    break;\n                case \"blur\":\n                    return ax5.ui.combobox_instance.blur(this);\n                default:\n                    return this;\n            }\n        }\n        else {\n            if (typeof config == \"undefined\") config = {};\n            jQuery.each(this, function () {\n                var defaultConfig = {\n                    target: this\n                };\n                config = jQuery.extend({}, config, defaultConfig);\n                ax5.ui.combobox_instance.bind(config);\n            });\n        }\n        return this;\n    }\n})();\n","// ax5.ui.combobox.tmpl\n(function () {\n\n    var COMBOBOX = ax5.ui.combobox;\n    var U = ax5.util;\n\n    var optionGroup = function (columnKeys) {\n        return `\n            <div class=\"ax5combobox-option-group {{theme}} {{size}}\" data-ax5combobox-option-group=\"{{id}}\">\n                <div class=\"ax-combobox-body\">\n                    <div class=\"ax-combobox-option-group-content\" data-els=\"content\"></div>\n                </div>\n                <div class=\"ax-combobox-arrow\"></div> \n            </div>\n        `;\n    };\n\n    var comboboxDisplay = function (columnKeys) {\n        return `\n<div class=\"form-control {{formSize}} ax5combobox-display {{theme}}\" \ndata-ax5combobox-display=\"{{id}}\" data-ax5combobox-instance=\"{{instanceId}}\">\n    <div class=\"ax5combobox-display-table\" data-els=\"display-table\">\n        <div data-ax5combobox-display=\"label-holder\"> \n            <a {{^tabIndex}}{{/tabIndex}}{{#tabIndex}}tabindex=\"{{tabIndex}}\" {{/tabIndex}}\n            data-ax5combobox-display=\"label\"\n            spellcheck=\"false\"><input type=\"text\"data-ax5combobox-display=\"input\" style=\"border:0 none;\" /></a>\n        </div>\n        <div data-ax5combobox-display=\"addon\"> \n            {{#multiple}}{{#reset}}\n            <span class=\"addon-icon-reset\" data-selected-clear=\"true\">{{{.}}}</span>\n            {{/reset}}{{/multiple}}\n            {{#icons}}\n            <span class=\"addon-icon-closed\">{{clesed}}</span>\n            <span class=\"addon-icon-opened\">{{opened}}</span>\n            {{/icons}}\n            {{^icons}}\n            <span class=\"addon-icon-closed\"><span class=\"addon-icon-arrow\"></span></span>\n            <span class=\"addon-icon-opened\"><span class=\"addon-icon-arrow\"></span></span>\n            {{/icons}}\n        </div>\n    </div>\n</div>\n        `;\n    };\n\n    var formSelect = function (columnKeys) {\n        return `\n            <select tabindex=\"-1\" class=\"form-control {{formSize}}\" name=\"{{name}}\" {{#multiple}}multiple=\"multiple\"{{/multiple}}></select>\n        `;\n    };\n\n    var formSelectOptions = function (columnKeys) {\n        return `\n{{#selected}}\n<option value=\"{{${columnKeys.optionValue}}}\" selected=\"true\">{{${columnKeys.optionText}}}</option>\n{{/selected}}\n`;\n    };\n\n    var options = function (columnKeys) {\n        return `\n            {{#waitOptions}}\n                <div class=\"ax-combobox-option-item\">\n                        <div class=\"ax-combobox-option-item-holder\">\n                            <span class=\"ax-combobox-option-item-cell ax-combobox-option-item-label\">\n                                {{{lang.loading}}}\n                            </span>\n                        </div>\n                    </div>\n            {{/waitOptions}}\n            {{^waitOptions}}\n                {{#options}}\n                    {{#optgroup}}\n                        <div class=\"ax-combobox-option-group\">\n                            <div class=\"ax-combobox-option-item-holder\">\n                                <span class=\"ax-combobox-option-group-label\">\n                                    {{{.}}}\n                                </span>\n                            </div>\n                            {{#options}}\n                            {{^hide}}\n                            <div class=\"ax-combobox-option-item\" data-option-focus-index=\"{{@findex}}\" data-option-group-index=\"{{@gindex}}\" data-option-index=\"{{@index}}\" \n                            data-option-value=\"{{${columnKeys.optionValue}}}\" \n                            {{#${columnKeys.optionSelected}}}data-option-selected=\"true\"{{/${columnKeys.optionSelected}}}>\n                                <div class=\"ax-combobox-option-item-holder\">\n                                    {{#multiple}}\n                                    <span class=\"ax-combobox-option-item-cell ax-combobox-option-item-checkbox\">\n                                        <span class=\"item-checkbox-wrap useCheckBox\" data-option-checkbox-index=\"{{@i}}\"></span>\n                                    </span>\n                                    {{/multiple}}\n                                    <span class=\"ax-combobox-option-item-cell ax-combobox-option-item-label\">{{${columnKeys.optionText}}}</span>\n                                </div>\n                            </div>\n                            {{/hide}}\n                            {{/options}}\n                        </div>                            \n                    {{/optgroup}}\n                    {{^optgroup}}\n                    {{^hide}}\n                    <div class=\"ax-combobox-option-item\" data-option-focus-index=\"{{@findex}}\" data-option-index=\"{{@index}}\" data-option-value=\"{{${columnKeys.optionValue}}}\" {{#${columnKeys.optionSelected}}}data-option-selected=\"true\"{{/${columnKeys.optionSelected}}}>\n                        <div class=\"ax-combobox-option-item-holder\">\n                            {{#multiple}}\n                            <span class=\"ax-combobox-option-item-cell ax-combobox-option-item-checkbox\">\n                                <span class=\"item-checkbox-wrap useCheckBox\" data-option-checkbox-index=\"{{@i}}\"></span>\n                            </span>\n                            {{/multiple}}\n                            <span class=\"ax-combobox-option-item-cell ax-combobox-option-item-label\">{{${columnKeys.optionText}}}</span>\n                        </div>\n                    </div>\n                    {{/hide}}\n                    {{/optgroup}}\n                {{/options}}\n                {{^options}}\n                    <div class=\"ax-combobox-option-item\">\n                        <div class=\"ax-combobox-option-item-holder\">\n                            <span class=\"ax-combobox-option-item-cell ax-combobox-option-item-label\">\n                                {{{lang.noOptions}}}\n                            </span>\n                        </div>\n                    </div>\n                {{/options}}\n            {{/waitOptions}}\n        `;\n    };\n\n    var label = function (columnKeys) {\n        return `{{#selected}}<div tabindex=\"-1\" data-ax5combobox-selected-label=\"{{@i}}\" data-ax5combobox-selected-text=\"{{text}}\"><div data-ax5combobox-remove=\"true\" \ndata-ax5combobox-remove-index=\"{{@i}}\">{{{removeIcon}}}</div><span>{{${columnKeys.optionText}}}</span></div>{{/selected}}`;\n    };\n\n\n    COMBOBOX.tmpl = {\n        \"comboboxDisplay\": comboboxDisplay,\n        \"formSelect\": formSelect,\n        \"formSelectOptions\": formSelectOptions,\n        \"optionGroup\": optionGroup,\n        \"options\": options,\n        \"label\": label,\n\n        get: function (tmplName, data, columnKeys) {\n            return ax5.mustache.render(COMBOBOX.tmpl[tmplName].call(this, columnKeys), data);\n        }\n    };\n})();","/*\n * Copyright (c) 2016. tom@axisj.com\n * - github.com/thomasjang\n * - www.axisj.com\n */\n\n// ax5.ui.combobox.util\n(function () {\n\n    var COMBOBOX = ax5.ui.combobox;\n    var U = ax5.util;\n\n    var nodeTypeProcessor = {\n        '1': function (queIdx, node, editable) {\n            var cfg = this.config;\n            var textNode = node;\n\n            if ($(node).find(\"span\").get(0)) {\n                textNode = $(node).find(\"span\").get(0);\n            }\n\n            var text = (textNode.textContent || textNode.innerText).replace(/^[\\s\\r\\n\\t]*|[\\s\\r\\n\\t]*$/g, '');\n            var item = this.queue[queIdx];\n\n            var selectedIndex, option;\n            if (item.selected && item.selected.length > 0 && node.getAttribute(\"data-ax5combobox-selected-text\") == text) {\n                selectedIndex = node.getAttribute(\"data-ax5combobox-selected-label\");\n                option = item.selected[selectedIndex];\n                return {\n                    index: {\n                        gindex: option[\"@gindex\"],\n                        index: option[\"@index\"],\n                        value: option[cfg.columnKeys.optionValue]\n                    }\n                };\n            }\n            else if (!node.getAttribute(\"data-ax5combobox-selected-text\")) {\n                if (text != \"\") {\n                    if (editable) {\n                        return text;\n                    } else {\n                        var $option;\n                        if (item.optionFocusIndex > -1) $option = this.activecomboboxOptionGroup.find('[data-option-focus-index=\"' + item.optionFocusIndex + '\"]');\n                        if (item.optionFocusIndex > -1 && $option.get(0) && $option.attr(\"data-option-value\")) {\n                            return {\n                                index: {\n                                    gindex: $option.attr(\"data-option-group-index\"),\n                                    index: $option.attr(\"data-option-index\")\n                                }\n                            }\n                        } else {\n                            return (item.editable) ? text : undefined;\n                        }\n                    }\n                } else {\n                    return undefined;\n                }\n            }\n            else {\n                return text;\n            }\n        },\n        '3': function (queIdx, node, editable) {\n            var cfg = this.config;\n            var text = (node.textContent || node.innerText).replace(/^[\\s\\r\\n\\t]*|[\\s\\r\\n\\t]*$/g, '');\n            var item = this.queue[queIdx];\n\n            if (text != \"\") {\n                if (editable) {\n                    return text;\n                } else {\n                    var $option;\n                    if (item.optionFocusIndex > -1) $option = this.activecomboboxOptionGroup.find('[data-option-focus-index=\"' + item.optionFocusIndex + '\"]');\n                    if (item.optionFocusIndex > -1 && $option.get(0) && $option.attr(\"data-option-value\")) {\n                        return {\n                            index: {\n                                gindex: $option.attr(\"data-option-group-index\"),\n                                index: $option.attr(\"data-option-index\")\n                            }\n                        }\n                    } else {\n                        return (item.editable) ? text : undefined;\n                    }\n                }\n            } else {\n                return undefined;\n            }\n        }\n    };\n\n    COMBOBOX.util = {\n        nodeTypeProcessor: nodeTypeProcessor\n    };\n})();"]}