{"version":3,"sources":["ax5core.min.js","ax5-core.js","ax5-def.js","ax5-error-msg.js","ax5-polyfill.js","ax5-ui.js","mustache.js"],"names":["_typeof","Symbol","iterator","obj","constructor","prototype","info","U","root","this","win","doc","document","reIsJson","documentElement","reMs","reSnakeCase","reCamelCase","reDot","reInt","reNotNum","reMoneySplit","RegExp","reAmp","reEq","reClassNameSplit","ax5","guid","getGuid","urlUtil","url","urls","href","location","param","search","referrer","pathname","hostname","port","split","replace","hashdata","last","baseUrl","left","getError","className","errorCode","methodName","errorMsg","msg","version","onerror","console","error","toArray","arguments","join","eventKeys","BACKSPACE","TAB","RETURN","ESC","LEFT","UP","RIGHT","DOWN","DELETE","HOME","END","PAGEUP","PAGEDOWN","INSERT","SPACE","weekNames","label","browser","ua","mobile","browserName","match","browserVersion","navigator","userAgent","toLowerCase","name","exec","indexOf","isBrowser","window","wheelEnm","test","supportTouch","maxTouchPoints","msMaxTouchPoints","supportFileApi","FileReader","File","FileList","Blob","each","O","_fn","isNothing","key","i","l","length","isObj","undefined","call","map","fnResult","results","isObject","push","isFunction","sum","defaultValue","tokenValue","isArray","avg","reduce","tokenItem","reduceRight","filter","k","toJson","jsonString","util","jsonObjectBody","value","isString","isNumber","isUndefined","parseJson","str","force","Function","e","getType","typeName","nodeType","_toString","isWindow","isElement","isNodelist","isDate","Date","isNaN","valueOf","isDateFormat","result","date","mm","substr","dd","getMonth","getDate","first","keys","Object","item","setCookie","cn","cv","exdays","opts","expire","setDate","cookie","escape","toUTCString","path","domain","secure","getCookie","cname","ca","c","charAt","substring","unescape","alert","pos","right","lastIndexOf","camelCase","all","letter","toUpperCase","snakeCase","number","cond","pair","isMinus","Number","returnValue","Math","round","abs","floor","ceil","val","txtNumber","arrNumber","nUnit","myByte","Array","slice","merge","second","j","p","v","encode","s","encodeURIComponent","decode","decodeURIComponent","apply","localDate","yy","hh","mi","ss","utcD","localD","UTC","getUTCHours","getTimezoneOffset","setUTCHours","d","aDateTime","aTimes","aTime","aDate","va","ISO_8601","ISO_8601_FULL","parseFloat","_d","mxdd","DyMilli","setTime","getTime","getFullYear","parseInt","daysOfMonth","processor","firstDayOfMonth","lastDayOfMonth","nY","nM","nD","nH","nMM","nS","nDW","fStr","getUTCFullYear","setDigit","getHours","getMinutes","getSeconds","getDay","yre","regY","$1","mre","regM","dre","regD","hre","regH","mire","regMI","sre","regS","dwre","regDW","dday","getDayTime","diffnum","thisYearMemoryDay","memoryDay","today","weeksOfMonth","myDate","year","month","count","y","m","num","padder","radix","toString","times","findParentNode","_target","parentNode","tagName","toLocaleLowerCase","klasss","hasClass","a","getAttribute","cssNumber","re","found","unit","css","returns","valSplited","forEach","trim","vSplited","stopEvent","event","cancelBubble","stopPropagation","preventDefault","deepCopy","r","jQuery","extend","escapeHtml","unescapeHtml","string","_string","ax5string","format","args","concat","_pos","selectRange","textRange","selectAll","el","range","offset","arr","moveStart","collapse","moveEnd","start","end","text","selectNodeContents","setStart","node","setEnd","firstChild","rangeType","selection","get","body","createTextRange","moveToElementText","getSelection","createRange","select","focus","removeAllRanges","addRange","debounce","func","wait","immediately","timeout","removeTimeout","debounced","clearTimeout","setTimeout","bind","cancel","module","exports","def","501","401","402","460","461","re_trim","hwp","hasOwnProperty","hdeb","propertyIsEnumerable","de","del","TypeError","prop","fun","t","len","thisp","o","nop","self","bound","querySelectorAll","querySelector","createStyleSheet","style","selector","maxCount","resultSet","addRule","currentStyle","foo","removeRule","Infinity","String","JSON","parse","sJSON","stringify","f","vContent","splice","documentMode","_splice","_slice","begin","size","cloned","max","upTo","min","con","method","empty","dummy","properties","methods","pop","webkitMatchMedia","mozMatchMedia","oMatchMedia","msMatchMedia","matchMedia","getElementsByTagName","styleMedia","media","createElement","script","type","id","insertBefore","getComputedStyle","matchMedium","styleSheet","cssText","textContent","width","matches","addListener","localMatchMedia","hasMediaQueries","isListening","timeoutID","queries","handleChange","evt","il","mql","listeners","jl","index","listener","addEventListener","removeListener","ui","axUi","config","setConfig","cfg","callInit","init","log","bindWindowResize","callBack","resize","bindWindowResize__","main","addClass","cls","classStore","factory","arg","initInstance","instance","instanceId","initPrototype","superClass","wrapper","global","mustache","object","typeStr","escapeRegExp","hasProperty","propName","testRegExp","regExpTest","isWhitespace","nonSpaceRe","entityMap","parseTemplate","template","tags","stripSpace","hasTag","nonSpace","spaces","tokens","compileTags","tagsToCompile","spaceRe","Error","openingTagRe","closingTagRe","closingCurlyRe","sections","chr","token","openSection","scanner","Scanner","eos","scanUntil","valueLength","scan","tagRe","whiteRe","equalsRe","curlyRe","nestTokens","squashTokens","lastToken","squashedTokens","numTokens","section","nestedTokens","collector","tail","Context","view","parentContext","cache",".","@each","@key","@value","parent","Writer","objectToString","&","<",">","\"","'","/","lookup","names","context","lookupHit","clearCache","render","partials","renderTokens","originalTemplate","symbol","buffer","renderSection","renderInverted","renderPartial","unescapedValue","escapedValue","rawValue","subRender","defaultWriter","to_html","send"],"mappings":"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","file":"ax5core.min.js","sourcesContent":["'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n(function () {\n    'use strict';\n\n    // root of function\n\n    var root = this,\n        win = this;\n    var doc = win ? win.document : null,\n        docElem = win ? win.document.documentElement : null;\n    var reIsJson = /^([\"'](\\\\.|[^\"\\\\\\n\\r])*?[\"']|[,:{}\\[\\]0-9.\\-+Eaeflnr-u \\n\\r\\t])+?$/,\n        reMs = /^-ms-/,\n        reSnakeCase = /[\\-_]([\\da-z])/gi,\n        reCamelCase = /([A-Z])/g,\n        reDot = /\\./,\n        reInt = /[-|+]?[\\D]/gi,\n        reNotNum = /\\D/gi,\n        reMoneySplit = new RegExp('([0-9])([0-9][0-9][0-9][,.])'),\n        reAmp = /&/g,\n        reEq = /=/,\n        reClassNameSplit = /[ ]+/g,\n\n\n    /** @namespace {Object} ax5 */\n    ax5 = {},\n        info,\n        U,\n        dom;\n\n    /**\n     * guid\n     * @member {Number} ax5.guid\n     */\n    ax5.guid = 1;\n    /**\n     * ax5.guid를 구하고 증가시킵니다.\n     * @method ax5.getGuid\n     * @returns {Number} guid\n     */\n    ax5.getGuid = function () {\n        return ax5.guid++;\n    };\n\n    /**\n     * 상수모음\n     * @namespace ax5.info\n     */\n    ax5.info = info = function () {\n        /**\n         * ax5 version\n         * @member {String} ax5.info.version\n         */\n        var version = \"${VERSION}\";\n\n        /**\n         * ax5 library path\n         * @member {String} ax5.info.baseUrl\n         */\n        var baseUrl = \"\";\n\n        /**\n         * ax5 에러 출력메세지 사용자 재 정의\n         * @member {Object} ax5.info.onerror\n         * @examples\n         * ```\n         * ax5.info.onerror = function(){\n        *  console.log(arguments);\n        * }\n         * ```\n         */\n        var onerror = function onerror() {\n            console.error(U.toArray(arguments).join(\":\"));\n        };\n\n        /**\n         * event keyCodes\n         * @member {Object} ax5.info.eventKeys\n         * @example\n         * ```\n         * {\n        * \tBACKSPACE: 8, TAB: 9,\n        * \tRETURN: 13, ESC: 27, LEFT: 37, UP: 38, RIGHT: 39, DOWN: 40, DELETE: 46,\n        * \tHOME: 36, END: 35, PAGEUP: 33, PAGEDOWN: 34, INSERT: 45, SPACE: 32\n        * }\n         * ```\n         */\n        var eventKeys = {\n            BACKSPACE: 8, TAB: 9,\n            RETURN: 13, ESC: 27, LEFT: 37, UP: 38, RIGHT: 39, DOWN: 40, DELETE: 46,\n            HOME: 36, END: 35, PAGEUP: 33, PAGEDOWN: 34, INSERT: 45, SPACE: 32\n        };\n\n        /**\n         * week names\n         * @member {Object[]} weekNames\n         * @member {string} weekNames[].label\n         *\n         * @example\n         * ```\n         * [\n         *  {label: \"SUN\"},{label: \"MON\"},{label: \"TUE\"},{label: \"WED\"},{label: \"THU\"},{label: \"FRI\"},{label: \"SAT\"}\n         * ]\n         * console.log( weekNames[0] );\n         * console.log( ax5.info.weekNames[(new Date()).getDay()].label )\n         * ```\n         */\n        var weekNames = [{ label: \"SUN\" }, { label: \"MON\" }, { label: \"TUE\" }, { label: \"WED\" }, { label: \"THU\" }, { label: \"FRI\" }, { label: \"SAT\" }];\n\n        /**\n         * 사용자 브라우저 식별용 오브젝트\n         * @member {Object} ax5.info.browser\n         * @example\n         * ```\n         * console.log( ax5.info.browser );\n         * //Object {name: \"chrome\", version: \"39.0.2171.71\", mobile: false}\n         * ```\n         */\n        var browser = function (ua, mobile, browserName, match, browser, browserVersion) {\n            if (!win || !win.navigator) return {};\n\n            ua = navigator.userAgent.toLowerCase(), mobile = ua.search(/mobile/g) != -1, browserName, match, browser, browserVersion;\n\n            if (ua.search(/iphone/g) != -1) {\n                return { name: \"iphone\", version: 0, mobile: true };\n            } else if (ua.search(/ipad/g) != -1) {\n                return { name: \"ipad\", version: 0, mobile: true };\n            } else if (ua.search(/android/g) != -1) {\n                match = /(android)[ \\/]([\\w.]+)/.exec(ua) || [];\n                browserVersion = match[2] || \"0\";\n                return { name: \"android\", version: browserVersion, mobile: mobile };\n            } else {\n                browserName = \"\";\n                match = /(opr)[ \\/]([\\w.]+)/.exec(ua) || /(chrome)[ \\/]([\\w.]+)/.exec(ua) || /(webkit)[ \\/]([\\w.]+)/.exec(ua) || /(msie) ([\\w.]+)/.exec(ua) || ua.indexOf(\"compatible\") < 0 && /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec(ua) || [];\n                browser = match[1] || \"\";\n                browserVersion = match[2] || \"0\";\n\n                if (browser == \"msie\") browser = \"ie\";\n                return {\n                    name: browser,\n                    version: browserVersion,\n                    mobile: mobile\n                };\n            }\n            ua = null, mobile = null, browserName = null, match = null, browser = null, browserVersion = null;\n        }();\n\n        /**\n         * 브라우저 여부\n         * @member {Boolean} ax5.info.isBrowser\n         */\n        var isBrowser = !!(typeof window !== 'undefined' && typeof navigator !== 'undefined' && win.document);\n\n        /**\n         * 브라우저에 따른 마우스 휠 이벤트이름\n         * @member {Object} ax5.info.wheelEnm\n         */\n        var wheelEnm = win && /Firefox/i.test(navigator.userAgent) ? \"DOMMouseScroll\" : \"mousewheel\";\n\n        /**\n         * 첫번째 자리수 동사 - (필요한것이 없을때 : 4, 실행오류 : 5)\n         * 두번째 자리수 목적어 - 문자열 0, 숫자 1, 배열 2, 오브젝트 3, 함수 4, DOM 5, 파일 6, 기타 7\n         * 세번째 자리수 옵션\n         * @member {Object} ax5.info.errorMsg\n         */\n        var errorMsg = {};\n\n        /**\n         * 현재 페이지의 Url 정보를 리턴합니다.\n         * @method ax5.info.urlUtil\n         * @returns {Object}\n         * @example\n         * ```\n         * console.log( ax5.util.toJson( ax5.info.urlUtil() ) );\n         * {\n        *\t\"baseUrl\": \"http://ax5:2018\",\n        *\t\"href\": \"http://ax5:2018/samples/index.html?a=1&b=1#abc\",\n        *\t\"param\": \"a=1&b=1\",\n        *\t\"referrer\": \"\",\n        *\t\"pathname\": \"/samples/index.html\",\n        *\t\"hostname\": \"ax5\",\n        *\t\"port\": \"2018\",\n        *\t\"url\": \"http://ax5:2018/samples/index.html\",\n        *\t\"hashdata\": \"abc\"\n        * }\n         * ```\n         */\n        function urlUtil(url, urls) {\n            url = {\n                href: win.location.href,\n                param: win.location.search,\n                referrer: doc.referrer,\n                pathname: win.location.pathname,\n                hostname: win.location.hostname,\n                port: win.location.port\n            }, urls = url.href.split(/[\\?#]/);\n            url.param = url.param.replace(\"?\", \"\");\n            url.url = urls[0];\n            if (url.href.search(\"#\") > -1) {\n                url.hashdata = U.last(urls);\n            }\n            urls = null;\n            url.baseUrl = U.left(url.href, \"?\").replace(url.pathname, \"\");\n            return url;\n        }\n\n        /**\n         * ax5-error-msg.js 에 정의된 ax5 error를 반환합니다.\n         * @method ax5.info.getError\n         * @returns {Object}\n         * @example\n         * ```\n         * console.log( ax5.info.getError(\"single-uploader\", \"460\", \"upload\") );\n         *\n         * if(!this.selectedFile){\n        *      if (cfg.onEvent) {\n        *      \tvar that = {\n        *      \t\taction: \"error\",\n        *      \t\terror: ax5.info.getError(\"single-uploader\", \"460\", \"upload\")\n        *      \t};\n        *      \tcfg.onEvent.call(that, that);\n        *      }\n        *      return this;\n        * }\n         * ```\n         */\n        function getError(className, errorCode, methodName) {\n            if (info.errorMsg && info.errorMsg[className]) {\n                return {\n                    className: className,\n                    errorCode: errorCode,\n                    methodName: methodName,\n                    msg: info.errorMsg[className][errorCode]\n                };\n            } else {\n                return { className: className, errorCode: errorCode, methodName: methodName };\n            }\n        }\n\n        /**\n         * 브라우져의 터치 기능 유무를 확인합니다.\n         * @method ax5.info.supportTouch\n         * @returns {boolean}\n         * @example\n         * ```\n         * var chkFlag = ax5.info.supportTouch;\n         */\n        var supportTouch = win ? 'ontouchstart' in win || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0 : false;\n\n        var supportFileApi = win ? win.FileReader && win.File && win.FileList && win.Blob : false;\n\n        return {\n            errorMsg: errorMsg,\n            version: version,\n            baseUrl: baseUrl,\n            onerror: onerror,\n            eventKeys: eventKeys,\n            weekNames: weekNames,\n            browser: browser,\n            isBrowser: isBrowser,\n            supportTouch: supportTouch,\n            supportFileApi: supportFileApi,\n            wheelEnm: wheelEnm,\n            urlUtil: urlUtil,\n            getError: getError\n        };\n    }();\n\n    /**\n     * Refer to this by {@link ax5}.\n     * @namespace ax5.util\n     */\n    ax5['util'] = U = function () {\n        var _toString = Object.prototype.toString;\n\n        /**\n         * Object나 Array의 아이템으로 사용자 함수를 호출합니다.\n         * @method ax5.util.each\n         * @param {Object|Array} O\n         * @param {Function} _fn\n         * @example\n         * ```js\n         * var axf = ax5.util;\n         * axf.each([0,1,2], function(){\n        * \t// with this\n        * });\n         * axf.each({a:1, b:2}, function(){\n        * \t// with this\n        * });\n         * ```\n         */\n        function each(O, _fn) {\n            if (isNothing(O)) return [];\n            var key,\n                i = 0,\n                l = O.length,\n                isObj = l === undefined || typeof O === \"function\";\n            if (isObj) {\n                for (key in O) {\n                    if (typeof O[key] != \"undefined\") if (_fn.call(O[key], key, O[key]) === false) break;\n                }\n            } else {\n                for (; i < l;) {\n                    if (typeof O[i] != \"undefined\") if (_fn.call(O[i], i, O[i++]) === false) break;\n                }\n            }\n            return O;\n        }\n\n        // In addition to using the http://underscorejs.org : map, reduce, reduceRight, find\n        /**\n         * 원본 아이템들을 이용하여 사용자 함수의 리턴값으로 이루어진 새로운 배열을 만듭니다.\n         * @method ax5.util.map\n         * @param {Object|Array} O\n         * @param {Function} _fn\n         * @returns {Array}\n         * @example\n         * ```js\n         * var myArray = [0,1,2,3,4];\n         * var myObject = {a:1, b:\"2\", c:{axj:\"what\", arrs:[0,2,\"3\"]},\n        *    fn: function(abcdd){\n        *        return abcdd;\n        *    }\n        * };\n         *\n         * var _arr = ax5.util.map( myArray,  function(index, I){\n        *    return index+1;\n        * });\n         * console.log(_arr);\n         * // [1, 2, 3, 4, 5]\n         *\n         * var _arr = ax5.util.map( myObject,  function(k, v){\n        *    return v * 2;\n        * });\n         * console.log(_arr);\n         * // [2, 4, NaN, NaN]\n         * ```\n         */\n        function map(O, _fn) {\n            if (isNothing(O)) return [];\n            var key,\n                i = 0,\n                l = O.length,\n                results = [],\n                fnResult;\n            if (isObject(O)) {\n                for (key in O) {\n                    if (typeof O[key] != \"undefined\") {\n                        fnResult = undefined;\n                        if ((fnResult = _fn.call(O[key], key, O[key])) === false) break;else results.push(fnResult);\n                    }\n                }\n            } else {\n                for (; i < l;) {\n                    if (typeof O[i] != \"undefined\") {\n                        fnResult = undefined;\n                        if ((fnResult = _fn.call(O[i], i, O[i++])) === false) break;else results.push(fnResult);\n                    }\n                }\n            }\n            return results;\n        }\n\n        /**\n         * 원본 아이템들을 이용하여 사용자 함수의 리턴값이 참인 아이템의 위치나 키값을 반환합니다.\n         * @method ax5.util.search\n         * @param {Object|Array} O\n         * @param {Function|String|Number} _fn - 함수 또는 값\n         * @returns {Number|String}\n         * @example\n         * ```js\n         * var myArray = [0,1,2,3,4,5,6];\n         * var myObject = {a:\"123\",\"b\":\"123\",c:123};\n         *\n         * ax5.util.search(myArray,  function(){\n        *    return this > 3;\n        * });\n         * // 4\n         * ax5.util.search(myObject,  function(k, v){\n        *    return v === 123;\n        * });\n         * // \"c\"\n         * ax5.util.search([1,2,3,4], 3);\n         * // 2\n         * ax5.util.search([1,2], 4);\n         * // -1\n         * ax5.util.search([\"name\",\"value\"], \"value\");\n         * // 1\n         * ax5.util.search([\"name\",\"value\"], \"values\");\n         * // -1\n         * ax5.util.search({k1:\"name\",k2:\"value\"}, \"value2\");\n         * // -1\n         * ax5.util.search({k1:\"name\",k2:\"value\"}, \"value\");\n         * // \"k2\"\n         * ```\n         */\n        function search(O, _fn) {\n            if (isNothing(O)) return -1;\n            var key,\n                i = 0,\n                l = O.length;\n            if (isObject(O)) {\n                for (key in O) {\n                    if (typeof O[key] != \"undefined\" && isFunction(_fn) && _fn.call(O[key], key, O[key])) {\n                        return key;\n                        break;\n                    } else if (O[key] == _fn) {\n                        return key;\n                        break;\n                    }\n                }\n            } else {\n                for (; i < l;) {\n                    if (typeof O[i] != \"undefined\" && isFunction(_fn) && _fn.call(O[i], i, O[i])) {\n                        return i;\n                        break;\n                    } else if (O[i] == _fn) {\n                        return i;\n                        break;\n                    }\n                    i++;\n                }\n            }\n            return -1;\n        }\n\n        /**\n         * @method ax5.util.sum\n         * @param {Array|Object} O\n         * @param {Number} [defaultValue]\n         * @param {Function} _fn\n         * @returns {Number}\n         * @example\n         * ```js\n         * var arr = [\n         *  {name: \"122\", value: 9},\n         *  {name: \"122\", value: 10},\n         *  {name: \"123\", value: 11}\n         * ];\n         *\n         * var rs = ax5.util.sum(arr, function () {\n         *  if(this.name == \"122\") {\n         *      return this.value;\n         *  }\n         * });\n         * console.log(rs); // 19\n         *\n         * console.log(ax5.util.sum(arr, 10, function () {\n         *   return this.value;\n         * }));\n         * // 40\n         * ```\n         */\n        function sum(O, defaultValue, _fn) {\n            var i, l, tokenValue;\n            if (isFunction(defaultValue) && typeof _fn === \"undefined\") {\n                _fn = defaultValue;\n                defaultValue = 0;\n            }\n            if (typeof defaultValue === \"undefined\") defaultValue = 0;\n\n            if (isArray(O)) {\n                i = 0;\n                l = O.length;\n                for (; i < l; i++) {\n                    if (typeof O[i] !== \"undefined\") {\n                        if ((tokenValue = _fn.call(O[i], O[i])) === false) break;else if (typeof tokenValue !== \"undefined\") defaultValue += tokenValue;\n                    }\n                }\n                return defaultValue;\n            } else if (isObject(O)) {\n                for (i in O) {\n                    if (typeof O[i] != \"undefined\") {\n                        if ((tokenValue = _fn.call(O[i], O[i])) === false) break;else if (typeof tokenValue !== \"undefined\") defaultValue += tokenValue;\n                    }\n                }\n                return defaultValue;\n            } else {\n                console.error(\"argument error : ax5.util.sum - use Array or Object\");\n                return defaultValue;\n            }\n        }\n\n        /**\n         * @method ax5.util.avg\n         * @param {Array|Object} O\n         * @param {Number} [defaultValue]\n         * @param {Function} _fn\n         * @returns {Number}\n         * @example\n         * ```js\n         * var arr = [\n         *  {name: \"122\", value: 9},\n         *  {name: \"122\", value: 10},\n         *  {name: \"123\", value: 11}\n         * ];\n         *\n         * var rs = ax5.util.avg(arr, function () {\n         *      return this.value;\n         * });\n         *\n         * console.log(rs); // 10\n         * ```\n         */\n        function avg(O, defaultValue, _fn) {\n            var i, l, tokenValue;\n            if (isFunction(defaultValue) && typeof _fn === \"undefined\") {\n                _fn = defaultValue;\n                defaultValue = 0;\n            }\n            if (typeof defaultValue === \"undefined\") defaultValue = 0;\n\n            if (isArray(O)) {\n                i = 0;\n                l = O.length;\n                for (; i < l; i++) {\n                    if (typeof O[i] !== \"undefined\") {\n                        if ((tokenValue = _fn.call(O[i], O[i])) === false) break;else if (typeof tokenValue !== \"undefined\") defaultValue += tokenValue;\n                    }\n                }\n                return defaultValue / l;\n            } else if (isObject(O)) {\n                for (i in O) {\n                    if (typeof O[i] != \"undefined\") {\n                        if ((tokenValue = _fn.call(O[i], O[i])) === false) break;else if (typeof tokenValue !== \"undefined\") defaultValue += tokenValue;\n                    }\n                }\n                return defaultValue / l;\n            } else {\n                console.error(\"argument error : ax5.util.sum - use Array or Object\");\n                return defaultValue;\n            }\n        }\n\n        /**\n         * 배열의 왼쪽에서 오른쪽으로 연산을 진행하는데 수행한 결과가 왼쪽 값으로 반영되어 최종 왼쪽 값을 반환합니다.\n         * @method ax5.util.reduce\n         * @param {Array|Object} O\n         * @param {Function} _fn\n         * @returns {Alltypes}\n         * @example\n         * ```js\n         * var aarray = [5,4,3,2,1];\n         * result = ax5.util.reduce( aarray, function(p, n){\n        *   return p * n;\n        * });\n         * console.log(result, aarray);\n         * // 120 [5, 4, 3, 2, 1]\n         *\n         * ax5.util.reduce({a:1, b:2}, function(p, n){\n        *    return parseInt(p|0) + parseInt(n);\n        * });\n         * // 3\n         * ```\n         */\n        function reduce(O, _fn) {\n            var i, l, tokenItem;\n            if (isArray(O)) {\n                i = 0, l = O.length, tokenItem = O[i];\n                for (; i < l - 1;) {\n                    if (typeof O[i] != \"undefined\") {\n                        if ((tokenItem = _fn.call(root, tokenItem, O[++i])) === false) break;\n                    }\n                }\n                return tokenItem;\n            } else if (isObject(O)) {\n                for (i in O) {\n                    if (typeof O[i] != \"undefined\") {\n                        if ((tokenItem = _fn.call(root, tokenItem, O[i])) === false) break;\n                    }\n                }\n                return tokenItem;\n            } else {\n                console.error(\"argument error : ax5.util.reduce - use Array or Object\");\n                return null;\n            }\n        }\n\n        /**\n         * 배열의 오른쪽에서 왼쪽으로 연산을 진행하는데 수행한 결과가 오른쪽 값으로 반영되어 최종 오른쪽 값을 반환합니다.\n         * @method ax5.util.reduceRight\n         * @param {Array} O\n         * @param {Function} _fn\n         * @returns {Alltypes}\n         * @example\n         * ```js\n         * var aarray = [5,4,3,2,1];\n         * result = ax5.util.reduceRight( aarray, function(p, n){\n        *    console.log( n );\n        *    return p * n;\n        * });\n         * console.log(result, aarray);\n         * 120 [5, 4, 3, 2, 1]\n         * ```\n         */\n        function reduceRight(O, _fn) {\n            var i = O.length - 1,\n                tokenItem = O[i];\n            for (; i > 0;) {\n                if (typeof O[i] != \"undefined\") {\n                    if ((tokenItem = _fn.call(root, tokenItem, O[--i])) === false) break;\n                }\n            }\n            return tokenItem;\n        }\n\n        /**\n         * 배열또는 오브젝트의 각 아이템을 인자로 하는 사용자 함수의 결과가 참인 아이템들의 배열을 반환합니다.\n         * @method ax5.util.filter\n         * @param {Object|Array} O\n         * @param {Function} _fn\n         * @returns {Array}\n         * @example\n         * ```js\n         * var aarray = [5,4,3,2,1];\n         * result = ax5.util.filter( aarray, function(){\n        *    return this % 2;\n        * });\n         * console.log(result);\n         * // [5, 3, 1]\n         *\n         * var filObject = {a:1, s:\"string\", oa:{pickup:true, name:\"AXISJ\"}, os:{pickup:true, name:\"AX5\"}};\n         * result = ax5.util.filter( filObject, function(){\n        * \treturn this.pickup;\n        * });\n         * console.log( ax5.util.toJson(result) );\n         * // [{\"pickup\": , \"name\": \"AXISJ\"}, {\"pickup\": , \"name\": \"AX5\"}]\n         * ```\n         */\n        function filter(O, _fn) {\n            if (isNothing(O)) return [];\n            var k,\n                i = 0,\n                l = O.length,\n                results = [],\n                fnResult;\n            if (isObject(O)) {\n                for (k in O) {\n                    if (typeof O[k] != \"undefined\") {\n                        if (fnResult = _fn.call(O[k], k, O[k])) results.push(O[k]);\n                    }\n                }\n            } else {\n                for (; i < l;) {\n                    if (typeof O[i] != \"undefined\") {\n                        if (fnResult = _fn.call(O[i], i, O[i])) results.push(O[i]);\n                        i++;\n                    }\n                }\n            }\n            return results;\n        }\n\n        /**\n         * Object를 JSONString 으로 반환합니다.\n         * @method ax5.util.toJson\n         * @param {Object|Array} O\n         * @returns {String} JSON\n         * @example\n         * ```js\n         * var ax = ax5.util;\n         * var myObject = {\n        *    a:1, b:\"2\", c:{axj:\"what\", arrs:[0,2,\"3\"]},\n        *    fn: function(abcdd){\n        *        return abcdd;\n        *    }\n        * };\n         * console.log( ax.toJson(myObject) );\n         * ```\n         */\n        function toJson(O) {\n            var jsonString = \"\";\n            if (ax5.util.isArray(O)) {\n                var i = 0,\n                    l = O.length;\n                jsonString += \"[\";\n                for (; i < l; i++) {\n                    if (i > 0) jsonString += \",\";\n                    jsonString += toJson(O[i]);\n                }\n                jsonString += \"]\";\n            } else if (ax5.util.isObject(O)) {\n                jsonString += \"{\";\n                var jsonObjectBody = [];\n                each(O, function (key, value) {\n                    jsonObjectBody.push('\"' + key + '\": ' + toJson(value));\n                });\n                jsonString += jsonObjectBody.join(\", \");\n                jsonString += \"}\";\n            } else if (ax5.util.isString(O)) {\n                jsonString = '\"' + O + '\"';\n            } else if (ax5.util.isNumber(O)) {\n                jsonString = O;\n            } else if (ax5.util.isUndefined(O)) {\n                jsonString = \"undefined\";\n            } else if (ax5.util.isFunction(O)) {\n                jsonString = '\"{Function}\"';\n            } else {\n                jsonString = O;\n            }\n            return jsonString;\n        }\n\n        /**\n         * 관용의 JSON Parser\n         * @method ax5.util.parseJson\n         * @param {String} JSONString\n         * @param {Boolean} [force] - 강제 적용 여부 (json 문자열 검사를 무시하고 오브젝트 변환을 시도합니다.)\n         * @returns {Object}\n         * @example\n         * ```\n         * console.log(ax5.util.parseJson('{\"a\":1}'));\n         * // Object {a: 1}\n         * console.log(ax5.util.parseJson(\"{'a':1, 'b':'b'}\"));\n         * // Object {a: 1, b: \"b\"}\n         * console.log(ax5.util.parseJson(\"{'a':1, 'b':function(){return 1;}}\", true));\n         * // Object {a: 1, b: function}\n         * console.log(ax5.util.parseJson(\"{a:1}\"));\n         * // Object {a: 1}\n         * console.log(ax5.util.parseJson(\"[1,2,3]\"));\n         * // [1, 2, 3]\n         * console.log(ax5.util.parseJson(\"['1','2','3']\"));\n         * // [\"1\", \"2\", \"3\"]\n         * console.log(ax5.util.parseJson(\"[{'a':'99'},'2','3']\"));\n         * // [Object, \"2\", \"3\"]\n         * ```\n         */\n        function parseJson(str, force) {\n            if (force || reIsJson.test(str)) {\n                try {\n                    return new Function('', 'return ' + str)();\n                } catch (e) {\n                    return { error: 500, msg: 'syntax error' };\n                }\n            } else {\n                return { error: 500, msg: 'syntax error' };\n            }\n        }\n\n        /**\n         * 인자의 타입을 반환합니다.\n         * @method ax5.util.getType\n         * @param {Object|Array|String|Number|Element|Etc} O\n         * @returns {String} window|element|object|array|function|string|number|undefined|nodelist\n         * @example\n         * ```js\n         * var axf = ax5.util;\n         * var a = 11;\n         * var b = \"11\";\n         * console.log( axf.getType(a) );\n         * console.log( axf.getType(b) );\n         * ```\n         */\n        function getType(O) {\n            var typeName;\n            if (O != null && O == O.window) {\n                typeName = \"window\";\n            } else if (!!(O && O.nodeType == 1)) {\n                typeName = \"element\";\n            } else if (!!(O && O.nodeType == 11)) {\n                typeName = \"fragment\";\n            } else if (O === null) {\n                typeName = \"null\";\n            } else if (typeof O === \"undefined\") {\n                typeName = \"undefined\";\n            } else if (_toString.call(O) == \"[object Object]\") {\n                typeName = \"object\";\n            } else if (_toString.call(O) == \"[object Array]\") {\n                typeName = \"array\";\n            } else if (_toString.call(O) == \"[object String]\") {\n                typeName = \"string\";\n            } else if (_toString.call(O) == \"[object Number]\") {\n                typeName = \"number\";\n            } else if (_toString.call(O) == \"[object NodeList]\") {\n                typeName = \"nodelist\";\n            } else if (typeof O === \"function\") {\n                typeName = \"function\";\n            }\n            return typeName;\n        }\n\n        /**\n         * 오브젝트가 window 인지 판단합니다.\n         * @method ax5.util.isWindow\n         * @param {Object} O\n         * @returns {Boolean}\n         */\n        function isWindow(O) {\n            return O != null && O == O.window;\n        }\n\n        /**\n         * 오브젝트가 HTML 엘리먼트여부인지 판단합니다.\n         * @method ax5.util.isElement\n         * @param {Object} O\n         * @returns {Boolean}\n         */\n        function isElement(O) {\n            return !!(O && (O.nodeType == 1 || O.nodeType == 11));\n        }\n\n        /**\n         * 오브젝트가 Object인지 판단합니다.\n         * @method ax5.util.isObject\n         * @param {Object} O\n         * @returns {Boolean}\n         */\n        function isObject(O) {\n            return _toString.call(O) == \"[object Object]\";\n        }\n\n        /**\n         * 오브젝트가 Array인지 판단합니다.\n         * @method ax5.util.isArray\n         * @param {Object} O\n         * @returns {Boolean}\n         */\n        function isArray(O) {\n            return _toString.call(O) == \"[object Array]\";\n        }\n\n        /**\n         * 오브젝트가 Function인지 판단합니다.\n         * @method ax5.util.isFunction\n         * @param {Object} O\n         * @returns {Boolean}\n         */\n        function isFunction(O) {\n            return typeof O === \"function\";\n        }\n\n        /**\n         * 오브젝트가 String인지 판단합니다.\n         * @method ax5.util.isString\n         * @param {Object} O\n         * @returns {Boolean}\n         */\n        function isString(O) {\n            return _toString.call(O) == \"[object String]\";\n        }\n\n        /**\n         * 오브젝트가 Number인지 판단합니다.\n         * @method ax5.util.isNumber\n         * @param {Object} O\n         * @returns {Boolean}\n         */\n        function isNumber(O) {\n            return _toString.call(O) == \"[object Number]\";\n        }\n\n        /**\n         * 오브젝트가 NodeList인지 판단합니다.\n         * @method ax5.util.isNodelist\n         * @param {Object} O\n         * @returns {Boolean}\n         */\n        function isNodelist(O) {\n            return !!(_toString.call(O) == \"[object NodeList]\" || typeof O !== \"undefined\" && O && O[0] && O[0].nodeType == 1);\n        }\n\n        /**\n         * 오브젝트가 undefined인지 판단합니다.\n         * @method ax5.util.isUndefined\n         * @param {Object} O\n         * @returns {Boolean}\n         */\n        function isUndefined(O) {\n            return typeof O === \"undefined\";\n        }\n\n        /**\n         * 오브젝트가 undefined이거나 null이거나 빈값인지 판단합니다.\n         * @method ax5.util.isNothing\n         * @param {Object} O\n         * @returns {Boolean}\n         */\n        function isNothing(O) {\n            return typeof O === \"undefined\" || O === null || O === \"\";\n        }\n\n        /**\n         * 오브젝트가 날자값인지 판단합니다.\n         * @method ax5.util.isDate\n         * @param {Date} O\n         * @returns {Boolean}\n         * @example\n         * ```js\n         * ax5.util.isDate('2016-09-30');\n         * // false\n         * ax5.util.isDate( new Date('2016-09-30') );\n         * // true\n         * ```\n         */\n        function isDate(O) {\n            return O instanceof Date && !isNaN(O.valueOf());\n        }\n\n        function isDateFormat(O) {\n            var result = false;\n            if (!O) {} else if (O instanceof Date && !isNaN(O.valueOf())) {\n                result = true;\n            } else {\n                if (O.length > 7) {\n                    if (date(O) instanceof Date) {\n                        return true;\n                    }\n                }\n                O = O.replace(/\\D/g, '');\n                if (O.length > 7) {\n                    var mm = O.substr(4, 2),\n                        dd = O.substr(6, 2);\n                    O = date(O);\n                    if (O.getMonth() == mm - 1 && O.getDate() == dd) {\n                        result = true;\n                    }\n                }\n            }\n            return result;\n        }\n\n        /**\n         * 오브젝트의 첫번째 아이템을 반환합니다.\n         * @method ax5.util.first\n         * @param {Object|Array} O\n         * @returns {Object}\n         * @example\n         * ```js\n         * ax5.util.first({a:1, b:2});\n         * // Object {a: 1}\n         * ax5.util.first([1,2,3,4]);\n         * // 1\n         * ```\n         */\n        function first(O) {\n            if (isObject(O)) {\n                var keys = Object.keys(O);\n                var item = {};\n                item[keys[0]] = O[keys[0]];\n                return item;\n            } else if (isArray(O)) {\n                return O[0];\n            } else {\n                console.error(\"ax5.util.object.first\", \"argument type error\");\n                return undefined;\n            }\n        }\n\n        /**\n         * 오브젝트의 마지막 아이템을 반환합니다.\n         * @method ax5.util.last\n         * @param {Object|Array} O\n         * @returns {Object}\n         * @example\n         * ```js\n         * ax5.util.last({a:1, b:2});\n         * // Object {b: 2}\n         * ax5.util.last([1,2,3,4]);\n         * // 4\n         * ```\n         */\n        function last(O) {\n            if (isObject(O)) {\n                var keys = Object.keys(O);\n                var item = {};\n                item[keys[keys.length - 1]] = O[keys[keys.length - 1]];\n                return item;\n            } else if (isArray(O)) {\n                return O[O.length - 1];\n            } else {\n                console.error(\"ax5.util.object.last\", \"argument type error\");\n                return undefined;\n            }\n        }\n\n        /**\n         * 쿠키를 설정합니다.\n         * @method ax5.util.setCookie\n         * @param {String} cname - 쿠키이름\n         * @param {String} cvalue - 쿠키값\n         * @param {Number} [exdays] - 쿠키 유지일수\n         * @param {Object} [opts] - path, domain 설정 옵션\n         * @example\n         * ```js\n         * ax5.util.setCookie(\"jslib\", \"AX5\");\n         * ax5.util.setCookie(\"jslib\", \"AX5\", 3);\n         * ax5.util.setCookie(\"jslib\", \"AX5\", 3, {path:\"/\", domain:\".axisj.com\"});\n         * ```\n         */\n        function setCookie(cn, cv, exdays, opts) {\n            var expire;\n            if (typeof exdays === \"number\") {\n                expire = new Date();\n                expire.setDate(expire.getDate() + exdays);\n            }\n            opts = opts || {};\n            return doc.cookie = [escape(cn), '=', escape(cv), expire ? \"; expires=\" + expire.toUTCString() : \"\", // use expires attribute, max-age is not supported by IE\n            opts.path ? \"; path=\" + opts.path : \"\", opts.domain ? \"; domain=\" + opts.domain : \"\", opts.secure ? \"; secure\" : \"\"].join(\"\");\n        }\n\n        /**\n         * 쿠키를 가져옵니다.\n         * @method ax5.util.getCookie\n         * @param {String} cname\n         * @returns {String} cookie value\n         * @example\n         * ```js\n         * ax5.util.getCookie(\"jslib\");\n         * ```\n         */\n        function getCookie(cname) {\n            var name = cname + \"=\";\n            var ca = doc.cookie.split(';'),\n                i = 0,\n                l = ca.length;\n            for (; i < l; i++) {\n                var c = ca[i];\n                while (c.charAt(0) == ' ') {\n                    c = c.substring(1);\n                }if (c.indexOf(name) != -1) return unescape(c.substring(name.length, c.length));\n            }\n            return \"\";\n        }\n\n        /**\n         * jsonString 으로 alert 합니다.\n         * @method ax5.util.alert\n         * @param {Object|Array|String|Number} O\n         * @returns {Object|Array|String|Number} O\n         * @example ```js\n         * ax5.util.alert({a:1,b:2});\n         * ax5.util.alert(\"정말?\");\n         * ```\n         */\n        function alert(O) {\n            win.alert(toJson(O));\n            return O;\n        }\n\n        /**\n         * 문자열의 특정 문자열까지 잘라주거나 원하는 포지션까지 잘라줍니다.\n         * @method ax5.util.left\n         * @param {String} str - 문자열\n         * @param {String|Number} pos - 찾을 문자열 또는 포지션\n         * @returns {String}\n         * @example\n         * ```js\n         * ax5.util.left(\"abcd.efd\", 3);\n         * // abc\n         * ax5.util.left(\"abcd.efd\", \".\");\n         * // abcd\n         * ```\n         */\n        function left(str, pos) {\n            if (typeof str === \"undefined\" || typeof pos === \"undefined\") return \"\";\n            if (isString(pos)) {\n                return str.indexOf(pos) > -1 ? str.substr(0, str.indexOf(pos)) : \"\";\n            } else if (isNumber(pos)) {\n                return str.substr(0, pos);\n            } else {\n                return \"\";\n            }\n        }\n\n        /**\n         * 문자열의 특정 문자열까지 잘라주거나 원하는 포지션까지 잘라줍니다.\n         * @method ax5.util.right\n         * @param {String} str - 문자열\n         * @param {String|Number} pos - 찾을 문자열 또는 포지션\n         * @returns {String}\n         * @example\n         * ```js\n         * ax5.util.right(\"abcd.efd\", 3);\n         * // efd\n         * ax5.util.right(\"abcd.efd\", \".\");\n         * // efd\n         * ```\n         */\n        function right(str, pos) {\n            if (typeof str === \"undefined\" || typeof pos === \"undefined\") return \"\";\n            str = '' + str;\n            if (isString(pos)) {\n                return str.lastIndexOf(pos) > -1 ? str.substr(str.lastIndexOf(pos) + 1) : \"\";\n            } else if (isNumber(pos)) {\n                return str.substr(str.length - pos);\n            } else {\n                return \"\";\n            }\n        }\n\n        /**\n         * css형 문자열이나 특수문자가 포함된 문자열을 카멜케이스로 바꾸어 반환합니다.\n         * @method ax5.util.camelCase\n         * @param {String} str\n         * @returns {String}\n         * @example\n         * ```js\n         * ax5.util.camelCase(\"inner-width\");\n         * ax5.util.camelCase(\"innerWidth\");\n         * // innerWidth\n         * ```\n         */\n        function camelCase(str) {\n            return str.replace(reMs, \"ms-\").replace(reSnakeCase, function (all, letter) {\n                return letter.toUpperCase();\n            });\n        }\n\n        /**\n         * css형 문자열이나 카멜케이스문자열을 스네이크 케이스 문자열로 바꾸어 반환합니다.\n         * @method ax5.util.snakeCase\n         * @param {String} str\n         * @returns {String}\n         * @example\n         * ```js\n         * ax5.util.snakeCase(\"innerWidth\");\n         * ax5.util.snakeCase(\"inner-Width\");\n         * ax5.util.snakeCase(\"innerWidth\");\n         * // inner-width\n         * ```\n         */\n        function snakeCase(str) {\n            return camelCase(str).replace(reCamelCase, function (all, letter) {\n                return \"-\" + letter.toLowerCase();\n            });\n        }\n\n        /**\n         * 문자열에서 -. 을 제외한 모든 문자열을 제거하고 숫자로 반환합니다. 옵션에 따라 원하는 형식의 숫자로 변환 할 수 도 있습니다.\n         * @method ax5.util.number\n         * @param {String|Number} str\n         * @param {Object} cond - 옵션\n         * @returns {String|Number}\n         * @example\n         * ```js\n         * var cond = {\n        * \tround: {Number|Boolean} - 반올림할 자릿수,\n        * \tmoney: {Boolean} - 통화,\n        * \tabs: {Boolean} - 절대값,\n        * \tbyte: {Boolean} - 바이트\n        * }\n         *\n         * console.log(ax5.util.number(123456789.678, {round:1}));\n         * console.log(ax5.util.number(123456789.678, {round:1, money:true}));\n         * console.log(ax5.util.number(123456789.678, {round:2, byte:true}));\n         * console.log(ax5.util.number(-123456789.8888, {abs:true, round:2, money:true}));\n         * console.log(ax5.util.number(\"A-1234~~56789.8~888PX\", {abs:true, round:2, money:true}));\n         *\n         * //123456789.7\n         * //123,456,789.7\n         * //117.7MB\n         * //123,456,789.89\n         * //123,456,789.89\n         * ```\n         */\n        function number(str, cond) {\n            var result,\n                pair = ('' + str).split(reDot),\n                isMinus = Number(pair[0]) < 0 || pair[0] == \"-0\",\n                returnValue = 0.0;\n            pair[0] = pair[0].replace(reInt, \"\");\n            if (pair[1]) {\n                pair[1] = pair[1].replace(reNotNum, \"\");\n                returnValue = Number(pair[0] + \".\" + pair[1]) || 0;\n            } else {\n                returnValue = Number(pair[0]) || 0;\n            }\n            result = isMinus ? -returnValue : returnValue;\n\n            each(cond, function (k, c) {\n                if (k == \"round\") {\n                    if (isNumber(c)) {\n                        if (c < 0) {\n                            result = +(Math.round(result + \"e-\" + Math.abs(c)) + \"e+\" + Math.abs(c));\n                        } else {\n                            result = +(Math.round(result + \"e+\" + c) + \"e-\" + c);\n                        }\n                    } else {\n                        result = Math.round(result);\n                    }\n                }\n                if (k == \"floor\") {\n                    result = Math.floor(result);\n                }\n                if (k == \"ceil\") {\n                    result = Math.ceil(result);\n                } else if (k == \"money\") {\n                    result = function (val) {\n                        var txtNumber = '' + val;\n                        if (isNaN(txtNumber) || txtNumber == \"\") {\n                            return \"\";\n                        } else {\n                            var arrNumber = txtNumber.split('.');\n                            arrNumber[0] += '.';\n                            do {\n                                arrNumber[0] = arrNumber[0].replace(reMoneySplit, '$1,$2');\n                            } while (reMoneySplit.test(arrNumber[0]));\n                            if (arrNumber.length > 1) {\n                                return arrNumber.join('');\n                            } else {\n                                return arrNumber[0].split('.')[0];\n                            }\n                        }\n                    }(result);\n                } else if (k == \"abs\") {\n                    result = Math.abs(Number(result));\n                } else if (k == \"byte\") {\n                    result = function (val) {\n                        val = Number(result);\n                        var nUnit = \"KB\";\n                        var myByte = val / 1024;\n                        if (myByte / 1024 > 1) {\n                            nUnit = \"MB\";\n                            myByte = myByte / 1024;\n                        }\n                        if (myByte / 1024 > 1) {\n                            nUnit = \"GB\";\n                            myByte = myByte / 1024;\n                        }\n                        return number(myByte, { round: 1 }) + nUnit;\n                    }(result);\n                }\n            });\n\n            return result;\n        }\n\n        /**\n         * 배열 비슷한 오브젝트를 배열로 변환해줍니다.\n         * @method ax5.util.toArray\n         * @param {Object|Elements|Arguments} O\n         * @returns {Array}\n         * @example\n         * ```js\n         * ax5.util.toArray(arguments);\n         * //\n         * ```\n         */\n        function toArray(O) {\n            if (typeof O.length != \"undefined\") return Array.prototype.slice.call(O);\n            return [];\n        }\n\n        /**\n         * 첫번째 인자에 두번째 인자 아이템을 합쳐줍니다. concat과 같은 역할을 하지만. 인자가 Array타입이 아니어도 됩니다.\n         * @method ax5.util.merge\n         * @param {Array|ArrayLike} first\n         * @param {Array|ArrayLike} second\n         * @returns {Array} first\n         * @example\n         * ```\n         *\n         * ```\n         */\n        function merge(first, second) {\n            var l = second.length,\n                i = first.length,\n                j = 0;\n\n            if (typeof l === \"number\") {\n                for (; j < l; j++) {\n                    first[i++] = second[j];\n                }\n            } else {\n                while (second[j] !== undefined) {\n                    first[i++] = second[j++];\n                }\n            }\n\n            first.length = i;\n\n            return first;\n        }\n\n        /**\n         * 오브젝트를 파라미터형식으로 또는 파라미터를 오브젝트 형식으로 변환합니다.\n         * @method ax5.util.param\n         * @param {Object|Array|String} O\n         * @param {String} [cond] - param|object\n         * @returns {Object|String}\n         * @example\n         * ```\n         * ax5.util.param({a:1,b:'1232'}, \"param\");\n         * ax5.util.param(\"a=1&b=1232\", \"param\");\n         * // \"a=1&b=1232\"\n         * ax5.util.param(\"a=1&b=1232\");\n         * // {a: \"1\", b: \"1232\"}\n         * ```\n         */\n        function param(O, cond) {\n            var p;\n            if (isString(O) && typeof cond !== \"undefined\" && cond == \"param\") {\n                return O;\n            } else if (isString(O) && typeof cond !== \"undefined\" && cond == \"object\" || isString(O) && typeof cond === \"undefined\") {\n                p = {};\n                each(O.split(reAmp), function () {\n                    var item = this.split(reEq);\n                    if (!p[item[0]]) p[item[0]] = item[1];else {\n                        if (isString(p[item[0]])) p[item[0]] = [p[item[0]]];\n                        p[item[0]].push(item[1]);\n                    }\n                });\n                return p;\n            } else {\n                p = [];\n                each(O, function (k, v) {\n                    p.push(k + \"=\" + escape(v));\n                });\n                return p.join('&');\n            }\n        }\n\n        function encode(s) {\n            return encodeURIComponent(s);\n        }\n\n        function decode(s) {\n            return decodeURIComponent(s);\n        }\n\n        function error() {\n            ax5.info.onerror.apply(this, arguments);\n        }\n\n        function localDate(yy, mm, dd, hh, mi, ss) {\n            var utcD, localD;\n            localD = new Date();\n            if (typeof hh === \"undefined\") hh = 23;\n            if (typeof mi === \"undefined\") mi = 59;\n            utcD = new Date(Date.UTC(yy, mm, dd || 1, hh, mi, ss || 0));\n\n            if (mm == 0 && dd == 1 && utcD.getUTCHours() + utcD.getTimezoneOffset() / 60 < 0) {\n                utcD.setUTCHours(0);\n            } else {\n                utcD.setUTCHours(utcD.getUTCHours() + utcD.getTimezoneOffset() / 60);\n            }\n            return utcD;\n        }\n\n        /**\n         * 날짜 형식의 문자열이나 Date객체를 조건에 맞게 처리 한 후 원하는 return 값으로 반환합니다.\n         * @method ax5.util.date\n         * @param {String|Date} d\n         * @param {Object} cond\n         * @returns {Date|String}\n         * @example\n         * ```js\n         * ax5.util.date('2013-01-01'); // Tue Jan 01 2013 23:59:00 GMT+0900 (KST)\n         * ax5.util.date((new Date()), {add:{d:10}, return:'yyyy/MM/dd'}); // \"2015/07/01\"\n         * ax5.util.date('1919-03-01', {add:{d:10}, return:'yyyy/MM/dd hh:mm:ss'}); // \"1919/03/11 23:59:00\"\n         * ```\n         */\n        function date(d, cond) {\n            var yy, mm, dd, hh, mi, aDateTime, aTimes, aTime, aDate, utcD, localD, va;\n            var ISO_8601 = /^\\d{4}(-\\d\\d(-\\d\\d(T\\d\\d:\\d\\d(:\\d\\d)?(\\.\\d+)?(([+-]\\d\\d:\\d\\d)|Z)?)?)?)?$/i;\n            var ISO_8601_FULL = /^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(([+-]\\d\\d:\\d\\d)|Z)?$/i;\n\n            if (isString(d)) {\n                if (d.length == 0) {\n                    d = new Date();\n                } else if (d.length > 15) {\n                    if (ISO_8601_FULL.test(d) || ISO_8601.test(d)) {\n                        d = new Date(d);\n                    } else {\n                        aDateTime = d.split(/ /g), aTimes, aTime, aDate = aDateTime[0].split(/\\D/g), yy = aDate[0];\n                        mm = parseFloat(aDate[1]);\n                        dd = parseFloat(aDate[2]);\n                        aTime = aDateTime[1] || \"09:00\";\n                        aTimes = aTime.substring(0, 5).split(\":\");\n                        hh = parseFloat(aTimes[0]);\n                        mi = parseFloat(aTimes[1]);\n                        if (right(aTime, 2) === \"AM\" || right(aTime, 2) === \"PM\") hh += 12;\n                        d = localDate(yy, mm - 1, dd, hh, mi);\n                    }\n                } else if (d.length == 14) {\n                    va = d.replace(/\\D/g, \"\");\n                    d = localDate(va.substr(0, 4), va.substr(4, 2) - 1, number(va.substr(6, 2)), number(va.substr(8, 2)), number(va.substr(10, 2)), number(va.substr(12, 2)));\n                } else if (d.length > 7) {\n                    va = d.replace(/\\D/g, \"\");\n                    d = localDate(va.substr(0, 4), va.substr(4, 2) - 1, number(va.substr(6, 2)));\n                } else if (d.length > 4) {\n                    va = d.replace(/\\D/g, \"\");\n                    d = localDate(va.substr(0, 4), va.substr(4, 2) - 1, 1);\n                } else if (d.length > 2) {\n                    va = d.replace(/\\D/g, \"\");\n                    return localDate(va.substr(0, 4), va.substr(4, 2) - 1, 1);\n                } else {\n                    d = new Date();\n                }\n            }\n\n            if (typeof cond === \"undefined\") {\n                return d;\n            } else {\n\n                if (\"add\" in cond) {\n                    d = function (_d, opts) {\n                        var yy,\n                            mm,\n                            dd,\n                            mxdd,\n                            DyMilli = 1000 * 60 * 60 * 24;\n\n                        if (typeof opts[\"d\"] !== \"undefined\") {\n                            _d.setTime(_d.getTime() + opts[\"d\"] * DyMilli);\n                        } else if (typeof opts[\"m\"] !== \"undefined\") {\n                            yy = _d.getFullYear();\n                            mm = _d.getMonth();\n                            dd = _d.getDate();\n                            yy = yy + parseInt(opts[\"m\"] / 12);\n                            mm += opts[\"m\"] % 12;\n                            mxdd = daysOfMonth(yy, mm);\n                            if (mxdd < dd) dd = mxdd;\n                            _d = new Date(yy, mm, dd, 12);\n                        } else if (typeof opts[\"y\"] !== \"undefined\") {\n                            _d.setTime(_d.getTime() + opts[\"y\"] * 365 * DyMilli);\n                        }\n                        return _d;\n                    }(new Date(d), cond[\"add\"]);\n                }\n\n                if (\"set\" in cond) {\n                    d = function (_d, opts) {\n                        var yy,\n                            mm,\n                            dd,\n                            processor = {\n                            \"firstDayOfMonth\": function firstDayOfMonth(date) {\n                                yy = date.getFullYear();\n                                mm = date.getMonth();\n                                dd = 1;\n                                return new Date(yy, mm, dd, 12);\n                            },\n                            \"lastDayOfMonth\": function lastDayOfMonth(date) {\n                                yy = date.getFullYear();\n                                mm = date.getMonth();\n                                dd = daysOfMonth(yy, mm);\n                                return new Date(yy, mm, dd, 12);\n                            }\n                        };\n                        if (opts in processor) {\n                            return processor[opts](_d);\n                        } else {\n                            return _d;\n                        }\n                    }(new Date(d), cond[\"set\"]);\n                }\n\n                if (\"return\" in cond) {\n                    return function () {\n                        var fStr = cond[\"return\"],\n                            nY,\n                            nM,\n                            nD,\n                            nH,\n                            nMM,\n                            nS,\n                            nDW;\n\n                        nY = d.getUTCFullYear();\n                        nM = setDigit(d.getMonth() + 1, 2);\n                        nD = setDigit(d.getDate(), 2);\n                        nH = setDigit(d.getHours(), 2);\n                        nMM = setDigit(d.getMinutes(), 2);\n                        nS = setDigit(d.getSeconds(), 2);\n                        nDW = d.getDay();\n\n                        var yre = /[^y]*(yyyy)[^y]*/gi;\n                        yre.exec(fStr);\n                        var regY = RegExp.$1;\n                        var mre = /[^m]*(MM)[^m]*/g;\n                        mre.exec(fStr);\n                        var regM = RegExp.$1;\n                        var dre = /[^d]*(dd)[^d]*/gi;\n                        dre.exec(fStr);\n                        var regD = RegExp.$1;\n                        var hre = /[^h]*(hh)[^h]*/gi;\n                        hre.exec(fStr);\n                        var regH = RegExp.$1;\n                        var mire = /[^m]*(mm)[^i]*/g;\n                        mire.exec(fStr);\n                        var regMI = RegExp.$1;\n                        var sre = /[^s]*(ss)[^s]*/gi;\n                        sre.exec(fStr);\n                        var regS = RegExp.$1;\n                        var dwre = /[^d]*(dw)[^w]*/gi;\n                        dwre.exec(fStr);\n                        var regDW = RegExp.$1;\n\n                        if (regY === \"yyyy\") {\n                            fStr = fStr.replace(regY, right(nY, regY.length));\n                        }\n                        if (regM === \"MM\") {\n                            if (regM.length == 1) nM = d.getMonth() + 1;\n                            fStr = fStr.replace(regM, nM);\n                        }\n                        if (regD === \"dd\") {\n                            if (regD.length == 1) nD = d.getDate();\n                            fStr = fStr.replace(regD, nD);\n                        }\n                        if (regH === \"hh\") {\n                            fStr = fStr.replace(regH, nH);\n                        }\n                        if (regMI === \"mm\") {\n                            fStr = fStr.replace(regMI, nMM);\n                        }\n                        if (regS === \"ss\") {\n                            fStr = fStr.replace(regS, nS);\n                        }\n                        if (regDW == \"dw\") {\n                            fStr = fStr.replace(regDW, info.weekNames[nDW].label);\n                        }\n                        return fStr;\n                    }();\n                } else {\n                    return d;\n                }\n            }\n        }\n\n        /**\n         * 인자인 날짜가 오늘부터 몇일전인지 반환합니다. 또는 인자인 날짜가 가까운 미래에 몇일 후인지 반환합니다.\n         * @method ax5.util.dday\n         * @param {String|Data} d\n         * @param {Object} cond\n         * @returns {Number}\n         * @example\n         * ```js\n         * ax5.util.dday('2016-01-29');\n         * // 1\n         * ax5.util.dday('2016-01-29', {today:'2016-01-28'});\n         * // 1\n         * ax5.util.dday('1977-03-29', {today:'2016-01-28', age:true});\n         * // 39\n         * ```\n         */\n        function dday(d, cond) {\n            var memoryDay = date(d),\n                DyMilli = 1000 * 60 * 60 * 24,\n                today = new Date(),\n                diffnum,\n                thisYearMemoryDay;\n\n            function getDayTime(_d) {\n                return Math.floor(_d.getTime() / DyMilli) * DyMilli;\n            }\n\n            if (typeof cond === \"undefined\") {\n                diffnum = number((getDayTime(memoryDay) - getDayTime(today)) / DyMilli, { floor: true });\n                return diffnum;\n            } else {\n                diffnum = number((getDayTime(memoryDay) - getDayTime(today)) / DyMilli, { floor: true });\n                if (cond[\"today\"]) {\n                    today = date(cond.today);\n                    diffnum = number((getDayTime(memoryDay) - getDayTime(today)) / DyMilli, { floor: true });\n                }\n                if (cond[\"thisYear\"]) {\n                    thisYearMemoryDay = new Date(today.getFullYear(), memoryDay.getMonth(), memoryDay.getDate());\n                    diffnum = number((getDayTime(thisYearMemoryDay) - getDayTime(today)) / DyMilli, { floor: true });\n                    if (diffnum < 0) {\n                        thisYearMemoryDay = new Date(today.getFullYear() + 1, memoryDay.getMonth(), memoryDay.getDate());\n                        diffnum = number((getDayTime(thisYearMemoryDay) - getDayTime(today)) / DyMilli, { floor: true });\n                    }\n                }\n                if (cond[\"age\"]) {\n                    thisYearMemoryDay = new Date(today.getFullYear(), memoryDay.getMonth(), memoryDay.getDate());\n                    diffnum = thisYearMemoryDay.getFullYear() - memoryDay.getFullYear();\n                }\n\n                return diffnum;\n            }\n        }\n\n        /**\n         * 인자인 날짜가 몇년 몇월의 몇번째 주차인지 반환합니다.\n         * @method ax5.util.weeksOfMonth\n         * @param {String|Data} d\n         * @returns {Object}\n         * @example\n         * ```js\n         * ax5.util.weeksOfMonth(\"2015-10-01\"); // {year: 2015, month: 10, count: 1}\n         * ax5.util.weeksOfMonth(\"2015-09-19\"); // {year: 2015, month: 9, count: 3}\n         * ```\n         */\n        function weeksOfMonth(d) {\n            var myDate = date(d);\n            return {\n                year: myDate.getFullYear(),\n                month: myDate.getMonth() + 1,\n                count: parseInt(myDate.getDate() / 7 + 1)\n            };\n        }\n\n        /**\n         * 년월에 맞는 날자수를 반환합니다.\n         * (new Date()).getMonth() 기준으로 월값을 보냅니다. \"2월\" 인경우 \"1\" 을 넘기게 됩니다.\n         * @method ax5.util.daysOfMonth\n         * @param {Number} y\n         * @param {Number} m\n         * @returns {Number}\n         * @examples\n         * ```js\n         * ax5.util.daysOfMonth(2015, 11); // 31\n         * ax5.util.daysOfMonth(2015, 1); // 28\n         * ```\n         */\n        function daysOfMonth(y, m) {\n            if (m == 3 || m == 5 || m == 8 || m == 10) {\n                return 30;\n            } else if (m == 1) {\n                return y % 4 == 0 && y % 100 != 0 || y % 400 == 0 ? 29 : 28;\n            } else {\n                return 31;\n            }\n        }\n\n        /**\n         * 원하는 횟수 만큼 자릿수 맞춤 문자열을 포함한 문자열을 반환합니다.\n         * 문자열 길이보다 작은값을 보내면 무시됩니다.\n         * @method ax5.util.setDigit\n         * @param {String|Number} num\n         * @param {Number} length\n         * @param {String} [padder=0]\n         * @param {Number} [radix]\n         * @returns {String}\n         * @example\n         * ```\n         * ax5.util.setDigit(2016, 6)\n         * // \"002016\"\n         * ax5.util.setDigit(2016, 2)\n         * // \"2016\"\n         * ```\n         */\n        function setDigit(num, length, padder, radix) {\n            var s = num.toString(radix || 10);\n            return times(padder || '0', length - s.length) + s;\n        }\n\n        /**\n         * 문자열을 지정된 수만큼 반복 합니다.\n         * @param {String} s\n         * @param {Number} count\n         * @returns {string}\n         * @example\n         * ```\n         * ax5.util.times(2016, 2)\n         * //\"20162016\"\n         * ```\n         */\n        function times(s, count) {\n            return count < 1 ? '' : new Array(count + 1).join(s);\n        }\n\n        /**\n         * 타겟엘리먼트의 부모 엘리멘트 트리에서 원하는 조건의 엘리먼트를 얻습니다.\n         * @method ax5.util.findParentNode\n         * @param {Element} _target - target element\n         * @param {Object|Function} cond - 원하는 element를 찾을 조건\n         * @returns {Element}\n         * @example\n         * ```\n         * // cond 속성정의\n         * var cond = {\n        * \ttagname: {String} - 태그명 (ex. a, div, span..),\n        * \tclazz: {String} - 클래스명\n        * \t[, 그 외 찾고 싶은 attribute명들]\n        * };\n         * console.log(\n         * console.log(\n         *    ax5.util.findParentNode(e.target, {tagname:\"a\", clazz:\"ax-menu-handel\", \"data-custom-attr\":\"attr_value\"})\n         * );\n         * // cond 함수로 처리하기\n         * jQuery('#id').bind(\"click.app_expand\", function(e){\n        * \tvar target = ax5.util.findParentNode(e.target, function(target){\n        * \t\tif($(target).hasClass(\"aside\")){\n        * \t\t\treturn true;\n        * \t\t}\n        * \t\telse{\n        * \t\t\treturn true;\n        * \t\t}\n        * \t});\n        * \t//client-aside\n        * \tif(target.id !== \"client-aside\"){\n        * \t\t// some action\n        * \t}\n        * });\n         * ```\n         */\n\n        function findParentNode(_target, cond) {\n            if (_target) {\n                while (function () {\n                    var result = true;\n                    if (typeof cond === \"undefined\") {\n                        _target = _target.parentNode ? _target.parentNode : false;\n                    } else if (isFunction(cond)) {\n                        result = cond(_target);\n                    } else if (isObject(cond)) {\n                        for (var k in cond) {\n                            if (k === \"tagname\") {\n                                if (_target.tagName.toLocaleLowerCase() != cond[k]) {\n                                    result = false;\n                                    break;\n                                }\n                            } else if (k === \"clazz\" || k === \"class_name\") {\n                                if (\"className\" in _target) {\n                                    var klasss = _target.className.split(reClassNameSplit);\n                                    var hasClass = false;\n                                    for (var a = 0; a < klasss.length; a++) {\n                                        if (klasss[a] == cond[k]) {\n                                            hasClass = true;\n                                            break;\n                                        }\n                                    }\n                                    result = hasClass;\n                                } else {\n                                    result = false;\n                                    break;\n                                }\n                            } else {\n                                // 그외 속성값들.\n                                if (_target.getAttribute) {\n                                    if (_target.getAttribute(k) != cond[k]) {\n                                        result = false;\n                                        break;\n                                    }\n                                } else {\n                                    result = false;\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    return !result;\n                }()) {\n                    if (_target.parentNode && _target.parentNode.parentNode) {\n                        _target = _target.parentNode;\n                    } else {\n                        _target = false;\n                        break;\n                    }\n                }\n            }\n            return _target;\n        }\n\n        /**\n         * @method ax5.util.cssNumber\n         * @param {String|Number} val\n         * @returns {String}\n         * @example\n         * ```\n         * console.log(ax5.util.cssNumber(\"100px\"))\n         * console.log(ax5.util.cssNumber(\"100%\"))\n         * console.log(ax5.util.cssNumber(\"100\"))\n         * console.log(ax5.util.cssNumber(100))\n         * console.log(ax5.util.cssNumber(\"!!100@#\"))\n         * ```\n         */\n        function cssNumber(val) {\n            var re = /\\D?(\\d+)([a-zA-Z%]*)/i,\n                found = ('' + val).match(re),\n                unit = found[2] || \"px\";\n\n            return found[1] + unit;\n        }\n\n        /**\n         * css string 및 object 를 넘기면 object 및 string 으로 변환되어 리턴됩니다.\n         * @method ax5.util.css\n         * @param {Object|String} val - CSS String or CSS Object\n         * @returns {String|Object}\n         * @example\n         * ```\n         * console.log(ax5.util.css({background: \"#ccc\", padding: \"50px\", width: \"100px\"}));\n         * //\"background:#ccc;padding:50px;width:100px;\"\n         * console.log(ax5.util.css('width:100px;padding: 50px; background: #ccc'));\n         * // object {width: \"100px\", padding: \"50px\", background: \"#ccc\"}\n         * ```\n         */\n        function css(val) {\n            var returns;\n            if (isObject(val)) {\n                returns = '';\n                for (var k in val) {\n                    returns += k + ':' + val[k] + ';';\n                }\n                return returns;\n            } else if (isString(val)) {\n                returns = {};\n                var valSplited = val.split(/[ ]*;[ ]*/g);\n                valSplited.forEach(function (v) {\n                    if ((v = v.trim()) !== \"\") {\n                        var vSplited = v.split(/[ ]*:[ ]*/g);\n                        returns[vSplited[0]] = vSplited[1];\n                    }\n                });\n                return returns;\n            }\n        }\n\n        /**\n         * @method ax5.util.stopEvent\n         * @param {Event} e\n         * @example\n         * ```\n         * ax5.util.stopEvent(e);\n         * ```\n         */\n        function stopEvent(e) {\n            // 이벤트 중지 구문\n            if (!e) var e = window.event;\n\n            //e.cancelBubble is supported by IE -\n            // this will kill the bubbling process.\n            e.cancelBubble = true;\n            e.returnValue = false;\n\n            //e.stopPropagation works only in Firefox.\n            if (e.stopPropagation) e.stopPropagation();\n            if (e.preventDefault) e.preventDefault();\n\n            return false;\n            // 이벤트 중지 구문 끝\n        }\n\n        /**\n         * @method ax5.util.selectRange\n         * @param {Element} el\n         * @param {Element} offset\n         * @example\n         * ```\n         * ax5.util.selectRange($(\"#select-test-0\")); // selectAll\n         * ax5.util.selectRange($(\"#select-test-0\"), \"selectAll\"); //selectAll\n         * ax5.util.selectRange($(\"#select-test-0\"), \"start\"); // focus on start\n         * ax5.util.selectRange($(\"#select-test-0\"), \"end\"); // focus on end\n         * ax5.util.selectRange($(\"#select-test-0\"), [1, 5]); // select 1~5\n         * ```\n         */\n        var selectRange = function () {\n            var processor = {\n                'textRange': {\n                    'selectAll': function selectAll(el, range, offset) {},\n                    'arr': function arr(el, range, offset) {\n                        range.moveStart(\"character\", offset[0]); // todo ie node select 체크필요\n                        range.collapse();\n                        range.moveEnd(\"character\", offset[1]);\n                    },\n                    'start': function start(el, range, offset) {\n                        range.moveStart(\"character\", 0);\n                        range.collapse();\n                    },\n                    'end': function end(el, range, offset) {\n                        range.moveStart(\"character\", range.text.length);\n                        range.collapse();\n                    }\n                },\n                'range': {\n                    'selectAll': function selectAll(el, range, offset) {\n                        range.selectNodeContents(el);\n                    },\n                    'arr': function arr(el, range, offset) {\n                        if (isObject(offset[0])) {\n                            range.setStart(offset[0].node, offset[0].offset);\n                            range.setEnd(offset[1].node, offset[1].offset);\n                        } else {\n                            range.setStart(el.firstChild, offset[0]);\n                            range.setEnd(el.firstChild, offset[1]);\n                        }\n                    },\n                    'start': function start(el, range, offset) {\n                        range.selectNodeContents(el);\n                        range.collapse(true);\n                    },\n                    'end': function end(el, range, offset) {\n                        range.selectNodeContents(el);\n                        range.collapse(false);\n                    }\n                }\n            };\n            return function (el, offset) {\n                var range, rangeType, selection;\n\n                if (el instanceof jQuery) {\n                    el = el.get(0);\n                }\n                if (!el) return;\n\n                // 레인지 타입 선택\n                if (doc.body.createTextRange) {\n                    range = document.body.createTextRange();\n                    range.moveToElementText(el);\n                    rangeType = \"textRange\";\n                } else if (window.getSelection) {\n                    selection = window.getSelection();\n                    range = document.createRange();\n                    rangeType = \"range\";\n                }\n\n                // range 적용\n                if (typeof offset == \"undefined\") {\n                    processor[rangeType].selectAll.call(this, el, range, offset);\n                } else if (isArray(offset)) {\n                    processor[rangeType].arr.call(this, el, range, offset);\n                } else {\n                    for (var key in processor[rangeType]) {\n                        if (offset == key) {\n                            processor[rangeType][key].call(this, el, range, offset);\n                            break;\n                        }\n                    }\n                }\n\n                // 포커스 및 셀렉트\n                if (doc.body.createTextRange) {\n                    range.select();\n                    el.focus();\n                } else if (window.getSelection) {\n                    el.focus();\n                    selection.removeAllRanges();\n                    selection.addRange(range);\n                }\n            };\n        }();\n\n        /**\n         * 지정한 시간을 지연시켜 함수를 실행합니다.\n         * @method ax5.util.debounce\n         * @param {Function} func\n         * @param {Number} wait\n         * @param {Boolean} immediately\n         * @returns {debounced}\n         * @example\n         * ```js\n         * var debounceFn = ax5.util.debounce(function( val ) { console.log(val); }, 300);\n         * $(document.body).click(function(){\n         *  debounceFn(new Date());\n         * });\n         * ```\n         */\n        var debounce = function debounce(func, wait, immediately) {\n            var timeout, removeTimeout;\n            var debounced = function debounced() {\n                var args = toArray(arguments);\n\n                if (removeTimeout) clearTimeout(removeTimeout);\n                if (timeout) {\n                    // 두번째 호출\n                    if (timeout) clearTimeout(timeout);\n                    timeout = setTimeout(function (args) {\n                        func.apply(this, args);\n                    }.bind(this, args), wait);\n                } else {\n                    // 첫 호출\n                    timeout = setTimeout(function (args) {\n                        func.apply(this, args);\n                    }.bind(this, args), immediately ? 0 : wait);\n                }\n                removeTimeout = setTimeout(function () {\n                    clearTimeout(timeout);\n                    timeout = null;\n                }, wait);\n            };\n            debounced.cancel = function () {\n                clearTimeout(timeout);\n                clearTimeout(removeTimeout);\n                timeout = null;\n            };\n\n            return debounced;\n        };\n\n        /**\n         * @method ax5.util.deepCopy\n         * @param {Object} obj\n         * @returns {Object}\n         * @example\n         * ```js\n         * var obj = [\n         *  {name:\"A\", child:[{name:\"a-1\"}]},\n         *  {name:\"B\", child:[{name:\"b-1\"}], callBack: function(){ console.log('callBack'); }}\n         * ];\n         * var copiedObj = ax5.util.deepCopy(obj)\n         * ```\n         */\n        function deepCopy(obj) {\n            var r, l;\n            if ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) == 'object') {\n                if (U.isArray(obj)) {\n                    l = obj.length;\n                    r = new Array(l);\n                    for (var i = 0; i < l; i++) {\n                        r[i] = deepCopy(obj[i]);\n                    }\n                    return r;\n                } else {\n                    return jQuery.extend({}, obj);\n                }\n            }\n            return obj;\n        }\n\n        /**\n         * HTML 문자열을 escape 처리합니다.\n         * \"&lt;\" represents the < sign.\n         * \"&gt;\" represents the > sign.\n         * \"&amp;\" represents the & sign.\n         * \"&quot; represents the \" mark.\n         * [Character entity references](https://www.w3.org/TR/html401/charset.html#h-5.3)\n         * @method ax5.util.escapeHtml\n         * @param {String} s\n         * @returns {string}\n         * @example\n         * ```\n         * ax5.util.escapeHtml('HTML <span>string</span> & \"escape\"')\n         * //\"HTML &lt;span&gt;string&lt;/span&gt; &amp; &quot;escape&quot;\"\n         * ```\n         */\n        function escapeHtml(s) {\n            if (_toString.call(s) != \"[object String]\") return s;\n            if (!s) return \"\";\n            return s.replace(/[\\<\\>\\&\\\"]/gm, function (match) {\n                switch (match) {\n                    case \"<\":\n                        return \"&lt;\";\n                    case \">\":\n                        return \"&gt;\";\n                    case \"&\":\n                        return \"&amp;\";\n                    case \"\\\"\":\n                        return \"&quot;\";\n                    default:\n                        return match;\n                }\n            });\n        }\n\n        /**\n         * HTML 문자열을 unescape 처리합니다.\n         * escapeHtml를 참고하세요.\n         * @method ax5.util.unescapeHtml\n         * @param {String} s\n         * @returns {string}\n         * @example\n         * ```\n         * ax5.util.unescapeHtml('HTML &lt;span&gt;string&lt;/span&gt; &amp; &quot;escape&quot;')\n         * //\"HTML <span>string</span> & \"escape\"\"\n         * ```\n         */\n        function unescapeHtml(s) {\n            if (_toString.call(s) != \"[object String]\") return s;\n            if (!s) return \"\";\n            return s.replace(/(&lt;)|(&gt;)|(&amp;)|(&quot;)/gm, function (match) {\n                switch (match) {\n                    case \"&lt;\":\n                        return \"<\";\n                    case \"&gt;\":\n                        return \">\";\n                    case \"&amp;\":\n                        return \"&\";\n                    case \"&quot;\":\n                        return \"\\\"\";\n                    default:\n                        return match;\n                }\n            });\n        }\n\n        /**\n         * @method ax5.util.string\n         * @param {String} tmpl\n         * @param {*} args\n         * @return {ax5string}\n         * @example\n         * ```js\n         * ax5.util.string(\"{0} is dead, but {1} is alive! {0} {2}\").format(\"ASP\", \"ASP.NET\");\n         * ax5.util.string(\"{0} is dead, but {1} is alive! {0} {2}\").format([\"ASP\", \"ASP.NET\"]);\n         * ax5.util.stinrg(\"{0} counts\").format(100);\n         * ```\n         */\n        function string(_string) {\n            function ax5string(_string) {\n                this.value = _string;\n                this.toString = function () {\n                    return this.value;\n                };\n                /**\n                 * @method ax5.util.string.format\n                 * @returns {*}\n                 */\n                this.format = function () {\n                    var args = [];\n                    for (var i = 0, l = arguments.length; i < l; i++) {\n                        args = args.concat(arguments[i]);\n                    }\n                    return this.value.replace(/{(\\d+)}/g, function (match, number) {\n                        return typeof args[number] != 'undefined' ? args[number] : match;\n                    });\n                };\n                /**\n                 * @method ax5.util.string.escape\n                 * @returns {*}\n                 */\n                this.escape = function () {\n                    return escapeHtml(this.value);\n                };\n                /**\n                 * @method ax5.util.string.unescape\n                 * @returns {*}\n                 */\n                this.unescape = function () {\n                    return unescapeHtml(this.value);\n                };\n                /**\n                 * @method ax5.util.string.encode\n                 * @returns {*}\n                 */\n                this.encode = function () {\n                    return encode(this.value);\n                };\n                /**\n                 * @method ax5.util.string.decode\n                 * @returns {*}\n                 */\n                this.decode = function () {\n                    return decode(this.value);\n                };\n                /**\n                 * @method ax5.util.string.left\n                 * @param {String|Number} pos - 찾을 문자열 또는 포지션\n                 * @returns {*}\n                 */\n                this.left = function (_pos) {\n                    return left(this.value, _pos);\n                };\n                /**\n                 * @method ax5.util.string.right\n                 * @param {String|Number} pos - 찾을 문자열 또는 포지션\n                 * @returns {*}\n                 */\n                this.right = function (_pos) {\n                    return right(this.value, _pos);\n                };\n                /**\n                 * @method ax5.util.string.camelCase\n                 * @returns {*}\n                 */\n                this.camelCase = function () {\n                    return camelCase(this.value);\n                };\n                /**\n                 * @method ax5.util.string.snakeCase\n                 * @returns {*}\n                 */\n                this.snakeCase = function () {\n                    return snakeCase(this.value);\n                };\n            }\n            return new ax5string(_string);\n        }\n\n        return {\n            alert: alert,\n            each: each,\n            map: map,\n            search: search,\n            reduce: reduce,\n            reduceRight: reduceRight,\n            filter: filter,\n            sum: sum,\n            avg: avg,\n            toJson: toJson,\n            parseJson: parseJson,\n            first: first,\n            last: last,\n            deepCopy: deepCopy,\n\n            left: left,\n            right: right,\n            getType: getType,\n            isWindow: isWindow,\n            isElement: isElement,\n            isObject: isObject,\n            isArray: isArray,\n            isFunction: isFunction,\n            isString: isString,\n            isNumber: isNumber,\n            isNodelist: isNodelist,\n            isUndefined: isUndefined,\n            isNothing: isNothing,\n            setCookie: setCookie,\n            getCookie: getCookie,\n            camelCase: camelCase,\n            snakeCase: snakeCase,\n            number: number,\n            toArray: toArray,\n            merge: merge,\n            param: param,\n            error: error,\n            date: date,\n            dday: dday,\n            daysOfMonth: daysOfMonth,\n            weeksOfMonth: weeksOfMonth,\n            setDigit: setDigit,\n            times: times,\n            findParentNode: findParentNode,\n            cssNumber: cssNumber,\n            css: css,\n            isDate: isDate,\n            isDateFormat: isDateFormat,\n            stopEvent: stopEvent,\n            selectRange: selectRange,\n            debounce: debounce,\n            escapeHtml: escapeHtml,\n            unescapeHtml: unescapeHtml,\n\n            string: string\n        };\n    }();\n\n    if ((typeof module === 'undefined' ? 'undefined' : _typeof(module)) === \"object\" && _typeof(module.exports) === \"object\") {\n        module.exports = ax5;\n    } else {\n        root.ax5 = function () {\n            return ax5;\n        }(); // ax5.ui에 연결\n    }\n}).call(typeof window !== \"undefined\" ? window : undefined);\n\nax5.def = {};\nax5.info.errorMsg[\"ax5dialog\"] = {\n    \"501\": \"Duplicate call error\"\n};\n\nax5.info.errorMsg[\"ax5picker\"] = {\n    \"401\": \"Can not find target element\",\n    \"402\": \"Can not find boundID\",\n    \"501\": \"Can not find content key\"\n};\n\nax5.info.errorMsg[\"single-uploader\"] = {\n    \"460\": \"There are no files to be uploaded.\",\n    \"461\": \"There is no uploaded files.\"\n};\n\nax5.info.errorMsg[\"ax5calendar\"] = {\n    \"401\": \"Can not find target element\"\n};\n\nax5.info.errorMsg[\"ax5formatter\"] = {\n    \"401\": \"Can not find target element\",\n    \"402\": \"Can not find boundID\",\n    \"501\": \"Can not find pattern\"\n};\n\nax5.info.errorMsg[\"ax5menu\"] = {\n    \"501\": \"Can not find menu item\"\n};\n\nax5.info.errorMsg[\"ax5select\"] = {\n    \"401\": \"Can not find target element\",\n    \"402\": \"Can not find boundID\",\n    \"501\": \"Can not find option\"\n};\n\nax5.info.errorMsg[\"ax5combobox\"] = {\n    \"401\": \"Can not find target element\",\n    \"402\": \"Can not find boundID\",\n    \"501\": \"Can not find option\"\n};\n// 필수 Ployfill 확장 구문\n(function () {\n    'use strict';\n\n    var root = this,\n        re_trim = /^\\s*|\\s*$/g;\n\n    // From https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\n    if (!Object.keys) {\n        Object.keys = function () {\n            var hwp = Object.prototype.hasOwnProperty,\n                hdeb = !{ toString: null }.propertyIsEnumerable('toString'),\n                de = ['toString', 'toLocaleString', 'valueOf', 'hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable', 'constructor'],\n                del = de.length;\n\n            return function (obj) {\n                if ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) !== 'object' && (typeof obj !== 'function' || obj === null)) throw new TypeError('type err');\n                var r = [],\n                    prop,\n                    i;\n                for (prop in obj) {\n                    if (hwp.call(obj, prop)) r.push(prop);\n                }if (hdeb) {\n                    for (i = 0; i < del; i++) {\n                        if (hwp.call(obj, de[i])) r.push(de[i]);\n                    }\n                }\n                return r;\n            };\n        }();\n    }\n\n    // ES5 15.4.4.18 Array.prototype.forEach ( callbackfn [ , thisArg ] )\n    // From https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/forEach\n    if (!Array.prototype.forEach) {\n        Array.prototype.forEach = function (fun /*, thisp */) {\n            if (this === void 0 || this === null) {\n                throw TypeError();\n            }\n            var t = Object(this);\n            var len = t.length >>> 0;\n            if (typeof fun !== \"function\") {\n                throw TypeError();\n            }\n            var thisp = arguments[1],\n                i;\n            for (i = 0; i < len; i++) {\n                if (i in t) {\n                    fun.call(thisp, t[i], i, t);\n                }\n            }\n        };\n    }\n\n    // ES5 15.3.4.5 Function.prototype.bind ( thisArg [, arg1 [, arg2, ... ]] )\n    // https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Function/bind\n    if (!Function.prototype.bind) {\n        Function.prototype.bind = function (o) {\n            if (typeof this !== 'function') {\n                throw TypeError(\"function\");\n            }\n            var slice = [].slice,\n                args = slice.call(arguments, 1),\n                self = this,\n                bound = function bound() {\n                return self.apply(this instanceof nop ? this : o, args.concat(slice.call(arguments)));\n            };\n\n            function nop() {}\n\n            nop.prototype = self.prototype;\n            bound.prototype = new nop();\n            return bound;\n        };\n    }\n\n    /*global document */\n    /**\n     * define document.querySelector & document.querySelectorAll for IE7\n     *\n     * A not very fast but small hack. The approach is taken from\n     * http://weblogs.asp.net/bleroy/archive/2009/08/31/queryselectorall-on-old-ie-versions-something-that-doesn-t-work.aspx\n     *\n     */\n    (function () {\n        if (document.querySelectorAll || document.querySelector) {\n            return;\n        }\n        if (!document.createStyleSheet) return;\n        var style = document.createStyleSheet(),\n            select = function select(selector, maxCount) {\n            var all = document.all,\n                l = all.length,\n                i,\n                resultSet = [];\n\n            style.addRule(selector, \"foo:bar\");\n            for (i = 0; i < l; i += 1) {\n                if (all[i].currentStyle.foo === \"bar\") {\n                    resultSet.push(all[i]);\n                    if (resultSet.length > maxCount) {\n                        break;\n                    }\n                }\n            }\n            style.removeRule(0);\n            return resultSet;\n        };\n\n        document.querySelectorAll = function (selector) {\n            return select(selector, Infinity);\n        };\n        document.querySelector = function (selector) {\n            return select(selector, 1)[0] || null;\n        };\n    })();\n\n    if (!String.prototype.trim) {\n        (function () {\n            String.prototype.trim = function () {\n                return this.replace(re_trim, '');\n            };\n        })();\n    }\n\n    if (!window.JSON) {\n        window.JSON = {\n            parse: function parse(sJSON) {\n                return new Function('', 'return ' + sJSON)();\n            },\n            stringify: function () {\n                var r = /[\"]/g,\n                    _f;\n                return _f = function f(vContent) {\n                    var result, i, j;\n                    switch (result = typeof vContent === 'undefined' ? 'undefined' : _typeof(vContent)) {\n                        case 'string':\n                            return '\"' + vContent.replace(r, '\\\\\"') + '\"';\n                        case 'number':\n                        case 'boolean':\n                            return vContent.toString();\n                        case 'undefined':\n                            return 'undefined';\n                        case 'function':\n                            return '\"\"';\n                        case 'object':\n                            if (!vContent) return 'null';\n                            result = '';\n                            if (vContent.splice) {\n                                for (i = 0, j = vContent.length; i < j; i++) {\n                                    result += ',' + _f(vContent[i]);\n                                }return '[' + result.substr(1) + ']';\n                            } else {\n                                for (i in vContent) {\n                                    if (vContent.hasOwnProperty(i) && vContent[i] !== undefined && typeof vContent[i] != 'function') result += ',\"' + i + '\":' + _f(vContent[i]);\n                                }return '{' + result.substr(1) + '}';\n                            }\n                    }\n                };\n            }()\n        };\n    }\n\n    // splice ie8 <= polyfill\n    (function () {\n        if (!document.documentMode || document.documentMode >= 9) return false;\n        var _splice = Array.prototype.splice;\n        Array.prototype.splice = function () {\n            var args = Array.prototype.slice.call(arguments);\n            if (typeof args[1] === \"undefined\") args[1] = this.length - args[0];\n            return _splice.apply(this, args);\n        };\n    })();\n\n    /**\n     * Shim for \"fixing\" IE's lack of support (IE < 9) for applying slice\n     * on host objects like NamedNodeMap, NodeList, and HTMLCollection\n     * (technically, since host objects have been implementation-dependent,\n     * at least before ES6, IE hasn't needed to work this way).\n     * Also works on strings, fixes IE < 9 to allow an explicit undefined\n     * for the 2nd argument (as in Firefox), and prevents errors when\n     * called on other DOM objects.\n     */\n    (function () {\n        'use strict';\n\n        var _slice = Array.prototype.slice;\n\n        try {\n            // Can't be used with DOM elements in IE < 9\n            _slice.call(document.documentElement);\n        } catch (e) {\n            // Fails in IE < 9\n            // This will work for genuine arrays, array-like objects,\n            // NamedNodeMap (attributes, entities, notations),\n            // NodeList (e.g., getElementsByTagName), HTMLCollection (e.g., childNodes),\n            // and will not fail on other DOM objects (as do DOM elements in IE < 9)\n            Array.prototype.slice = function (begin, end) {\n                // IE < 9 gets unhappy with an undefined end argument\n                end = typeof end !== 'undefined' ? end : this.length;\n\n                // For native Array objects, we use the native slice function\n                if (Object.prototype.toString.call(this) === '[object Array]') {\n                    return _slice.call(this, begin, end);\n                }\n\n                // For array like object we handle it ourselves.\n                var i,\n                    cloned = [],\n                    size,\n                    len = this.length;\n\n                // Handle negative value for \"begin\"\n                var start = begin || 0;\n                start = start >= 0 ? start : Math.max(0, len + start);\n\n                // Handle negative value for \"end\"\n                var upTo = typeof end == 'number' ? Math.min(end, len) : len;\n                if (end < 0) {\n                    upTo = len + end;\n                }\n\n                // Actual expected size of the slice\n                size = upTo - start;\n\n                if (size > 0) {\n                    cloned = new Array(size);\n                    if (this.charAt) {\n                        for (i = 0; i < size; i++) {\n                            cloned[i] = this.charAt(start + i);\n                        }\n                    } else {\n                        for (i = 0; i < size; i++) {\n                            cloned[i] = this[start + i];\n                        }\n                    }\n                }\n\n                return cloned;\n            };\n        }\n    })();\n\n    // Console-polyfill. MIT license. https://github.com/paulmillr/console-polyfill\n    // Make it safe to do console.log() always.\n    (function (con) {\n        var prop, method;\n        var empty = {};\n        var dummy = function dummy() {};\n        var properties = 'memory'.split(',');\n        var methods = ('assert,clear,count,debug,dir,dirxml,error,exception,group,' + 'groupCollapsed,groupEnd,info,log,markTimeline,profile,profiles,profileEnd,' + 'show,table,time,timeEnd,timeline,timelineEnd,timeStamp,trace,warn').split(',');\n        while (prop = properties.pop()) {\n            con[prop] = con[prop] || empty;\n        }while (method = methods.pop()) {\n            con[method] = con[method] || dummy;\n        }\n    })(window.console || {}); // Using `this` for web workers.\n\n\n    // Modernizr style test\n    if (!(window.webkitMatchMedia || window.mozMatchMedia || window.oMatchMedia || window.msMatchMedia || window.matchMedia)) {\n        var root = document.getElementsByTagName('html')[0];\n        root.className += ' no-matchmedia';\n    }\n\n    /*! matchMedia() polyfill - Test a CSS media type/query in JS. Authors & copyright (c) 2012: Scott Jehl, Paul Irish, Nicholas Zakas, David Knight. Dual MIT/BSD license */\n    window.matchMedia || (window.matchMedia = function () {\n        \"use strict\";\n\n        // For browsers that support matchMedium api such as IE 9 and webkit\n\n        var styleMedia = window.styleMedia || window.media;\n\n        // For those that don't support matchMedium\n        if (!styleMedia) {\n            var style = document.createElement('style'),\n                script = document.getElementsByTagName('script')[0],\n                info = null;\n\n            style.type = 'text/css';\n            style.id = 'matchmediajs-test';\n\n            script.parentNode.insertBefore(style, script);\n\n            // 'style.currentStyle' is used by IE <= 8 and 'window.getComputedStyle' for all other browsers\n            info = 'getComputedStyle' in window && window.getComputedStyle(style, null) || style.currentStyle;\n\n            styleMedia = {\n                matchMedium: function matchMedium(media) {\n                    var text = '@media ' + media + '{ #matchmediajs-test { width: 1px; } }';\n\n                    // 'style.styleSheet' is used by IE <= 8 and 'style.textContent' for all other browsers\n                    if (style.styleSheet) {\n                        style.styleSheet.cssText = text;\n                    } else {\n                        style.textContent = text;\n                    }\n\n                    // Test if media query is true or false\n                    return info.width === '1px';\n                }\n            };\n        }\n\n        return function (media) {\n            return {\n                matches: styleMedia.matchMedium(media || 'all'),\n                media: media || 'all'\n            };\n        };\n    }());\n\n    /*! matchMedia() polyfill addListener/removeListener extension. Author & copyright (c) 2012: Scott Jehl. Dual MIT/BSD license */\n    (function () {\n        // Bail out for browsers that have addListener support\n        if (window.matchMedia && window.matchMedia('all').addListener) {\n            return false;\n        }\n\n        var localMatchMedia = window.matchMedia,\n            hasMediaQueries = localMatchMedia('only all').matches,\n            isListening = false,\n            timeoutID = 0,\n            // setTimeout for debouncing 'handleChange'\n        queries = [],\n            // Contains each 'mql' and associated 'listeners' if 'addListener' is used\n        handleChange = function handleChange(evt) {\n            // Debounce\n            clearTimeout(timeoutID);\n\n            timeoutID = setTimeout(function () {\n                for (var i = 0, il = queries.length; i < il; i++) {\n                    var mql = queries[i].mql,\n                        listeners = queries[i].listeners || [],\n                        matches = localMatchMedia(mql.media).matches;\n\n                    // Update mql.matches value and call listeners\n                    // Fire listeners only if transitioning to or from matched state\n                    if (matches !== mql.matches) {\n                        mql.matches = matches;\n\n                        for (var j = 0, jl = listeners.length; j < jl; j++) {\n                            listeners[j].call(window, mql);\n                        }\n                    }\n                }\n            }, 30);\n        };\n\n        window.matchMedia = function (media) {\n            var mql = localMatchMedia(media),\n                listeners = [],\n                index = 0;\n\n            mql.addListener = function (listener) {\n                // Changes would not occur to css media type so return now (Affects IE <= 8)\n                if (!hasMediaQueries) {\n                    return;\n                }\n\n                // Set up 'resize' listener for browsers that support CSS3 media queries (Not for IE <= 8)\n                // There should only ever be 1 resize listener running for performance\n                if (!isListening) {\n                    isListening = true;\n                    window.addEventListener('resize', handleChange, true);\n                }\n\n                // Push object only if it has not been pushed already\n                if (index === 0) {\n                    index = queries.push({\n                        mql: mql,\n                        listeners: listeners\n                    });\n                }\n\n                listeners.push(listener);\n            };\n\n            mql.removeListener = function (listener) {\n                for (var i = 0, il = listeners.length; i < il; i++) {\n                    if (listeners[i] === listener) {\n                        listeners.splice(i, 1);\n                    }\n                }\n            };\n\n            return mql;\n        };\n    })();\n\n    // extend innerWidth ..\n    var html = document.getElementsByTagName('html')[0];\n    var body = document.getElementsByTagName('body')[0];\n\n    /*\n    if (!window.innerWidth) window.innerWidth = html.clientWidth;\n    if (!window.innerHeight) window.innerHeight = html.clientHeight;\n    if (!window.scrollX) window.scrollX = window.pageXOffset || html.scrollLeft;\n    if (!window.scrollY) window.scrollY = window.pageYOffset || html.scrollTop;\n    */\n}).call(window);\n/**\n * Refer to this by {@link ax5}.\n * @namespace ax5.ui\n */\n\n/**\n * @class ax5.ui.root\n * @classdesc ax5 ui class\n * @author tom@axisj.com\n * @example\n * ```\n * var myui = new ax5.ui.root();\n * ```\n */\nax5.ui = function () {\n\n    function axUi() {\n        this.config = {};\n        this.name = \"root\";\n\n        /**\n         * 클래스의 속성 정의 메소드 속성 확장후에 내부에 init 함수를 호출합니다.\n         * @method ax5.ui.root.setConfig\n         * @param {Object} config - 클래스 속성값\n         * @param {Boolean} [callInit=true] - init 함수 호출 여부\n         * @returns {ax5.ui.axUi}\n         * @example\n         * ```\n         * var myui = new ax5.ui.root();\n         * myui.setConfig({\n        * \tid:\"abcd\"\n        * });\n         * ```\n         */\n        this.setConfig = function (cfg, callInit) {\n            jQuery.extend(true, this.config, cfg);\n            if (typeof callInit == \"undefined\" || callInit === true) {\n                this.init();\n            }\n            return this;\n        };\n        this.init = function () {\n            console.log(this.config);\n        };\n\n        this.bindWindowResize = function (callBack) {\n            setTimeout(function () {\n                jQuery(window).resize(function () {\n                    if (this.bindWindowResize__) clearTimeout(this.bindWindowResize__);\n                    this.bindWindowResize__ = setTimeout(function () {\n                        callBack.call(this);\n                    }.bind(this), 10);\n                }.bind(this));\n            }.bind(this), 100);\n        };\n\n        this.stopEvent = function (e) {\n            if (e.preventDefault) e.preventDefault();\n            if (e.stopPropagation) e.stopPropagation();\n            e.cancelBubble = true;\n            return false;\n        };\n\n        this.toString = function () {\n            return this.name + '@' + this.version;\n        };\n\n        // instance init\n        this.main = function () {}.apply(this, arguments);\n    }\n\n    /**\n     * @method ax5.ui.addClass\n     * @param {Object} config\n     * @param {String} config.className - name of Class\n     * @param {String} [config.version=\"\"] - version of Class\n     * @param {Object} [config.classStore=ax5.ui] - 클래스가 저장될 경로\n     * @param {Function} [config.superClass=ax5.ui.root]\n     * @param {Function} cls - Class Function\n     */\n    function addClass(config, cls) {\n        if (!config || !config.className) throw 'invalid call';\n        var classStore = config.classStore ? config.classStore : ax5.ui;\n        if (!classStore) throw 'invalid classStore';\n\n        // make ui definition variable\n        ax5.def[config.className] = {\n            version: config.version\n        };\n\n        var factory = function factory(cls, arg) {\n            switch (arg.length) {\n                case 0:\n                    return new cls();\n                    break;\n                case 1:\n                    return new cls(arg[0]);\n                    break;\n                case 2:\n                    return new cls(arg[0], arg[1]);\n                    break;\n                case 3:\n                    return new cls(arg[0], arg[1], arg[2]);\n                    break;\n            }\n        };\n        var initInstance = function initInstance(name, version, instance) {\n            instance.name = name;\n            instance.version = version;\n            instance.instanceId = ax5.getGuid();\n            return instance;\n        };\n        var initPrototype = function initPrototype(cls) {\n            var superClass = config.superClass ? config.superClass : ax5.ui.root;\n            if (!ax5.util.isFunction(superClass)) throw 'invalid superClass';\n            superClass.call(this); // 부모호출\n            cls.prototype = new superClass(); // 상속\n        };\n        var wrapper = function wrapper() {\n            if (!this || !(this instanceof wrapper)) throw 'invalid call';\n            var instance = factory(cls, arguments);\n            return initInstance(config.className, config.version || \"\", instance);\n        };\n        initPrototype.call(this, cls);\n        classStore[config.className] = wrapper;\n    }\n\n    return {\n        root: axUi,\n        addClass: addClass\n    };\n}();\n\n/*!\n * mustache.js - Logic-less {{mustache}} templates with JavaScript\n * http://github.com/janl/mustache.js\n * https://github.com/thomasJang/mustache.js -- imporove some variables\n */\n\n(function defineMustache(global, factory) {\n\n    factory(global.mustache = {});\n})(window.ax5, function mustacheFactory(mustache) {\n\n    var objectToString = Object.prototype.toString;\n    var isArray = Array.isArray || function isArrayPolyfill(object) {\n        return objectToString.call(object) === '[object Array]';\n    };\n\n    function isFunction(object) {\n        return typeof object === 'function';\n    }\n\n    /**\n     * More correct typeof string handling array\n     * which normally returns typeof 'object'\n     */\n    function typeStr(obj) {\n        return isArray(obj) ? 'array' : typeof obj === 'undefined' ? 'undefined' : _typeof(obj);\n    }\n\n    function escapeRegExp(string) {\n        return string.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, '\\\\$&');\n    }\n\n    /**\n     * Null safe way of checking whether or not an object,\n     * including its prototype, has a given property\n     */\n    function hasProperty(obj, propName) {\n        return obj != null && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object' && propName in obj;\n    }\n\n    // Workaround for https://issues.apache.org/jira/browse/COUCHDB-577\n    // See https://github.com/janl/mustache.js/issues/189\n    var regExpTest = RegExp.prototype.test;\n\n    function testRegExp(re, string) {\n        return regExpTest.call(re, string);\n    }\n\n    var nonSpaceRe = /\\S/;\n\n    function isWhitespace(string) {\n        return !testRegExp(nonSpaceRe, string);\n    }\n\n    var entityMap = {\n        '&': '&amp;', '<': '&lt;', '>': '&gt;', '\"': '&quot;', \"'\": '&#39;', '/': '&#x2F;'\n    };\n\n    function escapeHtml(string) {\n        return String(string).replace(/[&<>\"'\\/]/g, function fromEntityMap(s) {\n            return entityMap[s];\n        });\n    }\n\n    var whiteRe = /\\s*/;\n    var spaceRe = /\\s+/;\n    var equalsRe = /\\s*=/;\n    var curlyRe = /\\s*\\}/;\n    var tagRe = /#|\\^|\\/|>|\\{|&|=|!/;\n\n    /**\n     * Breaks up the given `template` string into a tree of tokens. If the `tags`\n     * argument is given here it must be an array with two string values: the\n     * opening and closing tags used in the template (e.g. [ \"<%\", \"%>\" ]). Of\n     * course, the default is to use mustaches (i.e. mustache.tags).\n     *\n     * A token is an array with at least 4 elements. The first element is the\n     * mustache symbol that was used inside the tag, e.g. \"#\" or \"&\". If the tag\n     * did not contain a symbol (i.e. {{myValue}}) this element is \"name\". For\n     * all text that appears outside a symbol this element is \"text\".\n     *\n     * The second element of a token is its \"value\". For mustache tags this is\n     * whatever else was inside the tag besides the opening symbol. For text tokens\n     * this is the text itself.\n     *\n     * The third and fourth elements of the token are the start and end indices,\n     * respectively, of the token in the original template.\n     *\n     * Tokens that are the root node of a subtree contain two more elements: 1) an\n     * array of tokens in the subtree and 2) the index in the original template at\n     * which the closing tag for that section begins.\n     */\n    function parseTemplate(template, tags) {\n        if (!template) return [];\n\n        var sections = []; // Stack to hold section tokens\n        var tokens = []; // Buffer to hold the tokens\n        var spaces = []; // Indices of whitespace tokens on the current line\n        var hasTag = false; // Is there a {{tag}} on the current line?\n        var nonSpace = false; // Is there a non-space char on the current line?\n\n        // Strips all whitespace tokens array for the current line\n        // if there was a {{#tag}} on it and otherwise only space.\n        function stripSpace() {\n            if (hasTag && !nonSpace) {\n                while (spaces.length) {\n                    delete tokens[spaces.pop()];\n                }\n            } else {\n                spaces = [];\n            }\n\n            hasTag = false;\n            nonSpace = false;\n        }\n\n        var openingTagRe, closingTagRe, closingCurlyRe;\n\n        function compileTags(tagsToCompile) {\n            if (typeof tagsToCompile === 'string') tagsToCompile = tagsToCompile.split(spaceRe, 2);\n\n            if (!isArray(tagsToCompile) || tagsToCompile.length !== 2) throw new Error('Invalid tags: ' + tagsToCompile);\n\n            openingTagRe = new RegExp(escapeRegExp(tagsToCompile[0]) + '\\\\s*');\n            closingTagRe = new RegExp('\\\\s*' + escapeRegExp(tagsToCompile[1]));\n            closingCurlyRe = new RegExp('\\\\s*' + escapeRegExp('}' + tagsToCompile[1]));\n        }\n\n        compileTags(tags || mustache.tags);\n\n        var scanner = new Scanner(template);\n\n        var start, type, value, chr, token, openSection;\n        while (!scanner.eos()) {\n            start = scanner.pos;\n\n            // Match any text between tags.\n            value = scanner.scanUntil(openingTagRe);\n\n            if (value) {\n                for (var i = 0, valueLength = value.length; i < valueLength; ++i) {\n                    chr = value.charAt(i);\n\n                    if (isWhitespace(chr)) {\n                        spaces.push(tokens.length);\n                    } else {\n                        nonSpace = true;\n                    }\n\n                    tokens.push(['text', chr, start, start + 1]);\n                    start += 1;\n\n                    // Check for whitespace on the current line.\n                    if (chr === '\\n') stripSpace();\n                }\n            }\n\n            // Match the opening tag.\n            if (!scanner.scan(openingTagRe)) break;\n\n            hasTag = true;\n\n            // Get the tag type.\n            type = scanner.scan(tagRe) || 'name';\n            scanner.scan(whiteRe);\n\n            // Get the tag value.\n            if (type === '=') {\n                value = scanner.scanUntil(equalsRe);\n                scanner.scan(equalsRe);\n                scanner.scanUntil(closingTagRe);\n            } else if (type === '{') {\n                value = scanner.scanUntil(closingCurlyRe);\n                scanner.scan(curlyRe);\n                scanner.scanUntil(closingTagRe);\n                type = '&';\n            } else {\n                value = scanner.scanUntil(closingTagRe);\n            }\n\n            // Match the closing tag.\n            if (!scanner.scan(closingTagRe)) throw new Error('Unclosed tag at ' + scanner.pos);\n\n            token = [type, value, start, scanner.pos];\n            tokens.push(token);\n\n            if (type === '#' || type === '^') {\n                sections.push(token);\n            } else if (type === '/') {\n                // Check section nesting.\n                openSection = sections.pop();\n\n                if (!openSection) throw new Error('Unopened section \"' + value + '\" at ' + start);\n\n                if (openSection[1] !== value) throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + start);\n            } else if (type === 'name' || type === '{' || type === '&') {\n                nonSpace = true;\n            } else if (type === '=') {\n                // Set the tags for the next time around.\n                compileTags(value);\n            }\n        }\n\n        // Make sure there are no open sections when we're done.\n        openSection = sections.pop();\n\n        if (openSection) throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + scanner.pos);\n\n        return nestTokens(squashTokens(tokens));\n    }\n\n    /**\n     * Combines the values of consecutive text tokens in the given `tokens` array\n     * to a single token.\n     */\n    function squashTokens(tokens) {\n        var squashedTokens = [];\n\n        var token, lastToken;\n        for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n            token = tokens[i];\n\n            if (token) {\n                if (token[0] === 'text' && lastToken && lastToken[0] === 'text') {\n                    lastToken[1] += token[1];\n                    lastToken[3] = token[3];\n                } else {\n                    squashedTokens.push(token);\n                    lastToken = token;\n                }\n            }\n        }\n\n        return squashedTokens;\n    }\n\n    /**\n     * Forms the given array of `tokens` into a nested tree structure where\n     * tokens that represent a section have two additional items: 1) an array of\n     * all tokens that appear in that section and 2) the index in the original\n     * template that represents the end of that section.\n     */\n    function nestTokens(tokens) {\n        var nestedTokens = [];\n        var collector = nestedTokens;\n        var sections = [];\n\n        var token, section;\n        for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n            token = tokens[i];\n\n            switch (token[0]) {\n                case '#':\n                case '^':\n                    collector.push(token);\n                    sections.push(token);\n                    collector = token[4] = [];\n                    break;\n                case '/':\n                    section = sections.pop();\n                    section[5] = token[2];\n                    collector = sections.length > 0 ? sections[sections.length - 1][4] : nestedTokens;\n                    break;\n                default:\n                    collector.push(token);\n            }\n        }\n\n        return nestedTokens;\n    }\n\n    /**\n     * A simple string scanner that is used by the template parser to find\n     * tokens in template strings.\n     */\n    function Scanner(string) {\n        this.string = string;\n        this.tail = string;\n        this.pos = 0;\n    }\n\n    /**\n     * Returns `true` if the tail is empty (end of string).\n     */\n    Scanner.prototype.eos = function eos() {\n        return this.tail === '';\n    };\n\n    /**\n     * Tries to match the given regular expression at the current position.\n     * Returns the matched text if it can match, the empty string otherwise.\n     */\n    Scanner.prototype.scan = function scan(re) {\n        var match = this.tail.match(re);\n\n        if (!match || match.index !== 0) return '';\n\n        var string = match[0];\n\n        this.tail = this.tail.substring(string.length);\n        this.pos += string.length;\n\n        return string;\n    };\n\n    /**\n     * Skips all text until the given regular expression can be matched. Returns\n     * the skipped string, which is the entire tail if no match can be made.\n     */\n    Scanner.prototype.scanUntil = function scanUntil(re) {\n        var index = this.tail.search(re),\n            match;\n\n        switch (index) {\n            case -1:\n                match = this.tail;\n                this.tail = '';\n                break;\n            case 0:\n                match = '';\n                break;\n            default:\n                match = this.tail.substring(0, index);\n                this.tail = this.tail.substring(index);\n        }\n\n        this.pos += match.length;\n\n        return match;\n    };\n\n    /**\n     * Represents a rendering context by wrapping a view object and\n     * maintaining a reference to the parent context.\n     */\n    function Context(view, parentContext) {\n        this.view = view;\n        this.cache = {\n            '.': this.view,\n            '@each': function each() {\n                var returns = [];\n                for (var k in this) {\n                    returns.push({ '@key': k, '@value': this[k] });\n                }\n                return returns;\n            }\n        };\n        this.parent = parentContext;\n    }\n\n    /**\n     * Creates a new context using the given view with this context\n     * as the parent.\n     */\n    Context.prototype.push = function push(view) {\n        return new Context(view, this);\n    };\n\n    /**\n     * Returns the value of the given name in this context, traversing\n     * up the context hierarchy if the value is absent in this context's view.\n     */\n    Context.prototype.lookup = function lookup(name) {\n        var cache = this.cache;\n\n        var value;\n        if (cache.hasOwnProperty(name)) {\n            value = cache[name];\n        } else {\n            var context = this,\n                names,\n                index,\n                lookupHit = false;\n\n            while (context) {\n                if (name.indexOf('.') > 0) {\n                    value = context.view;\n                    names = name.split('.');\n                    index = 0;\n\n                    /**\n                     * Using the dot notion path in `name`, we descend through the\n                     * nested objects.\n                     *\n                     * To be certain that the lookup has been successful, we have to\n                     * check if the last object in the path actually has the property\n                     * we are looking for. We store the result in `lookupHit`.\n                     *\n                     * This is specially necessary for when the value has been set to\n                     * `undefined` and we want to avoid looking up parent contexts.\n                     **/\n                    while (value != null && index < names.length) {\n                        if (index === names.length - 1) lookupHit = hasProperty(value, names[index]);\n\n                        value = value[names[index++]];\n                    }\n                } else {\n                    value = context.view[name];\n                    lookupHit = hasProperty(context.view, name);\n                }\n\n                if (lookupHit) break;\n\n                context = context.parent;\n            }\n\n            cache[name] = value;\n        }\n\n        if (isFunction(value)) value = value.call(this.view);\n\n        return value;\n    };\n\n    /**\n     * A Writer knows how to take a stream of tokens and render them to a\n     * string, given a context. It also maintains a cache of templates to\n     * avoid the need to parse the same template twice.\n     */\n    function Writer() {\n        this.cache = {};\n    }\n\n    /**\n     * Clears all cached templates in this writer.\n     */\n    Writer.prototype.clearCache = function clearCache() {\n        this.cache = {};\n    };\n\n    /**\n     * Parses and caches the given `template` and returns the array of tokens\n     * that is generated from the parse.\n     */\n    Writer.prototype.parse = function parse(template, tags) {\n        var cache = this.cache;\n        var tokens = cache[template];\n\n        if (tokens == null) tokens = cache[template] = parseTemplate(template, tags);\n\n        return tokens;\n    };\n\n    /**\n     * High-level method that is used to render the given `template` with\n     * the given `view`.\n     *\n     * The optional `partials` argument may be an object that contains the\n     * names and templates of partials that are used in the template. It may\n     * also be a function that is used to load partial templates on the fly\n     * that takes a single argument: the name of the partial.\n     */\n    Writer.prototype.render = function render(template, view, partials) {\n        var tokens = this.parse(template);\n        var context = view instanceof Context ? view : new Context(view);\n        return this.renderTokens(tokens, context, partials, template);\n    };\n\n    /**\n     * Low-level method that renders the given array of `tokens` using\n     * the given `context` and `partials`.\n     *\n     * Note: The `originalTemplate` is only ever used to extract the portion\n     * of the original template that was contained in a higher-order section.\n     * If the template doesn't use higher-order sections, this argument may\n     * be omitted.\n     */\n    Writer.prototype.renderTokens = function renderTokens(tokens, context, partials, originalTemplate) {\n        var buffer = '';\n        var token, symbol, value;\n        for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n            value = undefined;\n            token = tokens[i];\n            symbol = token[0];\n\n            if (symbol === '#') value = this.renderSection(token, context, partials, originalTemplate);else if (symbol === '^') value = this.renderInverted(token, context, partials, originalTemplate);else if (symbol === '>') value = this.renderPartial(token, context, partials, originalTemplate);else if (symbol === '&') value = this.unescapedValue(token, context);else if (symbol === 'name') value = this.escapedValue(token, context);else if (symbol === 'text') value = this.rawValue(token);\n\n            if (value !== undefined) buffer += value;\n        }\n\n        return buffer;\n    };\n\n    Writer.prototype.renderSection = function renderSection(token, context, partials, originalTemplate) {\n        var self = this;\n        var buffer = '';\n\n        var value = context.lookup(token[1]);\n\n        // This function is used to render an arbitrary template\n        // in the current context by higher-order sections.\n        function subRender(template) {\n            return self.render(template, context, partials);\n        }\n\n        if (!value) return;\n\n        if (isArray(value)) {\n            for (var j = 0, valueLength = value.length; j < valueLength; ++j) {\n                if (value[j]) {\n                    value[j]['@i'] = j;\n                    value[j]['@first'] = j === 0;\n                    buffer += this.renderTokens(token[4], context.push(value[j]), partials, originalTemplate);\n                }\n            }\n        } else if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' || typeof value === 'string' || typeof value === 'number') {\n            buffer += this.renderTokens(token[4], context.push(value), partials, originalTemplate);\n        } else if (isFunction(value)) {\n            if (typeof originalTemplate !== 'string') throw new Error('Cannot use higher-order sections without the original template');\n\n            // Extract the portion of the original template that the section contains.\n            value = value.call(context.view, originalTemplate.slice(token[3], token[5]), subRender);\n\n            if (value != null) buffer += value;\n        } else {\n            buffer += this.renderTokens(token[4], context, partials, originalTemplate);\n        }\n        return buffer;\n    };\n\n    Writer.prototype.renderInverted = function renderInverted(token, context, partials, originalTemplate) {\n        var value = context.lookup(token[1]);\n\n        // Use JavaScript's definition of falsy. Include empty arrays.\n        // See https://github.com/janl/mustache.js/issues/186\n        if (!value || isArray(value) && value.length === 0) return this.renderTokens(token[4], context, partials, originalTemplate);\n    };\n\n    Writer.prototype.renderPartial = function renderPartial(token, context, partials) {\n        if (!partials) return;\n\n        var value = isFunction(partials) ? partials(token[1]) : partials[token[1]];\n        if (value != null) return this.renderTokens(this.parse(value), context, partials, value);\n    };\n\n    Writer.prototype.unescapedValue = function unescapedValue(token, context) {\n        var value = context.lookup(token[1]);\n        if (value != null) return value;\n    };\n\n    Writer.prototype.escapedValue = function escapedValue(token, context) {\n        var value = context.lookup(token[1]);\n        if (value != null) return mustache.escape(value);\n    };\n\n    Writer.prototype.rawValue = function rawValue(token) {\n        return token[1];\n    };\n\n    mustache.name = 'mustache.js';\n    mustache.version = '2.1.3';\n    mustache.tags = ['{{', '}}'];\n\n    // All high-level mustache.* functions use this writer.\n    var defaultWriter = new Writer();\n\n    /**\n     * Clears all cached templates in the default writer.\n     */\n    mustache.clearCache = function clearCache() {\n        return defaultWriter.clearCache();\n    };\n\n    /**\n     * Parses and caches the given template in the default writer and returns the\n     * array of tokens it contains. Doing this ahead of time avoids the need to\n     * parse templates on the fly as they are rendered.\n     */\n    mustache.parse = function parse(template, tags) {\n        return defaultWriter.parse(template, tags);\n    };\n\n    /**\n     * Renders the `template` with the given `view` and `partials` using the\n     * default writer.\n     */\n    mustache.render = function render(template, view, partials) {\n        if (typeof template !== 'string') {\n            throw new TypeError('Invalid template! Template should be a \"string\" ' + 'but \"' + typeStr(template) + '\" was given as the first ' + 'argument for mustache#render(template, view, partials)');\n        }\n\n        return defaultWriter.render(template, view, partials);\n    };\n\n    // This is here for backwards compatibility with 0.4.x.,\n    /*eslint-disable */ // eslint wants camel cased function name\n    mustache.to_html = function to_html(template, view, partials, send) {\n        /*eslint-enable*/\n\n        var result = mustache.render(template, view, partials);\n\n        if (isFunction(send)) {\n            send(result);\n        } else {\n            return result;\n        }\n    };\n\n    // Export the escaping function so that the user may override it.\n    // See https://github.com/janl/mustache.js/issues/244\n    mustache.escape = escapeHtml;\n\n    // Export these mainly for testing, but also for advanced usage.\n    mustache.Scanner = Scanner;\n    mustache.Context = Context;\n    mustache.Writer = Writer;\n});","(function () {\n    'use strict';\n\n    // root of function\n    var root = this, win = this;\n    var doc = (win) ? win.document : null, docElem = (win) ? win.document.documentElement : null;\n    var reIsJson = /^([\"'](\\\\.|[^\"\\\\\\n\\r])*?[\"']|[,:{}\\[\\]0-9.\\-+Eaeflnr-u \\n\\r\\t])+?$/,\n        reMs = /^-ms-/,\n        reSnakeCase = /[\\-_]([\\da-z])/gi,\n        reCamelCase = /([A-Z])/g,\n        reDot = /\\./,\n        reInt = /[-|+]?[\\D]/gi,\n        reNotNum = /\\D/gi,\n        reMoneySplit = new RegExp('([0-9])([0-9][0-9][0-9][,.])'),\n        reAmp = /&/g,\n        reEq = /=/,\n        reClassNameSplit = /[ ]+/g,\n\n        /** @namespace {Object} ax5 */\n        ax5 = {}, info, U, dom;\n\n    /**\n     * guid\n     * @member {Number} ax5.guid\n     */\n    ax5.guid = 1;\n    /**\n     * ax5.guid를 구하고 증가시킵니다.\n     * @method ax5.getGuid\n     * @returns {Number} guid\n     */\n    ax5.getGuid = function () {\n        return ax5.guid++;\n    };\n\n    /**\n     * 상수모음\n     * @namespace ax5.info\n     */\n    ax5.info = info = (function () {\n        /**\n         * ax5 version\n         * @member {String} ax5.info.version\n         */\n        var version = \"${VERSION}\";\n\n        /**\n         * ax5 library path\n         * @member {String} ax5.info.baseUrl\n         */\n        var baseUrl = \"\";\n\n        /**\n         * ax5 에러 출력메세지 사용자 재 정의\n         * @member {Object} ax5.info.onerror\n         * @examples\n         * ```\n         * ax5.info.onerror = function(){\n\t\t *  console.log(arguments);\n\t\t * }\n         * ```\n         */\n        var onerror = function () {\n            console.error(U.toArray(arguments).join(\":\"));\n        };\n\n        /**\n         * event keyCodes\n         * @member {Object} ax5.info.eventKeys\n         * @example\n         * ```\n         * {\n\t\t * \tBACKSPACE: 8, TAB: 9,\n\t\t * \tRETURN: 13, ESC: 27, LEFT: 37, UP: 38, RIGHT: 39, DOWN: 40, DELETE: 46,\n\t\t * \tHOME: 36, END: 35, PAGEUP: 33, PAGEDOWN: 34, INSERT: 45, SPACE: 32\n\t\t * }\n         * ```\n         */\n        var eventKeys = {\n            BACKSPACE: 8, TAB: 9,\n            RETURN: 13, ESC: 27, LEFT: 37, UP: 38, RIGHT: 39, DOWN: 40, DELETE: 46,\n            HOME: 36, END: 35, PAGEUP: 33, PAGEDOWN: 34, INSERT: 45, SPACE: 32\n        };\n\n        /**\n         * week names\n         * @member {Object[]} weekNames\n         * @member {string} weekNames[].label\n         *\n         * @example\n         * ```\n         * [\n         *  {label: \"SUN\"},{label: \"MON\"},{label: \"TUE\"},{label: \"WED\"},{label: \"THU\"},{label: \"FRI\"},{label: \"SAT\"}\n         * ]\n         * console.log( weekNames[0] );\n         * console.log( ax5.info.weekNames[(new Date()).getDay()].label )\n         * ```\n         */\n        var weekNames = [\n            {label: \"SUN\"},\n            {label: \"MON\"},\n            {label: \"TUE\"},\n            {label: \"WED\"},\n            {label: \"THU\"},\n            {label: \"FRI\"},\n            {label: \"SAT\"}\n        ];\n\n        /**\n         * 사용자 브라우저 식별용 오브젝트\n         * @member {Object} ax5.info.browser\n         * @example\n         * ```\n         * console.log( ax5.info.browser );\n         * //Object {name: \"chrome\", version: \"39.0.2171.71\", mobile: false}\n         * ```\n         */\n        var browser = (function (ua, mobile, browserName, match, browser, browserVersion) {\n            if (!win || !win.navigator) return {};\n\n            ua = navigator.userAgent.toLowerCase(), mobile = (ua.search(/mobile/g) != -1), browserName, match, browser, browserVersion;\n\n            if (ua.search(/iphone/g) != -1) {\n                return {name: \"iphone\", version: 0, mobile: true}\n            }\n            else if (ua.search(/ipad/g) != -1) {\n                return {name: \"ipad\", version: 0, mobile: true}\n            }\n            else if (ua.search(/android/g) != -1) {\n                match = /(android)[ \\/]([\\w.]+)/.exec(ua) || [];\n                browserVersion = (match[2] || \"0\");\n                return {name: \"android\", version: browserVersion, mobile: mobile}\n            }\n            else {\n                browserName = \"\";\n                match = /(opr)[ \\/]([\\w.]+)/.exec(ua) || /(chrome)[ \\/]([\\w.]+)/.exec(ua) || /(webkit)[ \\/]([\\w.]+)/.exec(ua) || /(msie) ([\\w.]+)/.exec(ua) || ua.indexOf(\"compatible\") < 0 && /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec(ua) || [];\n                browser = (match[1] || \"\");\n                browserVersion = (match[2] || \"0\");\n\n                if (browser == \"msie\") browser = \"ie\";\n                return {\n                    name: browser,\n                    version: browserVersion,\n                    mobile: mobile\n                }\n            }\n            ua = null, mobile = null, browserName = null, match = null, browser = null, browserVersion = null;\n        })();\n\n        /**\n         * 브라우저 여부\n         * @member {Boolean} ax5.info.isBrowser\n         */\n        var isBrowser = !!(typeof window !== 'undefined' && typeof navigator !== 'undefined' && win.document);\n\n        /**\n         * 브라우저에 따른 마우스 휠 이벤트이름\n         * @member {Object} ax5.info.wheelEnm\n         */\n        var wheelEnm = (win && (/Firefox/i.test(navigator.userAgent)) ? \"DOMMouseScroll\" : \"mousewheel\");\n\n        /**\n         * 첫번째 자리수 동사 - (필요한것이 없을때 : 4, 실행오류 : 5)\n         * 두번째 자리수 목적어 - 문자열 0, 숫자 1, 배열 2, 오브젝트 3, 함수 4, DOM 5, 파일 6, 기타 7\n         * 세번째 자리수 옵션\n         * @member {Object} ax5.info.errorMsg\n         */\n        var errorMsg = {};\n\n        /**\n         * 현재 페이지의 Url 정보를 리턴합니다.\n         * @method ax5.info.urlUtil\n         * @returns {Object}\n         * @example\n         * ```\n         * console.log( ax5.util.toJson( ax5.info.urlUtil() ) );\n         * {\n\t\t *\t\"baseUrl\": \"http://ax5:2018\",\n\t\t *\t\"href\": \"http://ax5:2018/samples/index.html?a=1&b=1#abc\",\n\t\t *\t\"param\": \"a=1&b=1\",\n\t\t *\t\"referrer\": \"\",\n\t\t *\t\"pathname\": \"/samples/index.html\",\n\t\t *\t\"hostname\": \"ax5\",\n\t\t *\t\"port\": \"2018\",\n\t\t *\t\"url\": \"http://ax5:2018/samples/index.html\",\n\t\t *\t\"hashdata\": \"abc\"\n\t\t * }\n         * ```\n         */\n        function urlUtil(url, urls) {\n            url = {\n                href: win.location.href,\n                param: win.location.search,\n                referrer: doc.referrer,\n                pathname: win.location.pathname,\n                hostname: win.location.hostname,\n                port: win.location.port\n            }, urls = url.href.split(/[\\?#]/);\n            url.param = url.param.replace(\"?\", \"\");\n            url.url = urls[0];\n            if (url.href.search(\"#\") > -1) {\n                url.hashdata = U.last(urls);\n            }\n            urls = null;\n            url.baseUrl = U.left(url.href, \"?\").replace(url.pathname, \"\");\n            return url;\n        }\n\n        /**\n         * ax5-error-msg.js 에 정의된 ax5 error를 반환합니다.\n         * @method ax5.info.getError\n         * @returns {Object}\n         * @example\n         * ```\n         * console.log( ax5.info.getError(\"single-uploader\", \"460\", \"upload\") );\n         *\n         * if(!this.selectedFile){\n\t\t *      if (cfg.onEvent) {\n\t\t *      \tvar that = {\n\t\t *      \t\taction: \"error\",\n\t\t *      \t\terror: ax5.info.getError(\"single-uploader\", \"460\", \"upload\")\n\t\t *      \t};\n\t\t *      \tcfg.onEvent.call(that, that);\n\t\t *      }\n\t\t *      return this;\n\t\t * }\n         * ```\n         */\n        function getError(className, errorCode, methodName) {\n            if (info.errorMsg && info.errorMsg[className]) {\n                return {\n                    className: className,\n                    errorCode: errorCode,\n                    methodName: methodName,\n                    msg: info.errorMsg[className][errorCode]\n                };\n            }\n            else {\n                return {className: className, errorCode: errorCode, methodName: methodName};\n            }\n        }\n\n        /**\n         * 브라우져의 터치 기능 유무를 확인합니다.\n         * @method ax5.info.supportTouch\n         * @returns {boolean}\n         * @example\n         * ```\n         * var chkFlag = ax5.info.supportTouch;\n         */\n        let supportTouch = (win) ? (('ontouchstart' in win) || (navigator.maxTouchPoints > 0) || (navigator.msMaxTouchPoints > 0)) : false;\n\n        let supportFileApi = (win) ? ( win.FileReader && win.File && win.FileList && win.Blob ) : false;\n\n        return {\n            errorMsg: errorMsg,\n            version: version,\n            baseUrl: baseUrl,\n            onerror: onerror,\n            eventKeys: eventKeys,\n            weekNames: weekNames,\n            browser: browser,\n            isBrowser: isBrowser,\n            supportTouch: supportTouch,\n            supportFileApi: supportFileApi,\n            wheelEnm: wheelEnm,\n            urlUtil: urlUtil,\n            getError: getError\n        };\n    })();\n\n    /**\n     * Refer to this by {@link ax5}.\n     * @namespace ax5.util\n     */\n    ax5['util'] = U = (function () {\n        var _toString = Object.prototype.toString;\n\n        /**\n         * Object나 Array의 아이템으로 사용자 함수를 호출합니다.\n         * @method ax5.util.each\n         * @param {Object|Array} O\n         * @param {Function} _fn\n         * @example\n         * ```js\n         * var axf = ax5.util;\n         * axf.each([0,1,2], function(){\n\t\t * \t// with this\n\t\t * });\n         * axf.each({a:1, b:2}, function(){\n\t\t * \t// with this\n\t\t * });\n         * ```\n         */\n        function each(O, _fn) {\n            if (isNothing(O)) return [];\n            var key, i = 0, l = O.length,\n                isObj = l === undefined || typeof O === \"function\";\n            if (isObj) {\n                for (key in O) {\n                    if (typeof O[key] != \"undefined\")\n                        if (_fn.call(O[key], key, O[key]) === false) break;\n                }\n            }\n            else {\n                for (; i < l;) {\n                    if (typeof O[i] != \"undefined\")\n                        if (_fn.call(O[i], i, O[i++]) === false) break;\n                }\n            }\n            return O;\n        }\n\n        // In addition to using the http://underscorejs.org : map, reduce, reduceRight, find\n        /**\n         * 원본 아이템들을 이용하여 사용자 함수의 리턴값으로 이루어진 새로운 배열을 만듭니다.\n         * @method ax5.util.map\n         * @param {Object|Array} O\n         * @param {Function} _fn\n         * @returns {Array}\n         * @example\n         * ```js\n         * var myArray = [0,1,2,3,4];\n         * var myObject = {a:1, b:\"2\", c:{axj:\"what\", arrs:[0,2,\"3\"]},\n\t\t *    fn: function(abcdd){\n\t\t *        return abcdd;\n\t\t *    }\n\t\t * };\n         *\n         * var _arr = ax5.util.map( myArray,  function(index, I){\n\t\t *    return index+1;\n\t\t * });\n         * console.log(_arr);\n         * // [1, 2, 3, 4, 5]\n         *\n         * var _arr = ax5.util.map( myObject,  function(k, v){\n\t\t *    return v * 2;\n\t\t * });\n         * console.log(_arr);\n         * // [2, 4, NaN, NaN]\n         * ```\n         */\n        function map(O, _fn) {\n            if (isNothing(O)) return [];\n            var key, i = 0, l = O.length, results = [], fnResult;\n            if (isObject(O)) {\n                for (key in O) {\n                    if (typeof O[key] != \"undefined\") {\n                        fnResult = undefined;\n                        if ((fnResult = _fn.call(O[key], key, O[key])) === false) break;\n                        else results.push(fnResult);\n                    }\n                }\n            }\n            else {\n                for (; i < l;) {\n                    if (typeof O[i] != \"undefined\") {\n                        fnResult = undefined;\n                        if ((fnResult = _fn.call(O[i], i, O[i++])) === false) break;\n                        else results.push(fnResult);\n                    }\n                }\n            }\n            return results;\n        }\n\n        /**\n         * 원본 아이템들을 이용하여 사용자 함수의 리턴값이 참인 아이템의 위치나 키값을 반환합니다.\n         * @method ax5.util.search\n         * @param {Object|Array} O\n         * @param {Function|String|Number} _fn - 함수 또는 값\n         * @returns {Number|String}\n         * @example\n         * ```js\n         * var myArray = [0,1,2,3,4,5,6];\n         * var myObject = {a:\"123\",\"b\":\"123\",c:123};\n         *\n         * ax5.util.search(myArray,  function(){\n\t\t *    return this > 3;\n\t\t * });\n         * // 4\n         * ax5.util.search(myObject,  function(k, v){\n\t\t *    return v === 123;\n\t\t * });\n         * // \"c\"\n         * ax5.util.search([1,2,3,4], 3);\n         * // 2\n         * ax5.util.search([1,2], 4);\n         * // -1\n         * ax5.util.search([\"name\",\"value\"], \"value\");\n         * // 1\n         * ax5.util.search([\"name\",\"value\"], \"values\");\n         * // -1\n         * ax5.util.search({k1:\"name\",k2:\"value\"}, \"value2\");\n         * // -1\n         * ax5.util.search({k1:\"name\",k2:\"value\"}, \"value\");\n         * // \"k2\"\n         * ```\n         */\n        function search(O, _fn) {\n            if (isNothing(O)) return -1;\n            var key, i = 0, l = O.length;\n            if (isObject(O)) {\n                for (key in O) {\n                    if (typeof O[key] != \"undefined\" && isFunction(_fn) && _fn.call(O[key], key, O[key])) {\n                        return key;\n                        break;\n                    }\n                    else if (O[key] == _fn) {\n                        return key;\n                        break;\n                    }\n                }\n            }\n            else {\n                for (; i < l;) {\n                    if (typeof O[i] != \"undefined\" && isFunction(_fn) && _fn.call(O[i], i, O[i])) {\n                        return i;\n                        break;\n                    }\n                    else if (O[i] == _fn) {\n                        return i;\n                        break;\n                    }\n                    i++;\n                }\n            }\n            return -1;\n        }\n\n        /**\n         * @method ax5.util.sum\n         * @param {Array|Object} O\n         * @param {Number} [defaultValue]\n         * @param {Function} _fn\n         * @returns {Number}\n         * @example\n         * ```js\n         * var arr = [\n         *  {name: \"122\", value: 9},\n         *  {name: \"122\", value: 10},\n         *  {name: \"123\", value: 11}\n         * ];\n         *\n         * var rs = ax5.util.sum(arr, function () {\n         *  if(this.name == \"122\") {\n         *      return this.value;\n         *  }\n         * });\n         * console.log(rs); // 19\n         *\n         * console.log(ax5.util.sum(arr, 10, function () {\n         *   return this.value;\n         * }));\n         * // 40\n         * ```\n         */\n        function sum(O, defaultValue, _fn) {\n            var i, l, tokenValue;\n            if (isFunction(defaultValue) && typeof _fn === \"undefined\") {\n                _fn = defaultValue;\n                defaultValue = 0;\n            }\n            if (typeof defaultValue === \"undefined\") defaultValue = 0;\n\n            if (isArray(O)) {\n                i = 0;\n                l = O.length;\n                for (; i < l; i++) {\n                    if (typeof O[i] !== \"undefined\") {\n                        if (( tokenValue = _fn.call(O[i], O[i]) ) === false) break;\n                        else if (typeof tokenValue !== \"undefined\") defaultValue += tokenValue;\n                    }\n                }\n                return defaultValue;\n            }\n            else if (isObject(O)) {\n                for (i in O) {\n                    if (typeof O[i] != \"undefined\") {\n                        if (( tokenValue = _fn.call(O[i], O[i]) ) === false) break;\n                        else if (typeof tokenValue !== \"undefined\") defaultValue += tokenValue;\n                    }\n                }\n                return defaultValue;\n            }\n            else {\n                console.error(\"argument error : ax5.util.sum - use Array or Object\");\n                return defaultValue;\n            }\n        }\n\n\n        /**\n         * @method ax5.util.avg\n         * @param {Array|Object} O\n         * @param {Number} [defaultValue]\n         * @param {Function} _fn\n         * @returns {Number}\n         * @example\n         * ```js\n         * var arr = [\n         *  {name: \"122\", value: 9},\n         *  {name: \"122\", value: 10},\n         *  {name: \"123\", value: 11}\n         * ];\n         *\n         * var rs = ax5.util.avg(arr, function () {\n         *      return this.value;\n         * });\n         *\n         * console.log(rs); // 10\n         * ```\n         */\n        function avg(O, defaultValue, _fn) {\n            var i, l, tokenValue;\n            if (isFunction(defaultValue) && typeof _fn === \"undefined\") {\n                _fn = defaultValue;\n                defaultValue = 0;\n            }\n            if (typeof defaultValue === \"undefined\") defaultValue = 0;\n\n            if (isArray(O)) {\n                i = 0;\n                l = O.length;\n                for (; i < l; i++) {\n                    if (typeof O[i] !== \"undefined\") {\n                        if (( tokenValue = _fn.call(O[i], O[i]) ) === false) break;\n                        else if (typeof tokenValue !== \"undefined\") defaultValue += tokenValue;\n                    }\n                }\n                return defaultValue / l;\n            }\n            else if (isObject(O)) {\n                for (i in O) {\n                    if (typeof O[i] != \"undefined\") {\n                        if (( tokenValue = _fn.call(O[i], O[i]) ) === false) break;\n                        else if (typeof tokenValue !== \"undefined\") defaultValue += tokenValue;\n                    }\n                }\n                return defaultValue / l;\n            }\n            else {\n                console.error(\"argument error : ax5.util.sum - use Array or Object\");\n                return defaultValue;\n            }\n        }\n\n        /**\n         * 배열의 왼쪽에서 오른쪽으로 연산을 진행하는데 수행한 결과가 왼쪽 값으로 반영되어 최종 왼쪽 값을 반환합니다.\n         * @method ax5.util.reduce\n         * @param {Array|Object} O\n         * @param {Function} _fn\n         * @returns {Alltypes}\n         * @example\n         * ```js\n         * var aarray = [5,4,3,2,1];\n         * result = ax5.util.reduce( aarray, function(p, n){\n\t\t *   return p * n;\n\t\t * });\n         * console.log(result, aarray);\n         * // 120 [5, 4, 3, 2, 1]\n         *\n         * ax5.util.reduce({a:1, b:2}, function(p, n){\n\t\t *    return parseInt(p|0) + parseInt(n);\n\t\t * });\n         * // 3\n         * ```\n         */\n        function reduce(O, _fn) {\n            var i, l, tokenItem;\n            if (isArray(O)) {\n                i = 0, l = O.length, tokenItem = O[i];\n                for (; i < l - 1;) {\n                    if (typeof O[i] != \"undefined\") {\n                        if (( tokenItem = _fn.call(root, tokenItem, O[++i]) ) === false) break;\n                    }\n                }\n                return tokenItem;\n            }\n            else if (isObject(O)) {\n                for (i in O) {\n                    if (typeof O[i] != \"undefined\") {\n                        if (( tokenItem = _fn.call(root, tokenItem, O[i]) ) === false) break;\n                    }\n                }\n                return tokenItem;\n            }\n            else {\n                console.error(\"argument error : ax5.util.reduce - use Array or Object\");\n                return null;\n            }\n        }\n\n        /**\n         * 배열의 오른쪽에서 왼쪽으로 연산을 진행하는데 수행한 결과가 오른쪽 값으로 반영되어 최종 오른쪽 값을 반환합니다.\n         * @method ax5.util.reduceRight\n         * @param {Array} O\n         * @param {Function} _fn\n         * @returns {Alltypes}\n         * @example\n         * ```js\n         * var aarray = [5,4,3,2,1];\n         * result = ax5.util.reduceRight( aarray, function(p, n){\n\t\t *    console.log( n );\n\t\t *    return p * n;\n\t\t * });\n         * console.log(result, aarray);\n         * 120 [5, 4, 3, 2, 1]\n         * ```\n         */\n        function reduceRight(O, _fn) {\n            var i = O.length - 1, tokenItem = O[i];\n            for (; i > 0;) {\n                if (typeof O[i] != \"undefined\") {\n                    if (( tokenItem = _fn.call(root, tokenItem, O[--i]) ) === false) break;\n                }\n            }\n            return tokenItem;\n        }\n\n        /**\n         * 배열또는 오브젝트의 각 아이템을 인자로 하는 사용자 함수의 결과가 참인 아이템들의 배열을 반환합니다.\n         * @method ax5.util.filter\n         * @param {Object|Array} O\n         * @param {Function} _fn\n         * @returns {Array}\n         * @example\n         * ```js\n         * var aarray = [5,4,3,2,1];\n         * result = ax5.util.filter( aarray, function(){\n\t\t *    return this % 2;\n\t\t * });\n         * console.log(result);\n         * // [5, 3, 1]\n         *\n         * var filObject = {a:1, s:\"string\", oa:{pickup:true, name:\"AXISJ\"}, os:{pickup:true, name:\"AX5\"}};\n         * result = ax5.util.filter( filObject, function(){\n\t\t * \treturn this.pickup;\n\t\t * });\n         * console.log( ax5.util.toJson(result) );\n         * // [{\"pickup\": , \"name\": \"AXISJ\"}, {\"pickup\": , \"name\": \"AX5\"}]\n         * ```\n         */\n        function filter(O, _fn) {\n            if (isNothing(O)) return [];\n            var k, i = 0, l = O.length, results = [], fnResult;\n            if (isObject(O)) {\n                for (k in O) {\n                    if (typeof O[k] != \"undefined\") {\n                        if (fnResult = _fn.call(O[k], k, O[k])) results.push(O[k]);\n                    }\n                }\n            }\n            else {\n                for (; i < l;) {\n                    if (typeof O[i] != \"undefined\") {\n                        if (fnResult = _fn.call(O[i], i, O[i])) results.push(O[i]);\n                        i++;\n                    }\n                }\n            }\n            return results;\n        }\n\n        /**\n         * Object를 JSONString 으로 반환합니다.\n         * @method ax5.util.toJson\n         * @param {Object|Array} O\n         * @returns {String} JSON\n         * @example\n         * ```js\n         * var ax = ax5.util;\n         * var myObject = {\n\t\t *    a:1, b:\"2\", c:{axj:\"what\", arrs:[0,2,\"3\"]},\n\t\t *    fn: function(abcdd){\n\t\t *        return abcdd;\n\t\t *    }\n\t\t * };\n         * console.log( ax.toJson(myObject) );\n         * ```\n         */\n        function toJson(O) {\n            var jsonString = \"\";\n            if (ax5.util.isArray(O)) {\n                var i = 0, l = O.length;\n                jsonString += \"[\";\n                for (; i < l; i++) {\n                    if (i > 0) jsonString += \",\";\n                    jsonString += toJson(O[i]);\n                }\n                jsonString += \"]\";\n            }\n            else if (ax5.util.isObject(O)) {\n                jsonString += \"{\";\n                var jsonObjectBody = [];\n                each(O, function (key, value) {\n                    jsonObjectBody.push('\"' + key + '\": ' + toJson(value));\n                });\n                jsonString += jsonObjectBody.join(\", \");\n                jsonString += \"}\";\n            }\n            else if (ax5.util.isString(O)) {\n                jsonString = '\"' + O + '\"';\n            }\n            else if (ax5.util.isNumber(O)) {\n                jsonString = O;\n            }\n            else if (ax5.util.isUndefined(O)) {\n                jsonString = \"undefined\";\n            }\n            else if (ax5.util.isFunction(O)) {\n                jsonString = '\"{Function}\"';\n            }\n            else {\n                jsonString = O;\n            }\n            return jsonString;\n        }\n\n        /**\n         * 관용의 JSON Parser\n         * @method ax5.util.parseJson\n         * @param {String} JSONString\n         * @param {Boolean} [force] - 강제 적용 여부 (json 문자열 검사를 무시하고 오브젝트 변환을 시도합니다.)\n         * @returns {Object}\n         * @example\n         * ```\n         * console.log(ax5.util.parseJson('{\"a\":1}'));\n         * // Object {a: 1}\n         * console.log(ax5.util.parseJson(\"{'a':1, 'b':'b'}\"));\n         * // Object {a: 1, b: \"b\"}\n         * console.log(ax5.util.parseJson(\"{'a':1, 'b':function(){return 1;}}\", true));\n         * // Object {a: 1, b: function}\n         * console.log(ax5.util.parseJson(\"{a:1}\"));\n         * // Object {a: 1}\n         * console.log(ax5.util.parseJson(\"[1,2,3]\"));\n         * // [1, 2, 3]\n         * console.log(ax5.util.parseJson(\"['1','2','3']\"));\n         * // [\"1\", \"2\", \"3\"]\n         * console.log(ax5.util.parseJson(\"[{'a':'99'},'2','3']\"));\n         * // [Object, \"2\", \"3\"]\n         * ```\n         */\n        function parseJson(str, force) {\n            if (force || (reIsJson).test(str)) {\n                try {\n                    return (new Function('', 'return ' + str))();\n                } catch (e) {\n                    return {error: 500, msg: 'syntax error'};\n                }\n            }\n            else {\n                return {error: 500, msg: 'syntax error'};\n            }\n        }\n\n        /**\n         * 인자의 타입을 반환합니다.\n         * @method ax5.util.getType\n         * @param {Object|Array|String|Number|Element|Etc} O\n         * @returns {String} window|element|object|array|function|string|number|undefined|nodelist\n         * @example\n         * ```js\n         * var axf = ax5.util;\n         * var a = 11;\n         * var b = \"11\";\n         * console.log( axf.getType(a) );\n         * console.log( axf.getType(b) );\n         * ```\n         */\n        function getType(O) {\n            var typeName;\n            if (O != null && O == O.window) {\n                typeName = \"window\";\n            }\n            else if (!!(O && O.nodeType == 1)) {\n                typeName = \"element\";\n            }\n            else if (!!(O && O.nodeType == 11)) {\n                typeName = \"fragment\";\n            }\n            else if (O === null) {\n                typeName = \"null\";\n            }\n            else if (typeof O === \"undefined\") {\n                typeName = \"undefined\";\n            }\n            else if (_toString.call(O) == \"[object Object]\") {\n                typeName = \"object\";\n            }\n            else if (_toString.call(O) == \"[object Array]\") {\n                typeName = \"array\";\n            }\n            else if (_toString.call(O) == \"[object String]\") {\n                typeName = \"string\";\n            }\n            else if (_toString.call(O) == \"[object Number]\") {\n                typeName = \"number\";\n            }\n            else if (_toString.call(O) == \"[object NodeList]\") {\n                typeName = \"nodelist\";\n            }\n            else if (typeof O === \"function\") {\n                typeName = \"function\";\n            }\n            return typeName;\n        }\n\n        /**\n         * 오브젝트가 window 인지 판단합니다.\n         * @method ax5.util.isWindow\n         * @param {Object} O\n         * @returns {Boolean}\n         */\n        function isWindow(O) {\n            return O != null && O == O.window;\n        }\n\n        /**\n         * 오브젝트가 HTML 엘리먼트여부인지 판단합니다.\n         * @method ax5.util.isElement\n         * @param {Object} O\n         * @returns {Boolean}\n         */\n        function isElement(O) {\n            return !!(O && (O.nodeType == 1 || O.nodeType == 11));\n        }\n\n        /**\n         * 오브젝트가 Object인지 판단합니다.\n         * @method ax5.util.isObject\n         * @param {Object} O\n         * @returns {Boolean}\n         */\n        function isObject(O) {\n            return _toString.call(O) == \"[object Object]\";\n        }\n\n        /**\n         * 오브젝트가 Array인지 판단합니다.\n         * @method ax5.util.isArray\n         * @param {Object} O\n         * @returns {Boolean}\n         */\n        function isArray(O) {\n            return _toString.call(O) == \"[object Array]\";\n        }\n\n        /**\n         * 오브젝트가 Function인지 판단합니다.\n         * @method ax5.util.isFunction\n         * @param {Object} O\n         * @returns {Boolean}\n         */\n        function isFunction(O) {\n            return typeof O === \"function\";\n        }\n\n        /**\n         * 오브젝트가 String인지 판단합니다.\n         * @method ax5.util.isString\n         * @param {Object} O\n         * @returns {Boolean}\n         */\n        function isString(O) {\n            return _toString.call(O) == \"[object String]\";\n        }\n\n        /**\n         * 오브젝트가 Number인지 판단합니다.\n         * @method ax5.util.isNumber\n         * @param {Object} O\n         * @returns {Boolean}\n         */\n        function isNumber(O) {\n            return _toString.call(O) == \"[object Number]\";\n        }\n\n        /**\n         * 오브젝트가 NodeList인지 판단합니다.\n         * @method ax5.util.isNodelist\n         * @param {Object} O\n         * @returns {Boolean}\n         */\n        function isNodelist(O) {\n            return !!(_toString.call(O) == \"[object NodeList]\" || (typeof O !== \"undefined\" && O && O[0] && O[0].nodeType == 1));\n        }\n\n        /**\n         * 오브젝트가 undefined인지 판단합니다.\n         * @method ax5.util.isUndefined\n         * @param {Object} O\n         * @returns {Boolean}\n         */\n        function isUndefined(O) {\n            return typeof O === \"undefined\";\n        }\n\n        /**\n         * 오브젝트가 undefined이거나 null이거나 빈값인지 판단합니다.\n         * @method ax5.util.isNothing\n         * @param {Object} O\n         * @returns {Boolean}\n         */\n        function isNothing(O) {\n            return (typeof O === \"undefined\" || O === null || O === \"\");\n        }\n\n        /**\n         * 오브젝트가 날자값인지 판단합니다.\n         * @method ax5.util.isDate\n         * @param {Date} O\n         * @returns {Boolean}\n         * @example\n         * ```js\n         * ax5.util.isDate('2016-09-30');\n         * // false\n         * ax5.util.isDate( new Date('2016-09-30') );\n         * // true\n         * ```\n         */\n        function isDate(O) {\n            return (O instanceof Date && !isNaN(O.valueOf()));\n        }\n\n\n        function isDateFormat(O) {\n            var\n                result = false\n                ;\n            if (!O) {\n            }\n            else if (O instanceof Date && !isNaN(O.valueOf())) {\n                result = true;\n            }\n            else {\n                if (O.length > 7) {\n                    if (date(O) instanceof Date) {\n                        return true;\n                    }\n                }\n                O = O.replace(/\\D/g, '');\n                if (O.length > 7) {\n                    var\n                        mm = O.substr(4, 2),\n                        dd = O.substr(6, 2)\n                        ;\n                    O = date(O);\n                    if (O.getMonth() == (mm - 1) && O.getDate() == dd) {\n                        result = true;\n                    }\n                }\n            }\n            return result;\n        }\n\n        /**\n         * 오브젝트의 첫번째 아이템을 반환합니다.\n         * @method ax5.util.first\n         * @param {Object|Array} O\n         * @returns {Object}\n         * @example\n         * ```js\n         * ax5.util.first({a:1, b:2});\n         * // Object {a: 1}\n         * ax5.util.first([1,2,3,4]);\n         * // 1\n         * ```\n         */\n        function first(O) {\n            if (isObject(O)) {\n                var keys = Object.keys(O);\n                var item = {};\n                item[keys[0]] = O[keys[0]];\n                return item;\n            }\n            else if (isArray(O)) {\n                return O[0];\n            }\n            else {\n                console.error(\"ax5.util.object.first\", \"argument type error\");\n                return undefined;\n            }\n        }\n\n        /**\n         * 오브젝트의 마지막 아이템을 반환합니다.\n         * @method ax5.util.last\n         * @param {Object|Array} O\n         * @returns {Object}\n         * @example\n         * ```js\n         * ax5.util.last({a:1, b:2});\n         * // Object {b: 2}\n         * ax5.util.last([1,2,3,4]);\n         * // 4\n         * ```\n         */\n        function last(O) {\n            if (isObject(O)) {\n                var keys = Object.keys(O);\n                var item = {};\n                item[keys[keys.length - 1]] = O[keys[keys.length - 1]];\n                return item;\n            }\n            else if (isArray(O)) {\n                return O[O.length - 1];\n            }\n            else {\n                console.error(\"ax5.util.object.last\", \"argument type error\");\n                return undefined;\n            }\n        }\n\n        /**\n         * 쿠키를 설정합니다.\n         * @method ax5.util.setCookie\n         * @param {String} cname - 쿠키이름\n         * @param {String} cvalue - 쿠키값\n         * @param {Number} [exdays] - 쿠키 유지일수\n         * @param {Object} [opts] - path, domain 설정 옵션\n         * @example\n         * ```js\n         * ax5.util.setCookie(\"jslib\", \"AX5\");\n         * ax5.util.setCookie(\"jslib\", \"AX5\", 3);\n         * ax5.util.setCookie(\"jslib\", \"AX5\", 3, {path:\"/\", domain:\".axisj.com\"});\n         * ```\n         */\n        function setCookie(cn, cv, exdays, opts) {\n            var expire;\n            if (typeof exdays === \"number\") {\n                expire = new Date();\n                expire.setDate(expire.getDate() + exdays);\n            }\n            opts = opts || {};\n            return (doc.cookie = [\n                escape(cn), '=', escape(cv),\n                expire ? \"; expires=\" + expire.toUTCString() : \"\", // use expires attribute, max-age is not supported by IE\n                opts.path ? \"; path=\" + opts.path : \"\",\n                opts.domain ? \"; domain=\" + opts.domain : \"\",\n                opts.secure ? \"; secure\" : \"\"\n            ].join(\"\"));\n        }\n\n        /**\n         * 쿠키를 가져옵니다.\n         * @method ax5.util.getCookie\n         * @param {String} cname\n         * @returns {String} cookie value\n         * @example\n         * ```js\n         * ax5.util.getCookie(\"jslib\");\n         * ```\n         */\n        function getCookie(cname) {\n            var name = cname + \"=\";\n            var ca = doc.cookie.split(';'), i = 0, l = ca.length;\n            for (; i < l; i++) {\n                var c = ca[i];\n                while (c.charAt(0) == ' ') c = c.substring(1);\n                if (c.indexOf(name) != -1) return unescape(c.substring(name.length, c.length));\n            }\n            return \"\";\n        }\n\n        /**\n         * jsonString 으로 alert 합니다.\n         * @method ax5.util.alert\n         * @param {Object|Array|String|Number} O\n         * @returns {Object|Array|String|Number} O\n         * @example ```js\n         * ax5.util.alert({a:1,b:2});\n         * ax5.util.alert(\"정말?\");\n         * ```\n         */\n        function alert(O) {\n            win.alert(toJson(O));\n            return O;\n        }\n\n        /**\n         * 문자열의 특정 문자열까지 잘라주거나 원하는 포지션까지 잘라줍니다.\n         * @method ax5.util.left\n         * @param {String} str - 문자열\n         * @param {String|Number} pos - 찾을 문자열 또는 포지션\n         * @returns {String}\n         * @example\n         * ```js\n         * ax5.util.left(\"abcd.efd\", 3);\n         * // abc\n         * ax5.util.left(\"abcd.efd\", \".\");\n         * // abcd\n         * ```\n         */\n        function left(str, pos) {\n            if (typeof str === \"undefined\" || typeof pos === \"undefined\") return \"\";\n            if (isString(pos)) {\n                return (str.indexOf(pos) > -1) ? str.substr(0, str.indexOf(pos)) : \"\";\n            }\n            else if (isNumber(pos)) {\n                return str.substr(0, pos);\n            }\n            else {\n                return \"\";\n            }\n        }\n\n        /**\n         * 문자열의 특정 문자열까지 잘라주거나 원하는 포지션까지 잘라줍니다.\n         * @method ax5.util.right\n         * @param {String} str - 문자열\n         * @param {String|Number} pos - 찾을 문자열 또는 포지션\n         * @returns {String}\n         * @example\n         * ```js\n         * ax5.util.right(\"abcd.efd\", 3);\n         * // efd\n         * ax5.util.right(\"abcd.efd\", \".\");\n         * // efd\n         * ```\n         */\n        function right(str, pos) {\n            if (typeof str === \"undefined\" || typeof pos === \"undefined\") return \"\";\n            str = '' + str;\n            if (isString(pos)) {\n                return (str.lastIndexOf(pos) > -1) ? str.substr(str.lastIndexOf(pos) + 1) : \"\";\n            }\n            else if (isNumber(pos)) {\n                return str.substr(str.length - pos);\n            }\n            else {\n                return \"\";\n            }\n        }\n\n        /**\n         * css형 문자열이나 특수문자가 포함된 문자열을 카멜케이스로 바꾸어 반환합니다.\n         * @method ax5.util.camelCase\n         * @param {String} str\n         * @returns {String}\n         * @example\n         * ```js\n         * ax5.util.camelCase(\"inner-width\");\n         * ax5.util.camelCase(\"innerWidth\");\n         * // innerWidth\n         * ```\n         */\n        function camelCase(str) {\n            return str.replace(reMs, \"ms-\").replace(reSnakeCase, function (all, letter) {\n                return letter.toUpperCase();\n            });\n        }\n\n        /**\n         * css형 문자열이나 카멜케이스문자열을 스네이크 케이스 문자열로 바꾸어 반환합니다.\n         * @method ax5.util.snakeCase\n         * @param {String} str\n         * @returns {String}\n         * @example\n         * ```js\n         * ax5.util.snakeCase(\"innerWidth\");\n         * ax5.util.snakeCase(\"inner-Width\");\n         * ax5.util.snakeCase(\"innerWidth\");\n         * // inner-width\n         * ```\n         */\n        function snakeCase(str) {\n            return camelCase(str).replace(reCamelCase, function (all, letter) {\n                return \"-\" + letter.toLowerCase();\n            });\n        }\n\n        /**\n         * 문자열에서 -. 을 제외한 모든 문자열을 제거하고 숫자로 반환합니다. 옵션에 따라 원하는 형식의 숫자로 변환 할 수 도 있습니다.\n         * @method ax5.util.number\n         * @param {String|Number} str\n         * @param {Object} cond - 옵션\n         * @returns {String|Number}\n         * @example\n         * ```js\n         * var cond = {\n\t\t * \tround: {Number|Boolean} - 반올림할 자릿수,\n\t\t * \tmoney: {Boolean} - 통화,\n\t\t * \tabs: {Boolean} - 절대값,\n\t\t * \tbyte: {Boolean} - 바이트\n\t\t * }\n         *\n         * console.log(ax5.util.number(123456789.678, {round:1}));\n         * console.log(ax5.util.number(123456789.678, {round:1, money:true}));\n         * console.log(ax5.util.number(123456789.678, {round:2, byte:true}));\n         * console.log(ax5.util.number(-123456789.8888, {abs:true, round:2, money:true}));\n         * console.log(ax5.util.number(\"A-1234~~56789.8~888PX\", {abs:true, round:2, money:true}));\n         *\n         * //123456789.7\n         * //123,456,789.7\n         * //117.7MB\n         * //123,456,789.89\n         * //123,456,789.89\n         * ```\n         */\n        function number(str, cond) {\n            var result, pair = ('' + str).split(reDot), isMinus = (Number(pair[0]) < 0 || pair[0] == \"-0\"), returnValue = 0.0;\n            pair[0] = pair[0].replace(reInt, \"\");\n            if (pair[1]) {\n                pair[1] = pair[1].replace(reNotNum, \"\");\n                returnValue = Number(pair[0] + \".\" + pair[1]) || 0;\n            }\n            else {\n                returnValue = Number(pair[0]) || 0;\n            }\n            result = (isMinus) ? -returnValue : returnValue;\n\n            each(cond, function (k, c) {\n                if (k == \"round\") {\n                    if (isNumber(c)) {\n                        if (c < 0) {\n                            result = +(Math.round(result + \"e-\" + Math.abs(c)) + \"e+\" + Math.abs(c));\n                        }\n                        else {\n                            result = +(Math.round(result + \"e+\" + c) + \"e-\" + c);\n                        }\n                    }\n                    else {\n                        result = Math.round(result);\n                    }\n                }\n                if (k == \"floor\") {\n                    result = Math.floor(result);\n                }\n                if (k == \"ceil\") {\n                    result = Math.ceil(result);\n                }\n                else if (k == \"money\") {\n                    result = (function (val) {\n                        var txtNumber = '' + val;\n                        if (isNaN(txtNumber) || txtNumber == \"\") {\n                            return \"\";\n                        }\n                        else {\n                            var arrNumber = txtNumber.split('.');\n                            arrNumber[0] += '.';\n                            do {\n                                arrNumber[0] = arrNumber[0].replace(reMoneySplit, '$1,$2');\n                            } while (reMoneySplit.test(arrNumber[0]));\n                            if (arrNumber.length > 1) {\n                                return arrNumber.join('');\n                            }\n                            else {\n                                return arrNumber[0].split('.')[0];\n                            }\n                        }\n                    })(result);\n                }\n                else if (k == \"abs\") {\n                    result = Math.abs(Number(result));\n                }\n                else if (k == \"byte\") {\n                    result = (function (val) {\n                        val = Number(result);\n                        var nUnit = \"KB\";\n                        var myByte = val / 1024;\n                        if (myByte / 1024 > 1) {\n                            nUnit = \"MB\";\n                            myByte = myByte / 1024;\n                        }\n                        if (myByte / 1024 > 1) {\n                            nUnit = \"GB\";\n                            myByte = myByte / 1024;\n                        }\n                        return number(myByte, {round: 1}) + nUnit;\n                    })(result);\n                }\n            });\n\n            return result;\n        }\n\n        /**\n         * 배열 비슷한 오브젝트를 배열로 변환해줍니다.\n         * @method ax5.util.toArray\n         * @param {Object|Elements|Arguments} O\n         * @returns {Array}\n         * @example\n         * ```js\n         * ax5.util.toArray(arguments);\n         * //\n         * ```\n         */\n        function toArray(O) {\n            if (typeof O.length != \"undefined\") return Array.prototype.slice.call(O);\n            return [];\n        }\n\n        /**\n         * 첫번째 인자에 두번째 인자 아이템을 합쳐줍니다. concat과 같은 역할을 하지만. 인자가 Array타입이 아니어도 됩니다.\n         * @method ax5.util.merge\n         * @param {Array|ArrayLike} first\n         * @param {Array|ArrayLike} second\n         * @returns {Array} first\n         * @example\n         * ```\n         *\n         * ```\n         */\n        function merge(first, second) {\n            var l = second.length,\n                i = first.length,\n                j = 0;\n\n            if (typeof l === \"number\") {\n                for (; j < l; j++) {\n                    first[i++] = second[j];\n                }\n            }\n            else {\n                while (second[j] !== undefined) {\n                    first[i++] = second[j++];\n                }\n            }\n\n            first.length = i;\n\n            return first;\n        }\n\n        /**\n         * 오브젝트를 파라미터형식으로 또는 파라미터를 오브젝트 형식으로 변환합니다.\n         * @method ax5.util.param\n         * @param {Object|Array|String} O\n         * @param {String} [cond] - param|object\n         * @returns {Object|String}\n         * @example\n         * ```\n         * ax5.util.param({a:1,b:'1232'}, \"param\");\n         * ax5.util.param(\"a=1&b=1232\", \"param\");\n         * // \"a=1&b=1232\"\n         * ax5.util.param(\"a=1&b=1232\");\n         * // {a: \"1\", b: \"1232\"}\n         * ```\n         */\n        function param(O, cond) {\n            var p;\n            if (isString(O) && typeof cond !== \"undefined\" && cond == \"param\") {\n                return O;\n            }\n            else if ((isString(O) && typeof cond !== \"undefined\" && cond == \"object\") || (isString(O) && typeof cond === \"undefined\")) {\n                p = {};\n                each(O.split(reAmp), function () {\n                    var item = this.split(reEq);\n                    if (!p[item[0]]) p[item[0]] = item[1];\n                    else {\n                        if (isString(p[item[0]])) p[item[0]] = [p[item[0]]];\n                        p[item[0]].push(item[1]);\n                    }\n                });\n                return p;\n            }\n            else {\n                p = [];\n                each(O, function (k, v) {\n                    p.push(k + \"=\" + escape(v));\n                });\n                return p.join('&');\n            }\n        }\n\n        function encode(s) {\n            return encodeURIComponent(s);\n        }\n\n        function decode(s) {\n            return decodeURIComponent(s);\n        }\n\n        function error() {\n            ax5.info.onerror.apply(this, arguments);\n        }\n\n        function localDate(yy, mm, dd, hh, mi, ss) {\n            var utcD, localD;\n            localD = new Date();\n            if (typeof hh === \"undefined\") hh = 23;\n            if (typeof mi === \"undefined\") mi = 59;\n            utcD = new Date(Date.UTC(yy, mm, dd || 1, hh, mi, ss || 0));\n\n            if (mm == 0 && dd == 1 && utcD.getUTCHours() + (utcD.getTimezoneOffset() / 60) < 0) {\n                utcD.setUTCHours(0);\n            }\n            else {\n                utcD.setUTCHours(utcD.getUTCHours() + (utcD.getTimezoneOffset() / 60));\n            }\n            return utcD;\n        }\n\n        /**\n         * 날짜 형식의 문자열이나 Date객체를 조건에 맞게 처리 한 후 원하는 return 값으로 반환합니다.\n         * @method ax5.util.date\n         * @param {String|Date} d\n         * @param {Object} cond\n         * @returns {Date|String}\n         * @example\n         * ```js\n         * ax5.util.date('2013-01-01'); // Tue Jan 01 2013 23:59:00 GMT+0900 (KST)\n         * ax5.util.date((new Date()), {add:{d:10}, return:'yyyy/MM/dd'}); // \"2015/07/01\"\n         * ax5.util.date('1919-03-01', {add:{d:10}, return:'yyyy/MM/dd hh:mm:ss'}); // \"1919/03/11 23:59:00\"\n         * ```\n         */\n        function date(d, cond) {\n            var yy, mm, dd, hh, mi,\n                aDateTime, aTimes, aTime, aDate,\n                utcD, localD,\n                va;\n            var ISO_8601 = /^\\d{4}(-\\d\\d(-\\d\\d(T\\d\\d:\\d\\d(:\\d\\d)?(\\.\\d+)?(([+-]\\d\\d:\\d\\d)|Z)?)?)?)?$/i;\n            var ISO_8601_FULL = /^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(([+-]\\d\\d:\\d\\d)|Z)?$/i;\n\n            if (isString(d)) {\n                if (d.length == 0) {\n                    d = new Date();\n                }\n                else if (d.length > 15) {\n                    if (ISO_8601_FULL.test(d) || ISO_8601.test(d)) {\n                        d = new Date(d);\n                    } else {\n                        aDateTime = d.split(/ /g), aTimes, aTime,\n                            aDate = aDateTime[0].split(/\\D/g),\n                            yy = aDate[0];\n                        mm = parseFloat(aDate[1]);\n                        dd = parseFloat(aDate[2]);\n                        aTime = aDateTime[1] || \"09:00\";\n                        aTimes = aTime.substring(0, 5).split(\":\");\n                        hh = parseFloat(aTimes[0]);\n                        mi = parseFloat(aTimes[1]);\n                        if (right(aTime, 2) === \"AM\" || right(aTime, 2) === \"PM\") hh += 12;\n                        d = localDate(yy, mm - 1, dd, hh, mi);\n                    }\n                }\n                else if (d.length == 14) {\n                    va = d.replace(/\\D/g, \"\");\n                    d = localDate(va.substr(0, 4), va.substr(4, 2) - 1, number(va.substr(6, 2)), number(va.substr(8, 2)), number(va.substr(10, 2)), number(va.substr(12, 2)));\n                }\n                else if (d.length > 7) {\n                    va = d.replace(/\\D/g, \"\");\n                    d = localDate(va.substr(0, 4), va.substr(4, 2) - 1, number(va.substr(6, 2)));\n                }\n                else if (d.length > 4) {\n                    va = d.replace(/\\D/g, \"\");\n                    d = localDate(va.substr(0, 4), va.substr(4, 2) - 1, 1);\n                }\n                else if (d.length > 2) {\n                    va = d.replace(/\\D/g, \"\");\n                    return localDate(va.substr(0, 4), va.substr(4, 2) - 1, 1);\n                }\n                else {\n                    d = new Date();\n                }\n            }\n\n            if (typeof cond === \"undefined\") {\n                return d;\n            }\n            else {\n\n                if (\"add\" in cond) {\n                    d = (function (_d, opts) {\n                        var\n                            yy, mm, dd, mxdd,\n                            DyMilli = ((1000 * 60) * 60) * 24;\n\n                        if (typeof opts[\"d\"] !== \"undefined\") {\n                            _d.setTime(_d.getTime() + (opts[\"d\"] * DyMilli));\n                        }\n                        else if (typeof opts[\"m\"] !== \"undefined\") {\n                            yy = _d.getFullYear();\n                            mm = _d.getMonth();\n                            dd = _d.getDate();\n                            yy = yy + parseInt(opts[\"m\"] / 12);\n                            mm += opts[\"m\"] % 12;\n                            mxdd = daysOfMonth(yy, mm);\n                            if (mxdd < dd) dd = mxdd;\n                            _d = new Date(yy, mm, dd, 12);\n                        }\n                        else if (typeof opts[\"y\"] !== \"undefined\") {\n                            _d.setTime(_d.getTime() + ((opts[\"y\"] * 365) * DyMilli));\n                        }\n                        return _d;\n                    })(new Date(d), cond[\"add\"]);\n                }\n\n                if (\"set\" in cond) {\n                    d = (function (_d, opts) {\n                        var\n                            yy, mm, dd,\n                            processor = {\n                                \"firstDayOfMonth\": function (date) {\n                                    yy = date.getFullYear();\n                                    mm = date.getMonth();\n                                    dd = 1;\n                                    return new Date(yy, mm, dd, 12);\n                                },\n                                \"lastDayOfMonth\": function (date) {\n                                    yy = date.getFullYear();\n                                    mm = date.getMonth();\n                                    dd = daysOfMonth(yy, mm);\n                                    return new Date(yy, mm, dd, 12);\n                                }\n                            };\n                        if (opts in processor) {\n                            return processor[opts](_d);\n                        } else {\n                            return _d;\n                        }\n                    })(new Date(d), cond[\"set\"]);\n                }\n\n                if (\"return\" in cond) {\n                    return (function () {\n                        var fStr = cond[\"return\"], nY, nM, nD, nH, nMM, nS, nDW;\n\n                        nY = d.getUTCFullYear();\n                        nM = setDigit(d.getMonth() + 1, 2);\n                        nD = setDigit(d.getDate(), 2);\n                        nH = setDigit(d.getHours(), 2);\n                        nMM = setDigit(d.getMinutes(), 2);\n                        nS = setDigit(d.getSeconds(), 2);\n                        nDW = d.getDay();\n\n                        var yre = /[^y]*(yyyy)[^y]*/gi;\n                        yre.exec(fStr);\n                        var regY = RegExp.$1;\n                        var mre = /[^m]*(MM)[^m]*/g;\n                        mre.exec(fStr);\n                        var regM = RegExp.$1;\n                        var dre = /[^d]*(dd)[^d]*/gi;\n                        dre.exec(fStr);\n                        var regD = RegExp.$1;\n                        var hre = /[^h]*(hh)[^h]*/gi;\n                        hre.exec(fStr);\n                        var regH = RegExp.$1;\n                        var mire = /[^m]*(mm)[^i]*/g;\n                        mire.exec(fStr);\n                        var regMI = RegExp.$1;\n                        var sre = /[^s]*(ss)[^s]*/gi;\n                        sre.exec(fStr);\n                        var regS = RegExp.$1;\n                        var dwre = /[^d]*(dw)[^w]*/gi;\n                        dwre.exec(fStr);\n                        var regDW = RegExp.$1;\n\n                        if (regY === \"yyyy\") {\n                            fStr = fStr.replace(regY, right(nY, regY.length));\n                        }\n                        if (regM === \"MM\") {\n                            if (regM.length == 1) nM = (d.getMonth() + 1);\n                            fStr = fStr.replace(regM, nM);\n                        }\n                        if (regD === \"dd\") {\n                            if (regD.length == 1) nD = d.getDate();\n                            fStr = fStr.replace(regD, nD);\n                        }\n                        if (regH === \"hh\") {\n                            fStr = fStr.replace(regH, nH);\n                        }\n                        if (regMI === \"mm\") {\n                            fStr = fStr.replace(regMI, nMM);\n                        }\n                        if (regS === \"ss\") {\n                            fStr = fStr.replace(regS, nS);\n                        }\n                        if (regDW == \"dw\") {\n                            fStr = fStr.replace(regDW, info.weekNames[nDW].label);\n                        }\n                        return fStr;\n                    })();\n                }\n                else {\n                    return d;\n                }\n            }\n        }\n\n        /**\n         * 인자인 날짜가 오늘부터 몇일전인지 반환합니다. 또는 인자인 날짜가 가까운 미래에 몇일 후인지 반환합니다.\n         * @method ax5.util.dday\n         * @param {String|Data} d\n         * @param {Object} cond\n         * @returns {Number}\n         * @example\n         * ```js\n         * ax5.util.dday('2016-01-29');\n         * // 1\n         * ax5.util.dday('2016-01-29', {today:'2016-01-28'});\n         * // 1\n         * ax5.util.dday('1977-03-29', {today:'2016-01-28', age:true});\n         * // 39\n         * ```\n         */\n        function dday(d, cond) {\n            var memoryDay = date(d), DyMilli = ((1000 * 60) * 60) * 24, today = new Date(), diffnum, thisYearMemoryDay;\n\n            function getDayTime(_d) {\n                return Math.floor(_d.getTime() / DyMilli) * DyMilli;\n            }\n\n            if (typeof cond === \"undefined\") {\n                diffnum = number((( getDayTime(memoryDay) - getDayTime(today) ) / DyMilli), {floor: true});\n                return diffnum;\n            }\n\n            else {\n                diffnum = number((( getDayTime(memoryDay) - getDayTime(today) ) / DyMilli), {floor: true});\n                if (cond[\"today\"]) {\n                    today = date(cond.today);\n                    diffnum = number((( getDayTime(memoryDay) - getDayTime(today) ) / DyMilli), {floor: true});\n                }\n                if (cond[\"thisYear\"]) {\n                    thisYearMemoryDay = new Date(today.getFullYear(), memoryDay.getMonth(), memoryDay.getDate());\n                    diffnum = number((( getDayTime(thisYearMemoryDay) - getDayTime(today) ) / DyMilli), {floor: true});\n                    if (diffnum < 0) {\n                        thisYearMemoryDay = new Date(today.getFullYear() + 1, memoryDay.getMonth(), memoryDay.getDate());\n                        diffnum = number((( getDayTime(thisYearMemoryDay) - getDayTime(today) ) / DyMilli), {floor: true});\n                    }\n                }\n                if (cond[\"age\"]) {\n                    thisYearMemoryDay = new Date(today.getFullYear(), memoryDay.getMonth(), memoryDay.getDate());\n                    diffnum = thisYearMemoryDay.getFullYear() - memoryDay.getFullYear();\n                }\n\n                return diffnum;\n            }\n        }\n\n        /**\n         * 인자인 날짜가 몇년 몇월의 몇번째 주차인지 반환합니다.\n         * @method ax5.util.weeksOfMonth\n         * @param {String|Data} d\n         * @returns {Object}\n         * @example\n         * ```js\n         * ax5.util.weeksOfMonth(\"2015-10-01\"); // {year: 2015, month: 10, count: 1}\n         * ax5.util.weeksOfMonth(\"2015-09-19\"); // {year: 2015, month: 9, count: 3}\n         * ```\n         */\n        function weeksOfMonth(d) {\n            var myDate = date(d);\n            return {\n                year: myDate.getFullYear(),\n                month: myDate.getMonth() + 1,\n                count: parseInt(myDate.getDate() / 7 + 1)\n            };\n        }\n\n        /**\n         * 년월에 맞는 날자수를 반환합니다.\n         * (new Date()).getMonth() 기준으로 월값을 보냅니다. \"2월\" 인경우 \"1\" 을 넘기게 됩니다.\n         * @method ax5.util.daysOfMonth\n         * @param {Number} y\n         * @param {Number} m\n         * @returns {Number}\n         * @examples\n         * ```js\n         * ax5.util.daysOfMonth(2015, 11); // 31\n         * ax5.util.daysOfMonth(2015, 1); // 28\n         * ```\n         */\n        function daysOfMonth(y, m) {\n            if (m == 3 || m == 5 || m == 8 || m == 10) {\n                return 30;\n            }\n            else if (m == 1) {\n                return (((y % 4 == 0) && (y % 100 != 0)) || (y % 400 == 0)) ? 29 : 28;\n            }\n            else {\n                return 31;\n            }\n        }\n\n        /**\n         * 원하는 횟수 만큼 자릿수 맞춤 문자열을 포함한 문자열을 반환합니다.\n         * 문자열 길이보다 작은값을 보내면 무시됩니다.\n         * @method ax5.util.setDigit\n         * @param {String|Number} num\n         * @param {Number} length\n         * @param {String} [padder=0]\n         * @param {Number} [radix]\n         * @returns {String}\n         * @example\n         * ```\n         * ax5.util.setDigit(2016, 6)\n         * // \"002016\"\n         * ax5.util.setDigit(2016, 2)\n         * // \"2016\"\n         * ```\n         */\n        function setDigit(num, length, padder, radix) {\n            var s = num.toString(radix || 10);\n            return times((padder || '0'), (length - s.length)) + s;\n        }\n\n        /**\n         * 문자열을 지정된 수만큼 반복 합니다.\n         * @param {String} s\n         * @param {Number} count\n         * @returns {string}\n         * @example\n         * ```\n         * ax5.util.times(2016, 2)\n         * //\"20162016\"\n         * ```\n         */\n        function times(s, count) {\n            return count < 1 ? '' : new Array(count + 1).join(s);\n        }\n\n        /**\n         * 타겟엘리먼트의 부모 엘리멘트 트리에서 원하는 조건의 엘리먼트를 얻습니다.\n         * @method ax5.util.findParentNode\n         * @param {Element} _target - target element\n         * @param {Object|Function} cond - 원하는 element를 찾을 조건\n         * @returns {Element}\n         * @example\n         * ```\n         * // cond 속성정의\n         * var cond = {\n\t\t * \ttagname: {String} - 태그명 (ex. a, div, span..),\n\t\t * \tclazz: {String} - 클래스명\n\t\t * \t[, 그 외 찾고 싶은 attribute명들]\n\t\t * };\n         * console.log(\n         * console.log(\n         *    ax5.util.findParentNode(e.target, {tagname:\"a\", clazz:\"ax-menu-handel\", \"data-custom-attr\":\"attr_value\"})\n         * );\n         * // cond 함수로 처리하기\n         * jQuery('#id').bind(\"click.app_expand\", function(e){\n\t\t * \tvar target = ax5.util.findParentNode(e.target, function(target){\n\t\t * \t\tif($(target).hasClass(\"aside\")){\n\t\t * \t\t\treturn true;\n\t\t * \t\t}\n\t\t * \t\telse{\n\t\t * \t\t\treturn true;\n\t\t * \t\t}\n\t\t * \t});\n\t\t * \t//client-aside\n\t\t * \tif(target.id !== \"client-aside\"){\n\t\t * \t\t// some action\n\t\t * \t}\n\t\t * });\n         * ```\n         */\n\n        function findParentNode(_target, cond) {\n            if (_target) {\n                while ((function () {\n                    var result = true;\n                    if (typeof cond === \"undefined\") {\n                        _target = (_target.parentNode) ? _target.parentNode : false;\n                    }\n                    else if (isFunction(cond)) {\n                        result = cond(_target);\n                    }\n                    else if (isObject(cond)) {\n                        for (var k in cond) {\n                            if (k === \"tagname\") {\n                                if (_target.tagName.toLocaleLowerCase() != cond[k]) {\n                                    result = false;\n                                    break;\n                                }\n                            }\n                            else if (k === \"clazz\" || k === \"class_name\") {\n                                if (\"className\" in _target) {\n                                    var klasss = _target.className.split(reClassNameSplit);\n                                    var hasClass = false;\n                                    for (var a = 0; a < klasss.length; a++) {\n                                        if (klasss[a] == cond[k]) {\n                                            hasClass = true;\n                                            break;\n                                        }\n                                    }\n                                    result = hasClass;\n                                }\n                                else {\n                                    result = false;\n                                    break;\n                                }\n                            }\n                            else { // 그외 속성값들.\n                                if (_target.getAttribute) {\n                                    if (_target.getAttribute(k) != cond[k]) {\n                                        result = false;\n                                        break;\n                                    }\n                                }\n                                else {\n                                    result = false;\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    return !result;\n                })()) {\n                    if (_target.parentNode && _target.parentNode.parentNode) {\n                        _target = _target.parentNode;\n                    }\n                    else {\n                        _target = false;\n                        break;\n                    }\n                }\n            }\n            return _target;\n        }\n\n        /**\n         * @method ax5.util.cssNumber\n         * @param {String|Number} val\n         * @returns {String}\n         * @example\n         * ```\n         * console.log(ax5.util.cssNumber(\"100px\"))\n         * console.log(ax5.util.cssNumber(\"100%\"))\n         * console.log(ax5.util.cssNumber(\"100\"))\n         * console.log(ax5.util.cssNumber(100))\n         * console.log(ax5.util.cssNumber(\"!!100@#\"))\n         * ```\n         */\n        function cssNumber(val) {\n            var re = /\\D?(\\d+)([a-zA-Z%]*)/i,\n                found = ('' + val).match(re),\n                unit = found[2] || \"px\"\n                ;\n\n            return found[1] + unit;\n        }\n\n        /**\n         * css string 및 object 를 넘기면 object 및 string 으로 변환되어 리턴됩니다.\n         * @method ax5.util.css\n         * @param {Object|String} val - CSS String or CSS Object\n         * @returns {String|Object}\n         * @example\n         * ```\n         * console.log(ax5.util.css({background: \"#ccc\", padding: \"50px\", width: \"100px\"}));\n         * //\"background:#ccc;padding:50px;width:100px;\"\n         * console.log(ax5.util.css('width:100px;padding: 50px; background: #ccc'));\n         * // object {width: \"100px\", padding: \"50px\", background: \"#ccc\"}\n         * ```\n         */\n        function css(val) {\n            var returns;\n            if (isObject(val)) {\n                returns = '';\n                for (var k in val) {\n                    returns += k + ':' + val[k] + ';';\n                }\n                return returns;\n            }\n            else if (isString(val)) {\n                returns = {};\n                var valSplited = val.split(/[ ]*;[ ]*/g);\n                valSplited.forEach(function (v) {\n                    if ((v = v.trim()) !== \"\") {\n                        var vSplited = v.split(/[ ]*:[ ]*/g);\n                        returns[vSplited[0]] = vSplited[1];\n                    }\n                });\n                return returns;\n            }\n        }\n\n        /**\n         * @method ax5.util.stopEvent\n         * @param {Event} e\n         * @example\n         * ```\n         * ax5.util.stopEvent(e);\n         * ```\n         */\n        function stopEvent(e) {\n            // 이벤트 중지 구문\n            if (!e) var e = window.event;\n\n            //e.cancelBubble is supported by IE -\n            // this will kill the bubbling process.\n            e.cancelBubble = true;\n            e.returnValue = false;\n\n            //e.stopPropagation works only in Firefox.\n            if (e.stopPropagation) e.stopPropagation();\n            if (e.preventDefault) e.preventDefault();\n\n            return false;\n            // 이벤트 중지 구문 끝\n        }\n\n        /**\n         * @method ax5.util.selectRange\n         * @param {Element} el\n         * @param {Element} offset\n         * @example\n         * ```\n         * ax5.util.selectRange($(\"#select-test-0\")); // selectAll\n         * ax5.util.selectRange($(\"#select-test-0\"), \"selectAll\"); //selectAll\n         * ax5.util.selectRange($(\"#select-test-0\"), \"start\"); // focus on start\n         * ax5.util.selectRange($(\"#select-test-0\"), \"end\"); // focus on end\n         * ax5.util.selectRange($(\"#select-test-0\"), [1, 5]); // select 1~5\n         * ```\n         */\n        var selectRange = (function () {\n            var processor = {\n                'textRange': {\n                    'selectAll': function (el, range, offset) {\n\n                    },\n                    'arr': function (el, range, offset) {\n                        range.moveStart(\"character\", offset[0]); // todo ie node select 체크필요\n                        range.collapse();\n                        range.moveEnd(\"character\", offset[1]);\n                    },\n                    'start': function (el, range, offset) {\n                        range.moveStart(\"character\", 0);\n                        range.collapse();\n                    },\n                    'end': function (el, range, offset) {\n                        range.moveStart(\"character\", range.text.length);\n                        range.collapse();\n                    }\n                },\n                'range': {\n                    'selectAll': function (el, range, offset) {\n                        range.selectNodeContents(el);\n                    },\n                    'arr': function (el, range, offset) {\n                        if (isObject(offset[0])) {\n                            range.setStart(offset[0].node, offset[0].offset);\n                            range.setEnd(offset[1].node, offset[1].offset);\n                        }\n                        else {\n                            range.setStart(el.firstChild, offset[0]);\n                            range.setEnd(el.firstChild, offset[1]);\n                        }\n                    },\n                    'start': function (el, range, offset) {\n                        range.selectNodeContents(el);\n                        range.collapse(true);\n                    },\n                    'end': function (el, range, offset) {\n                        range.selectNodeContents(el);\n                        range.collapse(false);\n                    }\n                }\n            };\n            return function (el, offset) {\n                var range, rangeType, selection;\n\n                if (el instanceof jQuery) {\n                    el = el.get(0);\n                }\n                if (!el) return;\n\n                // 레인지 타입 선택\n                if (doc.body.createTextRange) {\n                    range = document.body.createTextRange();\n                    range.moveToElementText(el);\n                    rangeType = \"textRange\";\n                }\n                else if (window.getSelection) {\n                    selection = window.getSelection();\n                    range = document.createRange();\n                    rangeType = \"range\";\n                }\n\n                // range 적용\n                if (typeof offset == \"undefined\") {\n                    processor[rangeType].selectAll.call(this, el, range, offset);\n                }\n                else if (isArray(offset)) {\n                    processor[rangeType].arr.call(this, el, range, offset);\n                }\n                else {\n                    for (var key in processor[rangeType]) {\n                        if (offset == key) {\n                            processor[rangeType][key].call(this, el, range, offset);\n                            break;\n                        }\n                    }\n                }\n\n                // 포커스 및 셀렉트\n                if (doc.body.createTextRange) {\n                    range.select();\n                    el.focus();\n                }\n                else if (window.getSelection) {\n                    el.focus();\n                    selection.removeAllRanges();\n                    selection.addRange(range);\n                }\n\n            }\n        })();\n\n        /**\n         * 지정한 시간을 지연시켜 함수를 실행합니다.\n         * @method ax5.util.debounce\n         * @param {Function} func\n         * @param {Number} wait\n         * @param {Boolean} immediately\n         * @returns {debounced}\n         * @example\n         * ```js\n         * var debounceFn = ax5.util.debounce(function( val ) { console.log(val); }, 300);\n         * $(document.body).click(function(){\n         *  debounceFn(new Date());\n         * });\n         * ```\n         */\n        var debounce = function (func, wait, immediately) {\n            var timeout, removeTimeout;\n            var debounced = function () {\n                var args = toArray(arguments);\n\n                if (removeTimeout) clearTimeout(removeTimeout);\n                if (timeout) {\n                    // 두번째 호출\n                    if (timeout) clearTimeout(timeout);\n                    timeout = setTimeout((function (args) {\n                        func.apply(this, args);\n                    }).bind(this, args), wait);\n                } else {\n                    // 첫 호출\n                    timeout = setTimeout((function (args) {\n                        func.apply(this, args);\n                    }).bind(this, args), (immediately) ? 0 : wait);\n                }\n                removeTimeout = setTimeout(function () {\n                    clearTimeout(timeout);\n                    timeout = null;\n                }, wait);\n            };\n            debounced.cancel = function () {\n                clearTimeout(timeout);\n                clearTimeout(removeTimeout);\n                timeout = null;\n            };\n\n            return debounced;\n        };\n\n\n        /**\n         * @method ax5.util.deepCopy\n         * @param {Object} obj\n         * @returns {Object}\n         * @example\n         * ```js\n         * var obj = [\n         *  {name:\"A\", child:[{name:\"a-1\"}]},\n         *  {name:\"B\", child:[{name:\"b-1\"}], callBack: function(){ console.log('callBack'); }}\n         * ];\n         * var copiedObj = ax5.util.deepCopy(obj)\n         * ```\n         */\n        function deepCopy(obj) {\n            var r, l;\n            if (typeof obj == 'object') {\n                if (U.isArray(obj)) {\n                    l = obj.length;\n                    r = new Array(l);\n                    for (var i = 0; i < l; i++) {\n                        r[i] = deepCopy(obj[i]);\n                    }\n                    return r;\n                } else {\n                    return jQuery.extend({}, obj);\n                }\n            }\n            return obj;\n        }\n\n        /**\n         * HTML 문자열을 escape 처리합니다.\n         * \"&lt;\" represents the < sign.\n         * \"&gt;\" represents the > sign.\n         * \"&amp;\" represents the & sign.\n         * \"&quot; represents the \" mark.\n         * [Character entity references](https://www.w3.org/TR/html401/charset.html#h-5.3)\n         * @method ax5.util.escapeHtml\n         * @param {String} s\n         * @returns {string}\n         * @example\n         * ```\n         * ax5.util.escapeHtml('HTML <span>string</span> & \"escape\"')\n         * //\"HTML &lt;span&gt;string&lt;/span&gt; &amp; &quot;escape&quot;\"\n         * ```\n         */\n        function escapeHtml(s) {\n            if (_toString.call(s) != \"[object String]\") return s;\n            if (!s) return \"\";\n            return s.replace(/[\\<\\>\\&\\\"]/gm, function (match) {\n                switch (match) {\n                    case \"<\":\n                        return \"&lt;\";\n                    case \">\":\n                        return \"&gt;\";\n                    case \"&\":\n                        return \"&amp;\";\n                    case \"\\\"\":\n                        return \"&quot;\";\n                    default:\n                        return match;\n                }\n            });\n        }\n\n        /**\n         * HTML 문자열을 unescape 처리합니다.\n         * escapeHtml를 참고하세요.\n         * @method ax5.util.unescapeHtml\n         * @param {String} s\n         * @returns {string}\n         * @example\n         * ```\n         * ax5.util.unescapeHtml('HTML &lt;span&gt;string&lt;/span&gt; &amp; &quot;escape&quot;')\n         * //\"HTML <span>string</span> & \"escape\"\"\n         * ```\n         */\n        function unescapeHtml(s) {\n            if (_toString.call(s) != \"[object String]\") return s;\n            if (!s) return \"\";\n            return s.replace(/(&lt;)|(&gt;)|(&amp;)|(&quot;)/gm, function (match) {\n                switch (match) {\n                    case \"&lt;\":\n                        return \"<\";\n                    case \"&gt;\":\n                        return \">\";\n                    case \"&amp;\":\n                        return \"&\";\n                    case \"&quot;\":\n                        return \"\\\"\";\n                    default:\n                        return match;\n                }\n            });\n        }\n\n        /**\n         * @method ax5.util.string\n         * @param {String} tmpl\n         * @param {*} args\n         * @return {ax5string}\n         * @example\n         * ```js\n         * ax5.util.string(\"{0} is dead, but {1} is alive! {0} {2}\").format(\"ASP\", \"ASP.NET\");\n         * ax5.util.string(\"{0} is dead, but {1} is alive! {0} {2}\").format([\"ASP\", \"ASP.NET\"]);\n         * ax5.util.stinrg(\"{0} counts\").format(100);\n         * ```\n         */\n        function string(_string) {\n            function ax5string(_string) {\n                this.value = _string;\n                this.toString = function () {\n                    return this.value;\n                };\n                /**\n                 * @method ax5.util.string.format\n                 * @returns {*}\n                 */\n                this.format = function () {\n                    var args = [];\n                    for(var i=0,l=arguments.length;i<l;i++){\n                        args = args.concat(arguments[i]);\n                    }\n                    return this.value.replace(/{(\\d+)}/g, function (match, number) {\n                        return typeof args[number] != 'undefined' ? args[number] : match;\n                    });\n                };\n                /**\n                 * @method ax5.util.string.escape\n                 * @returns {*}\n                 */\n                this.escape = function(){\n                    return escapeHtml(this.value);\n                };\n                /**\n                 * @method ax5.util.string.unescape\n                 * @returns {*}\n                 */\n                this.unescape = function(){\n                    return unescapeHtml(this.value);\n                };\n                /**\n                 * @method ax5.util.string.encode\n                 * @returns {*}\n                 */\n                this.encode = function(){\n                    return encode(this.value);\n                };\n                /**\n                 * @method ax5.util.string.decode\n                 * @returns {*}\n                 */\n                this.decode = function(){\n                    return decode(this.value);\n                };\n                /**\n                 * @method ax5.util.string.left\n                 * @param {String|Number} pos - 찾을 문자열 또는 포지션\n                 * @returns {*}\n                 */\n                this.left = function(_pos){\n                    return left(this.value, _pos);\n                };\n                /**\n                 * @method ax5.util.string.right\n                 * @param {String|Number} pos - 찾을 문자열 또는 포지션\n                 * @returns {*}\n                 */\n                this.right = function(_pos){\n                    return right(this.value, _pos);\n                };\n                /**\n                 * @method ax5.util.string.camelCase\n                 * @returns {*}\n                 */\n                this.camelCase = function(){\n                    return camelCase(this.value);\n                };\n                /**\n                 * @method ax5.util.string.snakeCase\n                 * @returns {*}\n                 */\n                this.snakeCase = function(){\n                    return snakeCase(this.value);\n                };\n            }\n            return new ax5string(_string);\n        }\n\n        return {\n            alert: alert,\n            each: each,\n            map: map,\n            search: search,\n            reduce: reduce,\n            reduceRight: reduceRight,\n            filter: filter,\n            sum: sum,\n            avg: avg,\n            toJson: toJson,\n            parseJson: parseJson,\n            first: first,\n            last: last,\n            deepCopy: deepCopy,\n\n            left: left,\n            right: right,\n            getType: getType,\n            isWindow: isWindow,\n            isElement: isElement,\n            isObject: isObject,\n            isArray: isArray,\n            isFunction: isFunction,\n            isString: isString,\n            isNumber: isNumber,\n            isNodelist: isNodelist,\n            isUndefined: isUndefined,\n            isNothing: isNothing,\n            setCookie: setCookie,\n            getCookie: getCookie,\n            camelCase: camelCase,\n            snakeCase: snakeCase,\n            number: number,\n            toArray: toArray,\n            merge: merge,\n            param: param,\n            error: error,\n            date: date,\n            dday: dday,\n            daysOfMonth: daysOfMonth,\n            weeksOfMonth: weeksOfMonth,\n            setDigit: setDigit,\n            times: times,\n            findParentNode: findParentNode,\n            cssNumber: cssNumber,\n            css: css,\n            isDate: isDate,\n            isDateFormat: isDateFormat,\n            stopEvent: stopEvent,\n            selectRange: selectRange,\n            debounce: debounce,\n            escapeHtml: escapeHtml,\n            unescapeHtml: unescapeHtml,\n\n            string: string\n        }\n    })();\n\n    if (typeof module === \"object\" && typeof module.exports === \"object\") {\n        module.exports = ax5;\n    } else {\n        root.ax5 = (function () {\n            return ax5;\n        })(); // ax5.ui에 연결\n    }\n\n}).call(typeof window !== \"undefined\" ? window : this);\n","ax5.def = {};","ax5.info.errorMsg[\"ax5dialog\"] = {\n    \"501\": \"Duplicate call error\"\n};\n\nax5.info.errorMsg[\"ax5picker\"] = {\n    \"401\": \"Can not find target element\",\n    \"402\": \"Can not find boundID\",\n    \"501\": \"Can not find content key\"\n};\n\nax5.info.errorMsg[\"single-uploader\"] = {\n    \"460\": \"There are no files to be uploaded.\",\n    \"461\": \"There is no uploaded files.\"\n};\n\nax5.info.errorMsg[\"ax5calendar\"] = {\n    \"401\": \"Can not find target element\"\n};\n\nax5.info.errorMsg[\"ax5formatter\"] = {\n    \"401\": \"Can not find target element\",\n    \"402\": \"Can not find boundID\",\n    \"501\": \"Can not find pattern\"\n};\n\nax5.info.errorMsg[\"ax5menu\"] = {\n    \"501\": \"Can not find menu item\"\n};\n\nax5.info.errorMsg[\"ax5select\"] = {\n    \"401\": \"Can not find target element\",\n    \"402\": \"Can not find boundID\",\n    \"501\": \"Can not find option\"\n};\n\nax5.info.errorMsg[\"ax5combobox\"] = {\n    \"401\": \"Can not find target element\",\n    \"402\": \"Can not find boundID\",\n    \"501\": \"Can not find option\"\n};","// 필수 Ployfill 확장 구문\n(function () {\n    'use strict';\n    \n    var root = this,\n        re_trim = /^\\s*|\\s*$/g;\n\n    // From https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\n    if (!Object.keys) {\n        Object.keys = (function () {\n            var hwp = Object.prototype.hasOwnProperty,\n                hdeb = !({toString: null}).propertyIsEnumerable('toString'),\n                de = [\n                    'toString',\n                    'toLocaleString',\n                    'valueOf',\n                    'hasOwnProperty',\n                    'isPrototypeOf',\n                    'propertyIsEnumerable',\n                    'constructor'\n                ],\n                del = de.length;\n\n            return function (obj) {\n                if (typeof obj !== 'object' && (typeof obj !== 'function' || obj === null)) throw new TypeError('type err');\n                var r = [], prop, i;\n                for (prop in obj) if (hwp.call(obj, prop)) r.push(prop);\n                if (hdeb) {\n                    for (i = 0; i < del; i++) if (hwp.call(obj, de[i])) r.push(de[i]);\n                }\n                return r;\n            };\n        }());\n    }\n\n    // ES5 15.4.4.18 Array.prototype.forEach ( callbackfn [ , thisArg ] )\n    // From https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/forEach\n    if (!Array.prototype.forEach) {\n        Array.prototype.forEach = function (fun /*, thisp */) {\n            if (this === void 0 || this === null) {\n                throw TypeError();\n            }\n            var t = Object(this);\n            var len = t.length >>> 0;\n            if (typeof fun !== \"function\") {\n                throw TypeError();\n            }\n            var thisp = arguments[1], i;\n            for (i = 0; i < len; i++) {\n                if (i in t) {\n                    fun.call(thisp, t[i], i, t);\n                }\n            }\n        };\n    }\n\n    // ES5 15.3.4.5 Function.prototype.bind ( thisArg [, arg1 [, arg2, ... ]] )\n    // https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Function/bind\n    if (!Function.prototype.bind) {\n        Function.prototype.bind = function (o) {\n            if (typeof this !== 'function') {\n                throw TypeError(\"function\");\n            }\n            var slice = [].slice,\n                args = slice.call(arguments, 1),\n                self = this,\n                bound = function () {\n                    return self.apply(this instanceof nop ? this : o,\n                        args.concat(slice.call(arguments)));\n                };\n\n            function nop() {}\n\n            nop.prototype = self.prototype;\n            bound.prototype = new nop();\n            return bound;\n        };\n    }\n\n    /*global document */\n    /**\n     * define document.querySelector & document.querySelectorAll for IE7\n     *\n     * A not very fast but small hack. The approach is taken from\n     * http://weblogs.asp.net/bleroy/archive/2009/08/31/queryselectorall-on-old-ie-versions-something-that-doesn-t-work.aspx\n     *\n     */\n    (function () {\n        if (document.querySelectorAll || document.querySelector) {\n            return;\n        }\n        if (!document.createStyleSheet) return;\n        var style = document.createStyleSheet(),\n            select = function (selector, maxCount) {\n                var\n                    all = document.all,\n                    l = all.length,\n                    i,\n                    resultSet = [];\n\n                style.addRule(selector, \"foo:bar\");\n                for (i = 0; i < l; i += 1) {\n                    if (all[i].currentStyle.foo === \"bar\") {\n                        resultSet.push(all[i]);\n                        if (resultSet.length > maxCount) {\n                            break;\n                        }\n                    }\n                }\n                style.removeRule(0);\n                return resultSet;\n            };\n\n        document.querySelectorAll = function (selector) {\n            return select(selector, Infinity);\n        };\n        document.querySelector = function (selector) {\n            return select(selector, 1)[0] || null;\n        };\n    }());\n\n    if (!String.prototype.trim) {\n        (function () {\n            String.prototype.trim = function () {\n                return this.replace(re_trim, '');\n            };\n        })();\n    }\n\n    if (!window.JSON) {\n        window.JSON = {\n            parse: function (sJSON) { return (new Function('', 'return ' + sJSON))(); },\n            stringify: (function () {\n                var r = /[\"]/g, f;\n                return f = function (vContent) {\n                    var result, i, j;\n                    switch (result = typeof vContent) {\n                        case'string':\n                            return '\"' + vContent.replace(r, '\\\\\"') + '\"';\n                        case'number':\n                        case'boolean':\n                            return vContent.toString();\n                        case'undefined':\n                            return 'undefined';\n                        case'function':\n                            return '\"\"';\n                        case'object':\n                            if (!vContent) return 'null';\n                            result = '';\n                            if (vContent.splice) {\n                                for (i = 0, j = vContent.length; i < j; i++) result += ',' + f(vContent[i]);\n                                return '[' + result.substr(1) + ']';\n                            }\n                            else {\n                                for (i in vContent) if (vContent.hasOwnProperty(i) && vContent[i] !== undefined && typeof vContent[i] != 'function') result += ',\"' + i + '\":' + f(vContent[i]);\n                                return '{' + result.substr(1) + '}';\n                            }\n                    }\n                };\n            })()\n        };\n    }\n\n    // splice ie8 <= polyfill\n    (function () {\n        if (!document.documentMode || document.documentMode >= 9) return false;\n        var _splice = Array.prototype.splice;\n        Array.prototype.splice = function () {\n            var args = Array.prototype.slice.call(arguments);\n            if (typeof args[1] === \"undefined\") args[1] = this.length - args[0];\n            return _splice.apply(this, args);\n        };\n    })();\n\n    /**\n     * Shim for \"fixing\" IE's lack of support (IE < 9) for applying slice\n     * on host objects like NamedNodeMap, NodeList, and HTMLCollection\n     * (technically, since host objects have been implementation-dependent,\n     * at least before ES6, IE hasn't needed to work this way).\n     * Also works on strings, fixes IE < 9 to allow an explicit undefined\n     * for the 2nd argument (as in Firefox), and prevents errors when\n     * called on other DOM objects.\n     */\n    (function () {\n        'use strict';\n        var _slice = Array.prototype.slice;\n\n        try {\n            // Can't be used with DOM elements in IE < 9\n            _slice.call(document.documentElement);\n        } catch (e) { // Fails in IE < 9\n            // This will work for genuine arrays, array-like objects,\n            // NamedNodeMap (attributes, entities, notations),\n            // NodeList (e.g., getElementsByTagName), HTMLCollection (e.g., childNodes),\n            // and will not fail on other DOM objects (as do DOM elements in IE < 9)\n            Array.prototype.slice = function(begin, end) {\n                // IE < 9 gets unhappy with an undefined end argument\n                end = (typeof end !== 'undefined') ? end : this.length;\n\n                // For native Array objects, we use the native slice function\n                if (Object.prototype.toString.call(this) === '[object Array]'){\n                    return _slice.call(this, begin, end);\n                }\n\n                // For array like object we handle it ourselves.\n                var i, cloned = [],\n                    size, len = this.length;\n\n                // Handle negative value for \"begin\"\n                var start = begin || 0;\n                start = (start >= 0) ? start : Math.max(0, len + start);\n\n                // Handle negative value for \"end\"\n                var upTo = (typeof end == 'number') ? Math.min(end, len) : len;\n                if (end < 0) {\n                    upTo = len + end;\n                }\n \n                // Actual expected size of the slice\n                size = upTo - start;\n\n                if (size > 0) {\n                    cloned = new Array(size);\n                    if (this.charAt) {\n                        for (i = 0; i < size; i++) {\n                            cloned[i] = this.charAt(start + i);\n                        }\n                    } else {\n                        for (i = 0; i < size; i++) {\n                            cloned[i] = this[start + i];\n                        }\n                    }\n                }\n\n                return cloned;\n            };\n        }\n    }());\n\n    // Console-polyfill. MIT license. https://github.com/paulmillr/console-polyfill\n    // Make it safe to do console.log() always.\n    (function (con) {\n        var prop, method;\n        var empty = {};\n        var dummy = function () {};\n        var properties = 'memory'.split(',');\n        var methods = ('assert,clear,count,debug,dir,dirxml,error,exception,group,' +\n        'groupCollapsed,groupEnd,info,log,markTimeline,profile,profiles,profileEnd,' +\n        'show,table,time,timeEnd,timeline,timelineEnd,timeStamp,trace,warn').split(',');\n        while (prop = properties.pop()) con[prop] = con[prop] || empty;\n        while (method = methods.pop()) con[method] = con[method] || dummy;\n    })(window.console || {}); // Using `this` for web workers.\n\n\n    // Modernizr style test\n    if (!(window.webkitMatchMedia || window.mozMatchMedia || window.oMatchMedia || window.msMatchMedia || window.matchMedia)) {\n        var root = document.getElementsByTagName( 'html' )[0];\n        root.className += ' no-matchmedia';\n    }\n\n    /*! matchMedia() polyfill - Test a CSS media type/query in JS. Authors & copyright (c) 2012: Scott Jehl, Paul Irish, Nicholas Zakas, David Knight. Dual MIT/BSD license */\n    window.matchMedia || (window.matchMedia = function() {\n        \"use strict\";\n\n        // For browsers that support matchMedium api such as IE 9 and webkit\n        var styleMedia = (window.styleMedia || window.media);\n\n        // For those that don't support matchMedium\n        if (!styleMedia) {\n            var style       = document.createElement('style'),\n                script      = document.getElementsByTagName('script')[0],\n                info        = null;\n\n            style.type  = 'text/css';\n            style.id    = 'matchmediajs-test';\n\n            script.parentNode.insertBefore(style, script);\n\n            // 'style.currentStyle' is used by IE <= 8 and 'window.getComputedStyle' for all other browsers\n            info = ('getComputedStyle' in window) && window.getComputedStyle(style, null) || style.currentStyle;\n\n            styleMedia = {\n                matchMedium: function(media) {\n                    var text = '@media ' + media + '{ #matchmediajs-test { width: 1px; } }';\n\n                    // 'style.styleSheet' is used by IE <= 8 and 'style.textContent' for all other browsers\n                    if (style.styleSheet) {\n                        style.styleSheet.cssText = text;\n                    } else {\n                        style.textContent = text;\n                    }\n\n                    // Test if media query is true or false\n                    return info.width === '1px';\n                }\n            };\n        }\n\n        return function(media) {\n            return {\n                matches: styleMedia.matchMedium(media || 'all'),\n                media: media || 'all'\n            };\n        };\n    }());\n\n    /*! matchMedia() polyfill addListener/removeListener extension. Author & copyright (c) 2012: Scott Jehl. Dual MIT/BSD license */\n    (function(){\n        // Bail out for browsers that have addListener support\n        if (window.matchMedia && window.matchMedia('all').addListener) {\n            return false;\n        }\n\n        var localMatchMedia = window.matchMedia,\n            hasMediaQueries = localMatchMedia('only all').matches,\n            isListening     = false,\n            timeoutID       = 0,    // setTimeout for debouncing 'handleChange'\n            queries         = [],   // Contains each 'mql' and associated 'listeners' if 'addListener' is used\n            handleChange    = function(evt) {\n                // Debounce\n                clearTimeout(timeoutID);\n\n                timeoutID = setTimeout(function() {\n                    for (var i = 0, il = queries.length; i < il; i++) {\n                        var mql         = queries[i].mql,\n                            listeners   = queries[i].listeners || [],\n                            matches     = localMatchMedia(mql.media).matches;\n\n                        // Update mql.matches value and call listeners\n                        // Fire listeners only if transitioning to or from matched state\n                        if (matches !== mql.matches) {\n                            mql.matches = matches;\n\n                            for (var j = 0, jl = listeners.length; j < jl; j++) {\n                                listeners[j].call(window, mql);\n                            }\n                        }\n                    }\n                }, 30);\n            };\n\n        window.matchMedia = function(media) {\n            var mql         = localMatchMedia(media),\n                listeners   = [],\n                index       = 0;\n\n            mql.addListener = function(listener) {\n                // Changes would not occur to css media type so return now (Affects IE <= 8)\n                if (!hasMediaQueries) {\n                    return;\n                }\n\n                // Set up 'resize' listener for browsers that support CSS3 media queries (Not for IE <= 8)\n                // There should only ever be 1 resize listener running for performance\n                if (!isListening) {\n                    isListening = true;\n                    window.addEventListener('resize', handleChange, true);\n                }\n\n                // Push object only if it has not been pushed already\n                if (index === 0) {\n                    index = queries.push({\n                        mql         : mql,\n                        listeners   : listeners\n                    });\n                }\n\n                listeners.push(listener);\n            };\n\n            mql.removeListener = function(listener) {\n                for (var i = 0, il = listeners.length; i < il; i++){\n                    if (listeners[i] === listener){\n                        listeners.splice(i, 1);\n                    }\n                }\n            };\n\n            return mql;\n        };\n    }());\n\n    // extend innerWidth ..\n    var html = document.getElementsByTagName('html')[0];\n    var body = document.getElementsByTagName('body')[0];\n\n    /*\n    if (!window.innerWidth) window.innerWidth = html.clientWidth;\n    if (!window.innerHeight) window.innerHeight = html.clientHeight;\n    if (!window.scrollX) window.scrollX = window.pageXOffset || html.scrollLeft;\n    if (!window.scrollY) window.scrollY = window.pageYOffset || html.scrollTop;\n    */\n}.call(window));","/**\n * Refer to this by {@link ax5}.\n * @namespace ax5.ui\n */\n\n/**\n * @class ax5.ui.root\n * @classdesc ax5 ui class\n * @author tom@axisj.com\n * @example\n * ```\n * var myui = new ax5.ui.root();\n * ```\n */\nax5.ui = (function () {\n\n    function axUi() {\n        this.config = {};\n        this.name = \"root\";\n\n        /**\n         * 클래스의 속성 정의 메소드 속성 확장후에 내부에 init 함수를 호출합니다.\n         * @method ax5.ui.root.setConfig\n         * @param {Object} config - 클래스 속성값\n         * @param {Boolean} [callInit=true] - init 함수 호출 여부\n         * @returns {ax5.ui.axUi}\n         * @example\n         * ```\n         * var myui = new ax5.ui.root();\n         * myui.setConfig({\n\t\t * \tid:\"abcd\"\n\t\t * });\n         * ```\n         */\n        this.setConfig = function (cfg, callInit) {\n            jQuery.extend(true, this.config, cfg);\n            if (typeof callInit == \"undefined\" || callInit === true) {\n                this.init();\n            }\n            return this;\n        };\n        this.init = function () {\n            console.log(this.config);\n        };\n\n        this.bindWindowResize = function (callBack) {\n            setTimeout((function () {\n                jQuery(window).resize((function () {\n                    if (this.bindWindowResize__) clearTimeout(this.bindWindowResize__);\n                    this.bindWindowResize__ = setTimeout((function () {\n                        callBack.call(this);\n                    }).bind(this), 10);\n                }).bind(this));\n            }).bind(this), 100);\n        };\n\n        this.stopEvent = function (e) {\n            if (e.preventDefault) e.preventDefault();\n            if (e.stopPropagation) e.stopPropagation();\n            e.cancelBubble = true;\n            return false;\n        };\n\n        this.toString = function () {\n            return this.name + '@' + this.version;\n        };\n\n        // instance init\n        this.main = (function () {\n\n        }).apply(this, arguments);\n\n    }\n\n    /**\n     * @method ax5.ui.addClass\n     * @param {Object} config\n     * @param {String} config.className - name of Class\n     * @param {String} [config.version=\"\"] - version of Class\n     * @param {Object} [config.classStore=ax5.ui] - 클래스가 저장될 경로\n     * @param {Function} [config.superClass=ax5.ui.root]\n     * @param {Function} cls - Class Function\n     */\n    function addClass(config, cls) {\n        if (!config || !config.className) throw 'invalid call';\n        var classStore = (config.classStore) ? config.classStore : ax5.ui;\n        if (!classStore)  throw 'invalid classStore';\n\n        // make ui definition variable\n        ax5.def[config.className] = {\n            version: config.version\n        };\n\n        var factory = function (cls, arg) {\n            switch (arg.length) {\n                case 0:\n                    return new cls();\n                    break;\n                case 1:\n                    return new cls(arg[0]);\n                    break;\n                case 2:\n                    return new cls(arg[0], arg[1]);\n                    break;\n                case 3:\n                    return new cls(arg[0], arg[1], arg[2]);\n                    break;\n            }\n        };\n        var initInstance = function (name, version, instance) {\n            instance.name = name;\n            instance.version = version;\n            instance.instanceId = ax5.getGuid();\n            return instance;\n        };\n        var initPrototype = function (cls) {\n            var superClass = (config.superClass) ? config.superClass : ax5.ui.root;\n            if (!ax5.util.isFunction(superClass)) throw 'invalid superClass';\n            superClass.call(this); // 부모호출\n            cls.prototype = new superClass(); // 상속\n        };\n        var wrapper = function () {\n            if (!this || !(this instanceof wrapper)) throw 'invalid call';\n            var instance = factory(cls, arguments);\n            return initInstance(config.className, config.version || \"\", instance);\n        };\n        initPrototype.call(this, cls);\n        classStore[config.className] = wrapper;\n    }\n\n    return {\n        root: axUi,\n        addClass: addClass\n    }\n})();\n","/*!\n * mustache.js - Logic-less {{mustache}} templates with JavaScript\n * http://github.com/janl/mustache.js\n * https://github.com/thomasJang/mustache.js -- imporove some variables\n */\n\n(function defineMustache(global, factory) {\n\n    factory(global.mustache = {});\n\n}(window.ax5, function mustacheFactory(mustache) {\n\n    var objectToString = Object.prototype.toString;\n    var isArray = Array.isArray || function isArrayPolyfill(object) {\n            return objectToString.call(object) === '[object Array]';\n        };\n\n    function isFunction(object) {\n        return typeof object === 'function';\n    }\n\n    /**\n     * More correct typeof string handling array\n     * which normally returns typeof 'object'\n     */\n    function typeStr(obj) {\n        return isArray(obj) ? 'array' : typeof obj;\n    }\n\n    function escapeRegExp(string) {\n        return string.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, '\\\\$&');\n    }\n\n    /**\n     * Null safe way of checking whether or not an object,\n     * including its prototype, has a given property\n     */\n    function hasProperty(obj, propName) {\n        return obj != null && typeof obj === 'object' && (propName in obj);\n    }\n\n    // Workaround for https://issues.apache.org/jira/browse/COUCHDB-577\n    // See https://github.com/janl/mustache.js/issues/189\n    var regExpTest = RegExp.prototype.test;\n\n    function testRegExp(re, string) {\n        return regExpTest.call(re, string);\n    }\n\n    var nonSpaceRe = /\\S/;\n\n    function isWhitespace(string) {\n        return !testRegExp(nonSpaceRe, string);\n    }\n\n    var entityMap = {\n        '&': '&amp;', '<': '&lt;', '>': '&gt;', '\"': '&quot;', \"'\": '&#39;', '/': '&#x2F;'\n    };\n\n    function escapeHtml(string) {\n        return String(string).replace(/[&<>\"'\\/]/g, function fromEntityMap(s) {\n            return entityMap[s];\n        });\n    }\n\n    var whiteRe = /\\s*/;\n    var spaceRe = /\\s+/;\n    var equalsRe = /\\s*=/;\n    var curlyRe = /\\s*\\}/;\n    var tagRe = /#|\\^|\\/|>|\\{|&|=|!/;\n\n    /**\n     * Breaks up the given `template` string into a tree of tokens. If the `tags`\n     * argument is given here it must be an array with two string values: the\n     * opening and closing tags used in the template (e.g. [ \"<%\", \"%>\" ]). Of\n     * course, the default is to use mustaches (i.e. mustache.tags).\n     *\n     * A token is an array with at least 4 elements. The first element is the\n     * mustache symbol that was used inside the tag, e.g. \"#\" or \"&\". If the tag\n     * did not contain a symbol (i.e. {{myValue}}) this element is \"name\". For\n     * all text that appears outside a symbol this element is \"text\".\n     *\n     * The second element of a token is its \"value\". For mustache tags this is\n     * whatever else was inside the tag besides the opening symbol. For text tokens\n     * this is the text itself.\n     *\n     * The third and fourth elements of the token are the start and end indices,\n     * respectively, of the token in the original template.\n     *\n     * Tokens that are the root node of a subtree contain two more elements: 1) an\n     * array of tokens in the subtree and 2) the index in the original template at\n     * which the closing tag for that section begins.\n     */\n    function parseTemplate(template, tags) {\n        if (!template)\n            return [];\n\n        var sections = [];     // Stack to hold section tokens\n        var tokens = [];       // Buffer to hold the tokens\n        var spaces = [];       // Indices of whitespace tokens on the current line\n        var hasTag = false;    // Is there a {{tag}} on the current line?\n        var nonSpace = false;  // Is there a non-space char on the current line?\n\n        // Strips all whitespace tokens array for the current line\n        // if there was a {{#tag}} on it and otherwise only space.\n        function stripSpace() {\n            if (hasTag && !nonSpace) {\n                while (spaces.length)\n                    delete tokens[spaces.pop()];\n            }\n            else {\n                spaces = [];\n            }\n\n            hasTag = false;\n            nonSpace = false;\n        }\n\n        var openingTagRe, closingTagRe, closingCurlyRe;\n\n        function compileTags(tagsToCompile) {\n            if (typeof tagsToCompile === 'string')\n                tagsToCompile = tagsToCompile.split(spaceRe, 2);\n\n            if (!isArray(tagsToCompile) || tagsToCompile.length !== 2)\n                throw new Error('Invalid tags: ' + tagsToCompile);\n\n            openingTagRe = new RegExp(escapeRegExp(tagsToCompile[0]) + '\\\\s*');\n            closingTagRe = new RegExp('\\\\s*' + escapeRegExp(tagsToCompile[1]));\n            closingCurlyRe = new RegExp('\\\\s*' + escapeRegExp('}' + tagsToCompile[1]));\n        }\n\n        compileTags(tags || mustache.tags);\n\n        var scanner = new Scanner(template);\n\n        var start, type, value, chr, token, openSection;\n        while (!scanner.eos()) {\n            start = scanner.pos;\n\n            // Match any text between tags.\n            value = scanner.scanUntil(openingTagRe);\n\n            if (value) {\n                for (var i = 0, valueLength = value.length; i < valueLength; ++i) {\n                    chr = value.charAt(i);\n\n                    if (isWhitespace(chr)) {\n                        spaces.push(tokens.length);\n                    }\n                    else {\n                        nonSpace = true;\n                    }\n\n                    tokens.push(['text', chr, start, start + 1]);\n                    start += 1;\n\n                    // Check for whitespace on the current line.\n                    if (chr === '\\n')\n                        stripSpace();\n                }\n            }\n\n            // Match the opening tag.\n            if (!scanner.scan(openingTagRe))\n                break;\n\n            hasTag = true;\n\n            // Get the tag type.\n            type = scanner.scan(tagRe) || 'name';\n            scanner.scan(whiteRe);\n\n            // Get the tag value.\n            if (type === '=') {\n                value = scanner.scanUntil(equalsRe);\n                scanner.scan(equalsRe);\n                scanner.scanUntil(closingTagRe);\n            }\n            else if (type === '{') {\n                value = scanner.scanUntil(closingCurlyRe);\n                scanner.scan(curlyRe);\n                scanner.scanUntil(closingTagRe);\n                type = '&';\n            }\n            else {\n                value = scanner.scanUntil(closingTagRe);\n            }\n\n            // Match the closing tag.\n            if (!scanner.scan(closingTagRe))\n                throw new Error('Unclosed tag at ' + scanner.pos);\n\n            token = [type, value, start, scanner.pos];\n            tokens.push(token);\n\n            if (type === '#' || type === '^') {\n                sections.push(token);\n            }\n            else if (type === '/') {\n                // Check section nesting.\n                openSection = sections.pop();\n\n                if (!openSection)\n                    throw new Error('Unopened section \"' + value + '\" at ' + start);\n\n                if (openSection[1] !== value)\n                    throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + start);\n            }\n            else if (type === 'name' || type === '{' || type === '&') {\n                nonSpace = true;\n            }\n            else if (type === '=') {\n                // Set the tags for the next time around.\n                compileTags(value);\n            }\n        }\n\n        // Make sure there are no open sections when we're done.\n        openSection = sections.pop();\n\n        if (openSection)\n            throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + scanner.pos);\n\n        return nestTokens(squashTokens(tokens));\n    }\n\n    /**\n     * Combines the values of consecutive text tokens in the given `tokens` array\n     * to a single token.\n     */\n    function squashTokens(tokens) {\n        var squashedTokens = [];\n\n        var token, lastToken;\n        for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n            token = tokens[i];\n\n            if (token) {\n                if (token[0] === 'text' && lastToken && lastToken[0] === 'text') {\n                    lastToken[1] += token[1];\n                    lastToken[3] = token[3];\n                }\n                else {\n                    squashedTokens.push(token);\n                    lastToken = token;\n                }\n            }\n        }\n\n        return squashedTokens;\n    }\n\n    /**\n     * Forms the given array of `tokens` into a nested tree structure where\n     * tokens that represent a section have two additional items: 1) an array of\n     * all tokens that appear in that section and 2) the index in the original\n     * template that represents the end of that section.\n     */\n    function nestTokens(tokens) {\n        var nestedTokens = [];\n        var collector = nestedTokens;\n        var sections = [];\n\n        var token, section;\n        for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n            token = tokens[i];\n\n            switch (token[0]) {\n                case '#':\n                case '^':\n                    collector.push(token);\n                    sections.push(token);\n                    collector = token[4] = [];\n                    break;\n                case '/':\n                    section = sections.pop();\n                    section[5] = token[2];\n                    collector = sections.length > 0 ? sections[sections.length - 1][4] : nestedTokens;\n                    break;\n                default:\n                    collector.push(token);\n            }\n        }\n\n        return nestedTokens;\n    }\n\n    /**\n     * A simple string scanner that is used by the template parser to find\n     * tokens in template strings.\n     */\n    function Scanner(string) {\n        this.string = string;\n        this.tail = string;\n        this.pos = 0;\n    }\n\n    /**\n     * Returns `true` if the tail is empty (end of string).\n     */\n    Scanner.prototype.eos = function eos() {\n        return this.tail === '';\n    };\n\n    /**\n     * Tries to match the given regular expression at the current position.\n     * Returns the matched text if it can match, the empty string otherwise.\n     */\n    Scanner.prototype.scan = function scan(re) {\n        var match = this.tail.match(re);\n\n        if (!match || match.index !== 0)\n            return '';\n\n        var string = match[0];\n\n        this.tail = this.tail.substring(string.length);\n        this.pos += string.length;\n\n        return string;\n    };\n\n    /**\n     * Skips all text until the given regular expression can be matched. Returns\n     * the skipped string, which is the entire tail if no match can be made.\n     */\n    Scanner.prototype.scanUntil = function scanUntil(re) {\n        var index = this.tail.search(re), match;\n\n        switch (index) {\n            case -1:\n                match = this.tail;\n                this.tail = '';\n                break;\n            case 0:\n                match = '';\n                break;\n            default:\n                match = this.tail.substring(0, index);\n                this.tail = this.tail.substring(index);\n        }\n\n        this.pos += match.length;\n\n        return match;\n    };\n\n    /**\n     * Represents a rendering context by wrapping a view object and\n     * maintaining a reference to the parent context.\n     */\n    function Context(view, parentContext) {\n        this.view = view;\n        this.cache = {\n            '.': this.view,\n            '@each': function () {\n                var returns = [];\n                for (var k in this) {\n                    returns.push({'@key': k, '@value': this[k]});\n                }\n                return returns;\n            }\n        };\n        this.parent = parentContext;\n    }\n\n    /**\n     * Creates a new context using the given view with this context\n     * as the parent.\n     */\n    Context.prototype.push = function push(view) {\n        return new Context(view, this);\n    };\n\n    /**\n     * Returns the value of the given name in this context, traversing\n     * up the context hierarchy if the value is absent in this context's view.\n     */\n    Context.prototype.lookup = function lookup(name) {\n        var cache = this.cache;\n\n        var value;\n        if (cache.hasOwnProperty(name)) {\n            value = cache[name];\n        }\n        else {\n            var context = this, names, index, lookupHit = false;\n\n            while (context) {\n                if (name.indexOf('.') > 0) {\n                    value = context.view;\n                    names = name.split('.');\n                    index = 0;\n\n                    /**\n                     * Using the dot notion path in `name`, we descend through the\n                     * nested objects.\n                     *\n                     * To be certain that the lookup has been successful, we have to\n                     * check if the last object in the path actually has the property\n                     * we are looking for. We store the result in `lookupHit`.\n                     *\n                     * This is specially necessary for when the value has been set to\n                     * `undefined` and we want to avoid looking up parent contexts.\n                     **/\n                    while (value != null && index < names.length) {\n                        if (index === names.length - 1)\n                            lookupHit = hasProperty(value, names[index]);\n\n                        value = value[names[index++]];\n                    }\n                }\n                else {\n                    value = context.view[name];\n                    lookupHit = hasProperty(context.view, name);\n                }\n\n                if (lookupHit)\n                    break;\n\n                context = context.parent;\n            }\n\n            cache[name] = value;\n        }\n\n        if (isFunction(value))\n            value = value.call(this.view);\n\n        return value;\n    };\n\n    /**\n     * A Writer knows how to take a stream of tokens and render them to a\n     * string, given a context. It also maintains a cache of templates to\n     * avoid the need to parse the same template twice.\n     */\n    function Writer() {\n        this.cache = {};\n    }\n\n    /**\n     * Clears all cached templates in this writer.\n     */\n    Writer.prototype.clearCache = function clearCache() {\n        this.cache = {};\n    };\n\n    /**\n     * Parses and caches the given `template` and returns the array of tokens\n     * that is generated from the parse.\n     */\n    Writer.prototype.parse = function parse(template, tags) {\n        var cache = this.cache;\n        var tokens = cache[template];\n\n        if (tokens == null)\n            tokens = cache[template] = parseTemplate(template, tags);\n\n        return tokens;\n    };\n\n    /**\n     * High-level method that is used to render the given `template` with\n     * the given `view`.\n     *\n     * The optional `partials` argument may be an object that contains the\n     * names and templates of partials that are used in the template. It may\n     * also be a function that is used to load partial templates on the fly\n     * that takes a single argument: the name of the partial.\n     */\n    Writer.prototype.render = function render(template, view, partials) {\n        var tokens = this.parse(template);\n        var context = (view instanceof Context) ? view : new Context(view);\n        return this.renderTokens(tokens, context, partials, template);\n    };\n\n    /**\n     * Low-level method that renders the given array of `tokens` using\n     * the given `context` and `partials`.\n     *\n     * Note: The `originalTemplate` is only ever used to extract the portion\n     * of the original template that was contained in a higher-order section.\n     * If the template doesn't use higher-order sections, this argument may\n     * be omitted.\n     */\n    Writer.prototype.renderTokens = function renderTokens(tokens, context, partials, originalTemplate) {\n        var buffer = '';\n        var token, symbol, value;\n        for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n            value = undefined;\n            token = tokens[i];\n            symbol = token[0];\n\n            if (symbol === '#') value = this.renderSection(token, context, partials, originalTemplate);\n            else if (symbol === '^') value = this.renderInverted(token, context, partials, originalTemplate);\n            else if (symbol === '>') value = this.renderPartial(token, context, partials, originalTemplate);\n            else if (symbol === '&') value = this.unescapedValue(token, context);\n            else if (symbol === 'name') value = this.escapedValue(token, context);\n            else if (symbol === 'text') value = this.rawValue(token);\n\n            if (value !== undefined)\n                buffer += value;\n        }\n\n        return buffer;\n    };\n\n    Writer.prototype.renderSection = function renderSection(token, context, partials, originalTemplate) {\n        var self = this;\n        var buffer = '';\n\n        var value = context.lookup(token[1]);\n\n        // This function is used to render an arbitrary template\n        // in the current context by higher-order sections.\n        function subRender(template) {\n            return self.render(template, context, partials);\n        }\n\n        if (!value) return;\n\n        if (isArray(value)) {\n            for (var j = 0, valueLength = value.length; j < valueLength; ++j) {\n                if(value[j]) {\n                    value[j]['@i'] = j;\n                    value[j]['@first'] = (j === 0);\n                    buffer += this.renderTokens(token[4], context.push(value[j]), partials, originalTemplate);\n                }\n            }\n        }\n        else if (typeof value === 'object' || typeof value === 'string' || typeof value === 'number') {\n            buffer += this.renderTokens(token[4], context.push(value), partials, originalTemplate);\n        }\n        else if (isFunction(value)) {\n            if (typeof originalTemplate !== 'string')\n                throw new Error('Cannot use higher-order sections without the original template');\n\n            // Extract the portion of the original template that the section contains.\n            value = value.call(context.view, originalTemplate.slice(token[3], token[5]), subRender);\n\n            if (value != null)\n                buffer += value;\n        }\n        else {\n            buffer += this.renderTokens(token[4], context, partials, originalTemplate);\n        }\n        return buffer;\n    };\n\n    Writer.prototype.renderInverted = function renderInverted(token, context, partials, originalTemplate) {\n        var value = context.lookup(token[1]);\n\n        // Use JavaScript's definition of falsy. Include empty arrays.\n        // See https://github.com/janl/mustache.js/issues/186\n        if (!value || (isArray(value) && value.length === 0))\n            return this.renderTokens(token[4], context, partials, originalTemplate);\n    };\n\n    Writer.prototype.renderPartial = function renderPartial(token, context, partials) {\n        if (!partials) return;\n\n        var value = isFunction(partials) ? partials(token[1]) : partials[token[1]];\n        if (value != null)\n            return this.renderTokens(this.parse(value), context, partials, value);\n    };\n\n    Writer.prototype.unescapedValue = function unescapedValue(token, context) {\n        var value = context.lookup(token[1]);\n        if (value != null)\n            return value;\n    };\n\n    Writer.prototype.escapedValue = function escapedValue(token, context) {\n        var value = context.lookup(token[1]);\n        if (value != null)\n            return mustache.escape(value);\n    };\n\n    Writer.prototype.rawValue = function rawValue(token) {\n        return token[1];\n    };\n\n    mustache.name = 'mustache.js';\n    mustache.version = '2.1.3';\n    mustache.tags = ['{{', '}}'];\n\n    // All high-level mustache.* functions use this writer.\n    var defaultWriter = new Writer();\n\n    /**\n     * Clears all cached templates in the default writer.\n     */\n    mustache.clearCache = function clearCache() {\n        return defaultWriter.clearCache();\n    };\n\n    /**\n     * Parses and caches the given template in the default writer and returns the\n     * array of tokens it contains. Doing this ahead of time avoids the need to\n     * parse templates on the fly as they are rendered.\n     */\n    mustache.parse = function parse(template, tags) {\n        return defaultWriter.parse(template, tags);\n    };\n\n    /**\n     * Renders the `template` with the given `view` and `partials` using the\n     * default writer.\n     */\n    mustache.render = function render(template, view, partials) {\n        if (typeof template !== 'string') {\n            throw new TypeError('Invalid template! Template should be a \"string\" ' + 'but \"' + typeStr(template) + '\" was given as the first ' + 'argument for mustache#render(template, view, partials)');\n        }\n\n        return defaultWriter.render(template, view, partials);\n    };\n\n    // This is here for backwards compatibility with 0.4.x.,\n    /*eslint-disable */ // eslint wants camel cased function name\n    mustache.to_html = function to_html(template, view, partials, send) {\n        /*eslint-enable*/\n\n        var result = mustache.render(template, view, partials);\n\n        if (isFunction(send)) {\n            send(result);\n        }\n        else {\n            return result;\n        }\n    };\n\n    // Export the escaping function so that the user may override it.\n    // See https://github.com/janl/mustache.js/issues/244\n    mustache.escape = escapeHtml;\n\n    // Export these mainly for testing, but also for advanced usage.\n    mustache.Scanner = Scanner;\n    mustache.Context = Context;\n    mustache.Writer = Writer;\n\n}));"]}